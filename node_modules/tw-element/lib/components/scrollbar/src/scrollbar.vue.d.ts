import type { StyleValue } from 'vue';
declare const _default: import("vue").DefineComponent<{
    readonly height: import("tw-element/es/utils").BuildPropReturn<readonly [StringConstructor, NumberConstructor], "", unknown, unknown, unknown>;
    readonly maxHeight: import("tw-element/es/utils").BuildPropReturn<readonly [StringConstructor, NumberConstructor], "", unknown, unknown, unknown>;
    readonly native: import("tw-element/es/utils").BuildPropReturn<BooleanConstructor, false, unknown, unknown, unknown>;
    readonly wrapStyle: import("tw-element/es/utils").BuildPropReturn<import("tw-element/es/utils").PropWrapper<StyleValue>, "", unknown, unknown, unknown>;
    readonly wrapClass: import("tw-element/es/utils").BuildPropReturn<readonly [StringConstructor, ArrayConstructor], "", unknown, unknown, unknown>;
    readonly viewClass: import("tw-element/es/utils").BuildPropReturn<readonly [StringConstructor, ArrayConstructor], "", unknown, unknown, unknown>;
    readonly viewStyle: import("tw-element/es/utils").BuildPropReturn<readonly [StringConstructor, ArrayConstructor], "", unknown, unknown, unknown>;
    readonly noresize: BooleanConstructor;
    readonly tag: import("tw-element/es/utils").BuildPropReturn<StringConstructor, "div", unknown, unknown, unknown>;
    readonly always: import("tw-element/es/utils").BuildPropReturn<BooleanConstructor, false, unknown, unknown, unknown>;
    readonly minSize: import("tw-element/es/utils").BuildPropReturn<NumberConstructor, 20, unknown, unknown, unknown>;
}, {
    ns: {
        namespace: import("vue").ComputedRef<string>;
        b: (blockSuffix?: string) => string;
        e: (element?: string | undefined) => string;
        m: (modifier?: string | undefined) => string;
        be: (blockSuffix?: string | undefined, element?: string | undefined) => string;
        em: (element?: string | undefined, modifier?: string | undefined) => string;
        bm: (blockSuffix?: string | undefined, modifier?: string | undefined) => string;
        bem: (blockSuffix?: string | undefined, element?: string | undefined, modifier?: string | undefined) => string;
        is: {
            (name: string, state: boolean | undefined): string;
            (name: string): string;
        };
    };
    scrollbar$: import("vue").Ref<HTMLDivElement | undefined>;
    wrap$: import("vue").Ref<HTMLDivElement | undefined>;
    resize$: import("vue").Ref<HTMLElement | undefined>;
    barRef: import("vue").Ref<any>;
    moveX: import("vue").Ref<number>;
    moveY: import("vue").Ref<number>;
    ratioX: import("vue").Ref<number>;
    ratioY: import("vue").Ref<number>;
    sizeWidth: import("vue").Ref<string>;
    sizeHeight: import("vue").Ref<string>;
    style: import("vue").ComputedRef<StyleValue>;
    update: () => void;
    handleScroll: () => void;
    setScrollTop: (value: number) => void;
    setScrollLeft: (value: number) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    scroll: ({ scrollTop, scrollLeft, }: {
        scrollTop: number;
        scrollLeft: number;
    }) => boolean;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    readonly height: import("tw-element/es/utils").BuildPropReturn<readonly [StringConstructor, NumberConstructor], "", unknown, unknown, unknown>;
    readonly maxHeight: import("tw-element/es/utils").BuildPropReturn<readonly [StringConstructor, NumberConstructor], "", unknown, unknown, unknown>;
    readonly native: import("tw-element/es/utils").BuildPropReturn<BooleanConstructor, false, unknown, unknown, unknown>;
    readonly wrapStyle: import("tw-element/es/utils").BuildPropReturn<import("tw-element/es/utils").PropWrapper<StyleValue>, "", unknown, unknown, unknown>;
    readonly wrapClass: import("tw-element/es/utils").BuildPropReturn<readonly [StringConstructor, ArrayConstructor], "", unknown, unknown, unknown>;
    readonly viewClass: import("tw-element/es/utils").BuildPropReturn<readonly [StringConstructor, ArrayConstructor], "", unknown, unknown, unknown>;
    readonly viewStyle: import("tw-element/es/utils").BuildPropReturn<readonly [StringConstructor, ArrayConstructor], "", unknown, unknown, unknown>;
    readonly noresize: BooleanConstructor;
    readonly tag: import("tw-element/es/utils").BuildPropReturn<StringConstructor, "div", unknown, unknown, unknown>;
    readonly always: import("tw-element/es/utils").BuildPropReturn<BooleanConstructor, false, unknown, unknown, unknown>;
    readonly minSize: import("tw-element/es/utils").BuildPropReturn<NumberConstructor, 20, unknown, unknown, unknown>;
}>> & {
    onScroll?: ((args_0: {
        scrollTop: number;
        scrollLeft: number;
    }) => any) | undefined;
}, {
    height: import("tw-element/es/utils").BuildPropType<readonly [StringConstructor, NumberConstructor], unknown, unknown>;
    always: import("tw-element/es/utils").BuildPropType<BooleanConstructor, unknown, unknown>;
    maxHeight: import("tw-element/es/utils").BuildPropType<readonly [StringConstructor, NumberConstructor], unknown, unknown>;
    native: import("tw-element/es/utils").BuildPropType<BooleanConstructor, unknown, unknown>;
    wrapStyle: StyleValue;
    wrapClass: import("tw-element/es/utils").BuildPropType<readonly [StringConstructor, ArrayConstructor], unknown, unknown>;
    viewClass: import("tw-element/es/utils").BuildPropType<readonly [StringConstructor, ArrayConstructor], unknown, unknown>;
    viewStyle: import("tw-element/es/utils").BuildPropType<readonly [StringConstructor, ArrayConstructor], unknown, unknown>;
    tag: string;
    minSize: number;
    noresize: boolean;
}>;
export default _default;
