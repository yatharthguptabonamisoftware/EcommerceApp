{"ast":null,"code":"import { defineComponent, getCurrentInstance, reactive, inject, computed, onMounted, toRefs, onUnmounted, withDirectives, openBlock, createElementBlock, normalizeClass, normalizeStyle, vShow, createCommentVNode, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nconst CARD_SCALE = 0.83;\nconst _sfc_main = defineComponent({\n  name: \"TwCarouselItem\",\n  props: {\n    name: {\n      type: String,\n      default: \"\"\n    },\n    label: {\n      type: [String, Number],\n      default: \"\"\n    }\n  },\n  setup(props) {\n    const ns = useNamespace(\"carousel\");\n    const instance = getCurrentInstance();\n    const data = reactive({\n      hover: false,\n      translate: 0,\n      scale: 1,\n      active: false,\n      ready: false,\n      inStage: false,\n      animating: false\n    });\n    const injectCarouselScope = inject(\"injectCarouselScope\");\n    const parentDirection = computed(() => {\n      return injectCarouselScope.direction;\n    });\n    const itemStyle = computed(() => {\n      const translateType = parentDirection.value === \"vertical\" ? \"translateY\" : \"translateX\";\n      const value = `${translateType}(${data.translate}px) scale(${data.scale})`;\n      const style = {\n        transform: value\n      };\n      return style;\n    });\n    function processIndex(index, activeIndex, length) {\n      if (activeIndex === 0 && index === length - 1) {\n        return -1;\n      } else if (activeIndex === length - 1 && index === 0) {\n        return length;\n      } else if (index < activeIndex - 1 && activeIndex - index >= length / 2) {\n        return length + 1;\n      } else if (index > activeIndex + 1 && index - activeIndex >= length / 2) {\n        return -2;\n      }\n      return index;\n    }\n    function calcCardTranslate(index, activeIndex) {\n      var _a;\n      const parentWidth = ((_a = injectCarouselScope.root.value) == null ? void 0 : _a.offsetWidth) || 0;\n      if (data.inStage) {\n        return parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1) / 4;\n      } else if (index < activeIndex) {\n        return -(1 + CARD_SCALE) * parentWidth / 4;\n      } else {\n        return (3 + CARD_SCALE) * parentWidth / 4;\n      }\n    }\n    function calcTranslate(index, activeIndex, isVertical) {\n      var _a, _b;\n      const distance = (isVertical ? (_a = injectCarouselScope.root.value) == null ? void 0 : _a.offsetHeight : (_b = injectCarouselScope.root.value) == null ? void 0 : _b.offsetWidth) || 0;\n      return distance * (index - activeIndex);\n    }\n    const translateItem = (index, activeIndex, oldIndex) => {\n      const parentType = injectCarouselScope.type;\n      const length = injectCarouselScope.items.value.length;\n      if (parentType !== \"card\" && oldIndex !== void 0) {\n        data.animating = index === activeIndex || index === oldIndex;\n      }\n      if (index !== activeIndex && length > 2 && injectCarouselScope.loop) {\n        index = processIndex(index, activeIndex, length);\n      }\n      if (parentType === \"card\") {\n        if (parentDirection.value === \"vertical\") {\n          debugWarn(\"Carousel\", \"vertical direction is not supported in card mode\");\n        }\n        data.inStage = Math.round(Math.abs(index - activeIndex)) <= 1;\n        data.active = index === activeIndex;\n        data.translate = calcCardTranslate(index, activeIndex);\n        data.scale = data.active ? 1 : CARD_SCALE;\n      } else {\n        data.active = index === activeIndex;\n        const isVertical = parentDirection.value === \"vertical\";\n        data.translate = calcTranslate(index, activeIndex, isVertical);\n      }\n      data.ready = true;\n    };\n    function handleItemClick() {\n      if (injectCarouselScope && injectCarouselScope.type === \"card\") {\n        const index = injectCarouselScope.items.value.map(d => d.uid).indexOf(instance.uid);\n        injectCarouselScope.setActiveItem(index);\n      }\n    }\n    onMounted(() => {\n      if (injectCarouselScope.addItem) {\n        injectCarouselScope.addItem({\n          uid: instance.uid,\n          ...props,\n          ...toRefs(data),\n          translateItem\n        });\n      }\n    });\n    onUnmounted(() => {\n      if (injectCarouselScope.removeItem) {\n        injectCarouselScope.removeItem(instance.uid);\n      }\n    });\n    return {\n      data,\n      itemStyle,\n      translateItem,\n      type: injectCarouselScope.type,\n      handleItemClick,\n      ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.e(\"item\"), _ctx.ns.is(\"active\", _ctx.data.active), _ctx.ns.is(\"in-stage\", _ctx.data.inStage), _ctx.ns.is(\"hover\", _ctx.data.hover), _ctx.ns.is(\"animating\", _ctx.data.animating), {\n      [_ctx.ns.em(\"item\", \"card\")]: _ctx.type === \"card\"\n    }]),\n    style: normalizeStyle(_ctx.itemStyle),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleItemClick && _ctx.handleItemClick(...args))\n  }, [_ctx.type === \"card\" ? withDirectives((openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"mask\"))\n  }, null, 2)), [[vShow, !_ctx.data.active]]) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")], 6)), [[vShow, _ctx.data.ready]]);\n}\nvar CarouselItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { CarouselItem as default };","map":{"version":3,"names":["CARD_SCALE","_sfc_main","defineComponent","name","props","type","String","default","label","Number","setup","ns","useNamespace","instance","getCurrentInstance","data","reactive","hover","translate","scale","active","ready","inStage","animating","injectCarouselScope","inject","parentDirection","computed","direction","itemStyle","translateType","value","style","transform","processIndex","index","activeIndex","length","calcCardTranslate","_a","parentWidth","root","offsetWidth","calcTranslate","isVertical","_b","distance","offsetHeight","translateItem","oldIndex","parentType","items","loop","debugWarn","Math","round","abs","handleItemClick","map","d","uid","indexOf","setActiveItem","onMounted","addItem","toRefs","onUnmounted","removeItem","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","withDirectives","openBlock","createElementBlock","class","normalizeClass","e","is","onClick","args","vShow","renderSlot","$slots"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/carousel/src/item.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"data.ready\"\n    :class=\"[\n      ns.e('item'),\n      ns.is('active', data.active),\n      ns.is('in-stage', data.inStage),\n      ns.is('hover', data.hover),\n      ns.is('animating', data.animating),\n      { [ns.em('item', 'card')]: type === 'card' },\n    ]\"\n    :style=\"itemStyle\"\n    @click=\"handleItemClick\"\n  >\n    <div\n      v-if=\"type === 'card'\"\n      v-show=\"!data.active\"\n      :class=\"ns.e('mask')\"\n    ></div>\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  reactive,\n  onMounted,\n  inject,\n  computed,\n  toRefs,\n  getCurrentInstance,\n  onUnmounted,\n} from 'vue'\nimport { debugWarn } from '@tw-element/utils'\nimport { useNamespace } from '@tw-element/hooks'\nimport type { CSSProperties } from 'vue'\nimport type { InjectCarouselScope, ICarouselItemProps } from './carousel'\n\nconst CARD_SCALE = 0.83\nexport default defineComponent({\n  name: 'TwCarouselItem',\n  props: {\n    name: { type: String, default: '' },\n    label: {\n      type: [String, Number],\n      default: '',\n    },\n  },\n  setup(props: ICarouselItemProps) {\n    const ns = useNamespace('carousel')\n    // instance\n    const instance = getCurrentInstance()\n\n    // data\n    const data = reactive({\n      hover: false,\n      translate: 0,\n      scale: 1,\n      active: false,\n      ready: false,\n      inStage: false,\n      animating: false,\n    })\n\n    // inject\n    const injectCarouselScope: InjectCarouselScope = inject(\n      'injectCarouselScope'\n    )\n\n    // computed\n    const parentDirection = computed(() => {\n      return injectCarouselScope.direction\n    })\n\n    const itemStyle = computed(() => {\n      const translateType =\n        parentDirection.value === 'vertical' ? 'translateY' : 'translateX'\n      const value = `${translateType}(${data.translate}px) scale(${data.scale})`\n      const style: CSSProperties = {\n        transform: value,\n      }\n      return style\n    })\n\n    // methods\n\n    function processIndex(index, activeIndex, length) {\n      if (activeIndex === 0 && index === length - 1) {\n        return -1\n      } else if (activeIndex === length - 1 && index === 0) {\n        return length\n      } else if (index < activeIndex - 1 && activeIndex - index >= length / 2) {\n        return length + 1\n      } else if (index > activeIndex + 1 && index - activeIndex >= length / 2) {\n        return -2\n      }\n      return index\n    }\n\n    function calcCardTranslate(index, activeIndex) {\n      const parentWidth = injectCarouselScope.root.value?.offsetWidth || 0\n      if (data.inStage) {\n        return (\n          (parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1)) / 4\n        )\n      } else if (index < activeIndex) {\n        return (-(1 + CARD_SCALE) * parentWidth) / 4\n      } else {\n        return ((3 + CARD_SCALE) * parentWidth) / 4\n      }\n    }\n\n    function calcTranslate(index, activeIndex, isVertical) {\n      const distance =\n        (isVertical\n          ? injectCarouselScope.root.value?.offsetHeight\n          : injectCarouselScope.root.value?.offsetWidth) || 0\n      return distance * (index - activeIndex)\n    }\n\n    const translateItem = (\n      index: number,\n      activeIndex: number,\n      oldIndex: number\n    ) => {\n      const parentType = injectCarouselScope.type\n      const length = injectCarouselScope.items.value.length\n      if (parentType !== 'card' && oldIndex !== undefined) {\n        data.animating = index === activeIndex || index === oldIndex\n      }\n      if (index !== activeIndex && length > 2 && injectCarouselScope.loop) {\n        index = processIndex(index, activeIndex, length)\n      }\n      if (parentType === 'card') {\n        if (parentDirection.value === 'vertical') {\n          debugWarn(\n            'Carousel',\n            'vertical direction is not supported in card mode'\n          )\n        }\n        data.inStage = Math.round(Math.abs(index - activeIndex)) <= 1\n        data.active = index === activeIndex\n        data.translate = calcCardTranslate(index, activeIndex)\n        data.scale = data.active ? 1 : CARD_SCALE\n      } else {\n        data.active = index === activeIndex\n        const isVertical = parentDirection.value === 'vertical'\n        data.translate = calcTranslate(index, activeIndex, isVertical)\n      }\n      data.ready = true\n    }\n\n    function handleItemClick() {\n      if (injectCarouselScope && injectCarouselScope.type === 'card') {\n        const index = injectCarouselScope.items.value\n          .map((d) => d.uid)\n          .indexOf(instance.uid)\n        injectCarouselScope.setActiveItem(index)\n      }\n    }\n\n    // lifecycle\n    onMounted(() => {\n      if (injectCarouselScope.addItem) {\n        injectCarouselScope.addItem({\n          uid: instance.uid,\n          ...props,\n          ...toRefs(data),\n          translateItem,\n        })\n      }\n    })\n\n    onUnmounted(() => {\n      if (injectCarouselScope.removeItem) {\n        injectCarouselScope.removeItem(instance.uid)\n      }\n    })\n\n    return {\n      data,\n      itemStyle,\n      translateItem,\n      type: injectCarouselScope.type,\n      handleItemClick,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}