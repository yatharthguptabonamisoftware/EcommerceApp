{"ast":null,"code":"import '../types.mjs';\nimport { debugWarn } from '../error.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber } from '@vueuse/core';\nconst SCOPE = \"utils/vue/style\";\nfunction addUnit(value, defaultUnit = \"px\") {\n  if (!value) return \"\";\n  if (isString(value)) {\n    return value;\n  } else if (isNumber(value)) {\n    return `${value}${defaultUnit}`;\n  }\n  debugWarn(SCOPE, \"binding value must be a string or number\");\n}\nexport { addUnit };","map":{"version":3,"names":["SCOPE","addUnit","value","defaultUnit","isString","isNumber","debugWarn"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/utils/vue/style.ts"],"sourcesContent":["import { isString, isNumber } from '../types'\nimport { debugWarn } from '../error'\n\nconst SCOPE = 'utils/vue/style'\n\nexport function addUnit(value: string | number, defaultUnit = 'px') {\n  if (!value) return ''\n  if (isString(value)) {\n    return value\n  } else if (isNumber(value)) {\n    return `${value}${defaultUnit}`\n  }\n  debugWarn(SCOPE, 'binding value must be a string or number')\n}\n"],"mappings":";;;;AAEA,MAAMA,KAAK,GAAG,iBAAiB;AACxB,SAASC,OAAOA,CAACC,KAAK,EAAEC,WAAW,GAAG,IAAI,EAAE;EACjD,IAAI,CAACD,KAAK,EACR,OAAO,EAAE;EACX,IAAIE,QAAQ,CAACF,KAAK,CAAC,EAAE;IACnB,OAAOA,KAAK;EAChB,CAAG,MAAM,IAAIG,QAAQ,CAACH,KAAK,CAAC,EAAE;IAC1B,OAAQ,GAAEA,KAAM,GAAEC,WAAY,EAAC;EACnC;EACEG,SAAS,CAACN,KAAK,EAAE,0CAA0C,CAAC;AAC9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}