{"ast":null,"code":"var _jsxFileName = \"/home/bonami/Desktop/Projects/ECommerce/src/components/AdressForm.js\";\nimport React from 'react';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().email('Invalid email address').required('Email is required')\n});\nfunction MyForm() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Formik Form with Error Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: '',\n        email: ''\n      },\n      validationSchema: validationSchema,\n      onSubmit: (values, actions) => {\n        // Handle form submission\n        console.log('Form submitted:', values);\n        actions.setSubmitting(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"div\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 2\n  }, this);\n}\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","Formik","Field","ErrorMessage","Form","Yup","jsxDEV","_jsxDEV","validationSchema","object","shape","name","string","required","email","MyForm","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","onSubmit","values","actions","console","log","setSubmitting","htmlFor","type","id","component","className","_c","$RefreshReg$"],"sources":["/home/bonami/Desktop/Projects/ECommerce/src/components/AdressForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n name: Yup.string().required('Name is required'),\n email: Yup.string().email('Invalid email address').required('Email is required'),\n});\n\nfunction MyForm() {\n return (\n <div>\n <h1>Formik Form with Error Messages</h1>\n <Formik\n initialValues={{ name: '', email: '' }}\n validationSchema={validationSchema}\n onSubmit={(values, actions) => {\n // Handle form submission\n console.log('Form submitted:', values);\n actions.setSubmitting(false);\n }}\n >\n <Form>\n <div>\n <label htmlFor=\"name\">Name</label>\n <Field type=\"text\" id=\"name\" name=\"name\" />\n <ErrorMessage name=\"name\" component=\"div\" className=\"error\" />\n </div>\n\n <div>\n <label htmlFor=\"email\">Email</label>\n <Field type=\"text\" id=\"email\" name=\"email\" />\n <ErrorMessage name=\"email\" component=\"div\" className=\"error\" />\n </div>\n\n <button type=\"submit\">Submit</button>\n </Form>\n </Formik>\n </div>\n );\n}\n\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}