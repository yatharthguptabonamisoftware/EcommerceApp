{"ast":null,"code":"import { defineComponent, vModelText, provide, reactive, toRefs, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, renderSlot, createCommentVNode, normalizeStyle, toDisplayString, createBlock, Fragment, renderList, withKeys, resolveDynamicComponent, vShow, normalizeProps, guardReactiveProps } from 'vue';\nimport '../../../directives/index.mjs';\nimport { TwTooltip } from '../../tooltip/index.mjs';\nimport { TwTag } from '../../tag/index.mjs';\nimport { TwIcon } from '../../icon/index.mjs';\nimport '../../../constants/index.mjs';\nimport _sfc_main$1 from './select-dropdown.mjs';\nimport useSelect from './useSelect.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport { SelectProps } from './defaults.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwSelectV2\",\n  components: {\n    TwSelectMenu: _sfc_main$1,\n    TwTag,\n    ElTooltip: TwTooltip,\n    TwIcon\n  },\n  directives: {\n    ClickOutside,\n    ModelText: vModelText\n  },\n  props: SelectProps,\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"remove-tag\", \"clear\", \"visible-change\", \"focus\", \"blur\"],\n  setup(props, {\n    emit\n  }) {\n    const API = useSelect(props, emit);\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight\n      }),\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect\n    });\n    return API;\n  }\n});\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"id\", \"autocomplete\", \"aria-expanded\", \"aria-labelledby\", \"disabled\", \"readonly\", \"name\", \"unselectable\"];\nconst _hoisted_3 = [\"textContent\"];\nconst _hoisted_4 = [\"id\", \"aria-labelledby\", \"aria-expanded\", \"autocomplete\", \"disabled\", \"name\", \"readonly\", \"unselectable\"];\nconst _hoisted_5 = [\"textContent\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  const _directive_model_text = resolveDirective(\"model-text\");\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectRef\",\n    class: normalizeClass([_ctx.nsSelectV2.b(), _ctx.nsSelectV2.m(_ctx.selectSize)]),\n    onClick: _cache[24] || (_cache[24] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"stop\"])),\n    onMouseenter: _cache[25] || (_cache[25] = $event => _ctx.states.comboBoxHovering = true),\n    onMouseleave: _cache[26] || (_cache[26] = $event => _ctx.states.comboBoxHovering = false)\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"popper\",\n    visible: _ctx.dropdownMenuVisible,\n    \"onUpdate:visible\": _cache[22] || (_cache[22] = $event => _ctx.dropdownMenuVisible = $event),\n    teleported: _ctx.compatTeleported,\n    \"popper-class\": [_ctx.nsSelectV2.e(\"popper\"), _ctx.popperClass],\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    effect: _ctx.effect,\n    placement: \"bottom-start\",\n    pure: \"\",\n    transition: `${_ctx.nsSelectV2.namespace.value}-zoom-in-top`,\n    trigger: \"click\",\n    persistent: \"\",\n    onShow: _ctx.handleMenuEnter,\n    onHide: _cache[23] || (_cache[23] = $event => _ctx.states.inputValue = _ctx.states.displayInputValue)\n  }, {\n    default: withCtx(() => {\n      var _a;\n      return [createElementVNode(\"div\", {\n        ref: \"selectionRef\",\n        class: normalizeClass([_ctx.nsSelectV2.e(\"wrapper\"), _ctx.nsSelectV2.is(\"focused\", _ctx.states.isComposing), _ctx.nsSelectV2.is(\"hovering\", _ctx.states.comboBoxHovering), _ctx.nsSelectV2.is(\"filterable\", _ctx.filterable), _ctx.nsSelectV2.is(\"disabled\", _ctx.disabled)])\n      }, [_ctx.$slots.prefix ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"prefix\")])) : createCommentVNode(\"v-if\", true), _ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"selection\"))\n      }, [_ctx.collapseTags && _ctx.modelValue.length > 0 ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n      }, [createVNode(_component_el_tag, {\n        closable: !_ctx.selectDisabled && !((_a = _ctx.states.cachedOptions[0]) == null ? void 0 : _a.disable),\n        size: _ctx.collapseTagSize,\n        type: \"info\",\n        \"disable-transitions\": \"\",\n        onClose: _cache[0] || (_cache[0] = $event => _ctx.deleteTag($event, _ctx.states.cachedOptions[0]))\n      }, {\n        default: withCtx(() => {\n          var _a2;\n          return [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, toDisplayString((_a2 = _ctx.states.cachedOptions[0]) == null ? void 0 : _a2.label), 7)];\n        }),\n        _: 1\n      }, 8, [\"closable\", \"size\"]), _ctx.modelValue.length > 1 ? (openBlock(), createBlock(_component_el_tag, {\n        key: 0,\n        closable: false,\n        size: _ctx.collapseTagSize,\n        type: \"info\",\n        \"disable-transitions\": \"\"\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n          style: normalizeStyle({\n            maxWidth: `${_ctx.tagMaxWidth}px`\n          })\n        }, \"+ \" + toDisplayString(_ctx.modelValue.length - 1), 7)]),\n        _: 1\n      }, 8, [\"size\"])) : createCommentVNode(\"v-if\", true)], 2)) : (openBlock(true), createElementBlock(Fragment, {\n        key: 1\n      }, renderList(_ctx.states.cachedOptions, (selected, idx) => {\n        return openBlock(), createElementBlock(\"div\", {\n          key: idx,\n          class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n        }, [(openBlock(), createBlock(_component_el_tag, {\n          key: _ctx.getValueKey(selected),\n          closable: !_ctx.selectDisabled && !selected.disabled,\n          size: _ctx.collapseTagSize,\n          type: \"info\",\n          \"disable-transitions\": \"\",\n          onClose: $event => _ctx.deleteTag($event, selected)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, toDisplayString(_ctx.getLabel(selected)), 7)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"onClose\"]))], 2);\n      }), 128)), createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-wrapper\")]),\n        style: normalizeStyle(_ctx.inputWrapperStyle)\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.id,\n        ref: \"inputRef\",\n        autocomplete: _ctx.autocomplete,\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        autocapitalize: \"off\",\n        \"aria-expanded\": _ctx.expanded,\n        \"aria-labelledby\": _ctx.label,\n        class: normalizeClass([_ctx.nsSelectV2.is(_ctx.selectSize), _ctx.nsSelectV2.e(\"combobox-input\")]),\n        disabled: _ctx.disabled,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        name: _ctx.name,\n        unselectable: _ctx.expanded ? \"on\" : void 0,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args)),\n        onFocus: _cache[2] || (_cache[2] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onInput: _cache[3] || (_cache[3] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n        onCompositionstart: _cache[4] || (_cache[4] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n        onCompositionupdate: _cache[5] || (_cache[5] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n        onCompositionend: _cache[6] || (_cache[6] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n        onKeydown: [_cache[7] || (_cache[7] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[9] || (_cache[9] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[10] || (_cache[10] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"])), _cache[11] || (_cache[11] = withKeys(withModifiers((...args) => _ctx.handleDel && _ctx.handleDel(...args), [\"stop\"]), [\"delete\"]))]\n      }, null, 42, _hoisted_2), [[_directive_model_text, _ctx.states.displayInputValue]]), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass(_ctx.nsSelectV2.e(\"input-calculator\")),\n        textContent: toDisplayString(_ctx.states.displayInputValue)\n      }, null, 10, _hoisted_3)) : createCommentVNode(\"v-if\", true)], 6)], 2)) : (openBlock(), createElementBlock(Fragment, {\n        key: 2\n      }, [createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-wrapper\")])\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.id,\n        ref: \"inputRef\",\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-labelledby\": _ctx.label,\n        \"aria-expanded\": _ctx.expanded,\n        autocapitalize: \"off\",\n        autocomplete: _ctx.autocomplete,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"combobox-input\")),\n        disabled: _ctx.disabled,\n        name: _ctx.name,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        unselectable: _ctx.expanded ? \"on\" : void 0,\n        onCompositionstart: _cache[12] || (_cache[12] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n        onCompositionupdate: _cache[13] || (_cache[13] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n        onCompositionend: _cache[14] || (_cache[14] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n        onFocus: _cache[15] || (_cache[15] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onInput: _cache[16] || (_cache[16] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n        onKeydown: [_cache[17] || (_cache[17] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[18] || (_cache[18] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[19] || (_cache[19] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[20] || (_cache[20] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"]))],\n        \"onUpdate:modelValue\": _cache[21] || (_cache[21] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args))\n      }, null, 42, _hoisted_4), [[_directive_model_text, _ctx.states.displayInputValue]])], 2), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-calculator\")]),\n        textContent: toDisplayString(_ctx.states.displayInputValue)\n      }, null, 10, _hoisted_5)) : createCommentVNode(\"v-if\", true)], 64)), _ctx.shouldShowPlaceholder ? (openBlock(), createElementBlock(\"span\", {\n        key: 3,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"placeholder\"), _ctx.nsSelectV2.is(\"transparent\", _ctx.states.isComposing || (_ctx.placeholder && _ctx.multiple ? _ctx.modelValue.length === 0 : !_ctx.hasModelValue))])\n      }, toDisplayString(_ctx.currentPlaceholder), 3)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n        class: normalizeClass(_ctx.nsSelectV2.e(\"suffix\"))\n      }, [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"caret\"), _ctx.nsInput.e(\"icon\"), _ctx.iconReverse])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n        _: 1\n      }, 8, [\"class\"])), [[vShow, !_ctx.showClearBtn]]) : createCommentVNode(\"v-if\", true), _ctx.showClearBtn && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"caret\"), _ctx.nsInput.e(\"icon\")]),\n        onClick: withModifiers(_ctx.handleClear, [\"prevent\", \"stop\"])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.validateState && _ctx.validateIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 2,\n        class: normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsInput.e(\"validateIcon\")])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.validateIcon)))]),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 2)];\n    }),\n    content: withCtx(() => [createVNode(_component_el_select_menu, {\n      ref: \"menuRef\",\n      data: _ctx.filteredOptions,\n      width: _ctx.popperSize,\n      \"hovering-index\": _ctx.states.hoveringIndex,\n      \"scrollbar-always-on\": _ctx.scrollbarAlwaysOn\n    }, {\n      default: withCtx(scope => [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps(scope)))]),\n      empty: withCtx(() => [renderSlot(_ctx.$slots, \"empty\", {}, () => [createElementVNode(\"p\", {\n        class: normalizeClass(_ctx.nsSelectV2.e(\"empty\"))\n      }, toDisplayString(_ctx.emptyText ? _ctx.emptyText : \"\"), 3)])]),\n      _: 3\n    }, 8, [\"data\", \"width\", \"hovering-index\", \"scrollbar-always-on\"])]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-options\", \"effect\", \"transition\", \"onShow\"])], 34)), [[_directive_click_outside, _ctx.handleClickOutside, _ctx.popperRef]]);\n}\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Select as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","TwSelectMenu","_sfc_main$1","TwTag","ElTooltip","TwTooltip","TwIcon","directives","ClickOutside","ModelText","vModelText","props","SelectProps","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","API","useSelect","provide","selectV2InjectionKey","reactive","toRefs","height","popupHeight","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","withDirectives","openBlock","createElementBlock","ref","class","normalizeClass","_ctx","nsSelectV2","b","m","selectSize","onClick","_cache","withModifiers","args","toggleMenu","onMouseenter","$event","states","comboBoxHovering","onMouseleave","createVNode","_component_el_tooltip","visible","dropdownMenuVisible","teleported","compatTeleported","e","popperClass","popperOptions","effect","placement","pure","transition","namespace","value","trigger","persistent","onShow","handleMenuEnter","onHide","inputValue","displayInputValue","default","withCtx","_a","createElementVNode","is","isComposing","$slots","prefix","_hoisted_1","renderSlot","multiple","collapseTags","modelValue","length","_component_el_tag","closable","selectDisabled","cachedOptions","disable","size","collapseTagSize","type","deleteTag","_a2","toDisplayString","label","_","createBlock","key","idx","getValueKey","selected","onClose","style","normalizeStyle","inputWrapperStyle","id","autocomplete","autocapitalize","disabled","role","readonly","filterable","spellcheck","unselectable","expanded","onUpdateInputValue","onFocus","handleFocus","onCompositionstart","handleCompositionStart","onCompositionupdate","handleCompositionUpdate","onCompositionend","handleCompositionEnd","onKeydown","withKeys","_hoisted_2","_directive_model_text","textContent","_hoisted_3","createCommentVNode","onInput","_hoisted_4","_hoisted_5","iconComponent","_component_el_icon","vShow","showClearBtn","resolveDynamicComponent","clearIcon","validateState","validateIcon","content","data","filteredOptions","hoveringIndex","scrollbarAlwaysOn","scope","normalizeProps","guardReactiveProps"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelectV2.b(), nsSelectV2.m(selectSize)]\"\n    @click.stop=\"toggleMenu\"\n    @mouseenter=\"states.comboBoxHovering = true\"\n    @mouseleave=\"states.comboBoxHovering = false\"\n  >\n    <el-tooltip\n      ref=\"popper\"\n      v-model:visible=\"dropdownMenuVisible\"\n      :teleported=\"compatTeleported\"\n      :popper-class=\"[nsSelectV2.e('popper'), popperClass]\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      :effect=\"effect\"\n      placement=\"bottom-start\"\n      pure\n      :transition=\"`${nsSelectV2.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      persistent\n      @show=\"handleMenuEnter\"\n      @hide=\"states.inputValue = states.displayInputValue\"\n    >\n      <template #default>\n        <div\n          ref=\"selectionRef\"\n          :class=\"[\n            nsSelectV2.e('wrapper'),\n            nsSelectV2.is('focused', states.isComposing),\n            nsSelectV2.is('hovering', states.comboBoxHovering),\n            nsSelectV2.is('filterable', filterable),\n            nsSelectV2.is('disabled', disabled),\n          ]\"\n        >\n          <div v-if=\"$slots.prefix\">\n            <slot name=\"prefix\"></slot>\n          </div>\n          <div v-if=\"multiple\" :class=\"nsSelectV2.e('selection')\">\n            <template v-if=\"collapseTags && modelValue.length > 0\">\n              <div :class=\"nsSelectV2.e('selected-item')\">\n                <el-tag\n                  :closable=\"\n                    !selectDisabled && !states.cachedOptions[0]?.disable\n                  \"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, states.cachedOptions[0])\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ states.cachedOptions[0]?.label }}</span\n                  >\n                </el-tag>\n                <el-tag\n                  v-if=\"modelValue.length > 1\"\n                  :closable=\"false\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >+ {{ modelValue.length - 1 }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n\n            <template v-else>\n              <div\n                v-for=\"(selected, idx) in states.cachedOptions\"\n                :key=\"idx\"\n                :class=\"nsSelectV2.e('selected-item')\"\n              >\n                <el-tag\n                  :key=\"getValueKey(selected)\"\n                  :closable=\"!selectDisabled && !selected.disabled\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, selected)\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ getLabel(selected) }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n              :style=\"inputWrapperStyle\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                :autocomplete=\"autocomplete\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-labelledby=\"label\"\n                :class=\"[\n                  nsSelectV2.is(selectSize),\n                  nsSelectV2.e('combobox-input'),\n                ]\"\n                :disabled=\"disabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @update:modelValue=\"onUpdateInputValue\"\n                @focus=\"handleFocus\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelectV2.e('input-calculator')\"\n                v-text=\"states.displayInputValue\"\n              >\n              </span>\n            </div>\n          </div>\n          <template v-else>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                :aria-labelledby=\"label\"\n                :aria-expanded=\"expanded\"\n                autocapitalize=\"off\"\n                :autocomplete=\"autocomplete\"\n                :class=\"nsSelectV2.e('combobox-input')\"\n                :disabled=\"disabled\"\n                :name=\"name\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @focus=\"handleFocus\"\n                @input=\"onInput\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @update:modelValue=\"onUpdateInputValue\"\n              />\n            </div>\n            <span\n              v-if=\"filterable\"\n              ref=\"calculatorRef\"\n              aria-hidden=\"true\"\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-calculator'),\n              ]\"\n              v-text=\"states.displayInputValue\"\n            >\n            </span>\n          </template>\n          <span\n            v-if=\"shouldShowPlaceholder\"\n            :class=\"[\n              nsSelectV2.e('placeholder'),\n              nsSelectV2.is(\n                'transparent',\n                states.isComposing ||\n                  (placeholder && multiple\n                    ? modelValue.length === 0\n                    : !hasModelValue)\n              ),\n            ]\"\n          >\n            {{ currentPlaceholder }}\n          </span>\n          <span :class=\"nsSelectV2.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon')]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon\"\n              :class=\"[nsInput.e('icon'), nsInput.e('validateIcon')]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </span>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\"></slot>\n          </template>\n          <template #empty>\n            <slot name=\"empty\">\n              <p :class=\"nsSelectV2.e('empty')\">\n                {{ emptyText ? emptyText : '' }}\n              </p>\n            </slot>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, provide, toRefs, reactive, vModelText } from 'vue'\nimport { ClickOutside } from '@tw-element/directives'\nimport ElTooltip from '@tw-element/components/tooltip'\nimport TwTag from '@tw-element/components/tag'\nimport TwIcon from '@tw-element/components/icon'\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '@tw-element/constants'\nimport TwSelectMenu from './select-dropdown.vue'\nimport useSelect from './useSelect'\nimport { selectV2InjectionKey } from './token'\nimport { SelectProps } from './defaults'\nexport default defineComponent({\n  name: 'TwSelectV2',\n  components: {\n    TwSelectMenu,\n    TwTag,\n    ElTooltip,\n    TwIcon,\n  },\n  directives: { ClickOutside, ModelText: vModelText },\n  props: SelectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, { emit }) {\n    const API = useSelect(props, emit)\n    // TODO, remove the any cast to align the actual API.\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n      }),\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    } as any)\n\n    return API\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;AAoRA,MAAKA,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IAAAC,YAAA,EACVC,WAAA;IACAC,KAAA;IAAAC,SAAA,EACAC,SAAA;IACAC;EAAA;EAEFC,UAAA,EAAY;IAAEC,YAAA;IAAcC,SAAA,EAAWC;EAAA;EACvCC,KAAA,EAAOC,WAAA;EACPC,KAAA,EAAO,CACLC,kBAAA,EACAC,YAAA,EACA,cACA,SACA,kBACA,SACA;EAGFC,MAAML,KAAA,EAAO;IAAEM;EAAA,GAAQ;IACrB,MAAMC,GAAA,GAAMC,SAAA,CAAUR,KAAA,EAAOM,IAAA;IAE7BG,OAAA,CAAQC,oBAAA,EAAsB;MAC5BV,KAAA,EAAOW,QAAA,CAAS;QAAA,GACXC,MAAA,CAAOZ,KAAA;QACVa,MAAA,EAAQN,GAAA,CAAIO;MAAA;MAEdC,QAAA,EAAUR,GAAA,CAAIQ,QAAA;MACdC,OAAA,EAAST,GAAA,CAAIS,OAAA;MACbC,kBAAA,EAAoBV,GAAA,CAAIU,kBAAA;MACxBC,gBAAA,EAAkBX,GAAA,CAAIW;IAAA;IAGxB,OAAOX,GAAA;EAAA;AAAA;;;;;;;;;;;;;;;SApTHY,cAAA,EAAAC,SAAA,IAAAC,kBAAA;IAEHC,GAAA,EAAK;IACLC,KAAA,EAAKC,cAAA,EAAAC,IAAA,CAAAC,UAAA,CAAAC,CAAA,IAAAF,IAAA,CAAAC,UAAA,CAAAE,CAAA,CAAAH,IAAA,CAAOI,UAAA;IACZC,OAAA,EAAAC,MAAA,CAAU,QAAAA,MAAA,OAAAC,aAAA,KAAEC,IAAA,KAAOR,IAAA,CAAAS,UAAA,IAAgBT,IAAA,CAAAS,UAAA,IAAAD,IAAA;IACnCE,YAAA,EAAUJ,MAAA,SAAAA,MAAA,OAAAK,MAAA,IAAEX,IAAA,CAAAY,MAAA,CAAOC,gBAAA,GAAgB;IAAAC,YAAA,EAAAR,MAAA,SAAAA,MAAA,OAAAK,MAAA,IAAAX,IAAA,CAAAY,MAAA,CAAAC,gBAAA;KAEpC,CAAAE,WAAA,CACMC,qBAAA,EAAQ;IACJnB,GAAA;IAAAoB,OAAA,EAAAjB,IAAA,CAAAkB,mBAAA;IACP,oBAAYZ,MAAA,SAAAA,MAAA,OAAAK,MAAA,IAAAX,IAAA,CAAAkB,mBAAA,GAAAP,MAAA;IACZQ,UAAA,EAAAnB,IAAA,CAAeoB,gBAAA;IACf,iBAAApB,IAAA,CAAkBC,UAAA,CAAKoB,CAAA,YAAArB,IAAA,CAAAsB,WAAA;IACvB;IACA,2BAAgB;IAChB,kBAAAtB,IAAA,CAAqBuB,aAAA;IACrB,uBAAc;IACfC,MAAA,EAAAxB,IAAA,CAAUwB,MAAA;IACVC,SAAA,EAAI;IACHC,IAAA;IACDC,UAAA,EAAQ,GAAA3B,IAAA,CAAOC,UAAA,CAAA2B,SAAA,CAAAC,KAAA;IACfC,OAAA;IACCC,UAAA,EAAM;IACNC,MAAA,EAAIhC,IAAA,CAAAiC,eAAA;IAAAC,MAAA,EAAA5B,MAAA,SAAAA,MAAA,OAAAK,MAAA,IAAAX,IAAA,CAAAY,MAAA,CAAAuB,UAAA,GAAAnC,IAAA,CAAAY,MAAA,CAAAwB,iBAAA;KAEM;IAAAC,OAAA,EACTC,OAAA,OAmNM;MAAA,IAAAC,EAAA;MAlNc,OACZ,CAAAC,kBAAA;QAAqD3C,GAAA;QAA0DC,KAAA,EAAAC,cAAA,EAAgCC,IAAA,CAAAC,UAAA,CAAAoB,CAA6C,aAAerB,IAAA,CAAAC,UAAA,CAAAwC,EAAA,YAAAzC,IAAA,CAAAY,MAAA,CAAA8B,WAAA,GAAmD1C,IAAA,CAAAC,UAAA,CAAAwC,EAAA,aAAAzC,IAAA,CAAAY,MAAA,CAAAC,gBAAA,G,iGAQzP;MACkB,I,IAElB,CAAA8B,MAAA,CAAAC,MAAA,IAAAjD,SAAA,IAAAC,kBAAA,QAAAiD,UAAA,GAAQC,UAAA,CAAA9C,IAAA,CAAA2C,MAAA,Y,uCAAQ3C,IAAA,CAAA+C,QAAA,IAAApD,SAAA,IAAAC,kBAAA;;QACTE,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAoB,CAAA;UACHrB,IAAA,CAAAgD,YAAA,IAAAhD,IAAA,CAAAiD,UAAA,CAAAC,MAAA,QAAAvD,SAAA,IAAAC,kBAAA;;QACTE,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAoB,CAAA;MACW,IAITN,WAAA,CAAAoC,iBAAA;QAAKC,QAAA,GAAApD,IAAA,CAAAqD,cAAA,OAAAd,EAAA,GAAAvC,IAAA,CAAAY,MAAA,CAAA0C,aAAA,wBAAAf,EAAA,CAAAgB,OAAA;QACLC,IAAA,EAAAxD,IAAA,CAAAyD,eAAA;QACMC,IAAA;;eAEN,EAAApD,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAAAX,IAAA,CAAA2D,SAAA,CAAAhD,MAAA,EAAAX,IAAA,CAAAY,MAAA,CAAA0C,aAAA;MAMC;QALSjB,OAAA,EACFC,OAAA;UAAA,IAAAsB,GAAuC;UAAW,Q;;;;;UAOnC,GAAAC,eAAA,EAAAD,GAAA,GAAA5D,IAAA,CAAAY,MAAA,CAAA0C,aAAA,wBAAAM,GAAA,CAAAE,KAAA,M;QACtB;QACMC,CAAA;MACF,6BACL/D,IAAA,CAAAiD,UAAA,CAAAC,MAAA,QAAAvD,SAAA,IAAAqE,WAAA,CAAAb,iBAAA;;;QAQCK,IAAA,EAAAxD,IAAA,CAAAyD,eAAA;QALSC,IAAA;QACF;MAAkD;;;;;;SAYtD,SAAAG,eAAA,CAAA7D,IAAA,CAAAiD,UAAA,CAAAC,MAAA,UAAG;QACHa,CAAA;;;;QAGsB,OAAApE,SAAA,IAAAC,kBAAA;UAEzBqE,GAAA,EAAAC,GAAA;UACDpE,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAoB,CAAA;QAAK,KACL1B,SAAA,IAAAqE,WAAA,CAAAb,iBAAA;UACQc,GAAA,EAAAjE,IAAA,CAAAmE,WAAA,CAAAC,QAAA;;;UAQPV,IAAA;UALS;UACFW,OAAA,EAAuC1D,MAAA,IAAAX,IAAW,CAAA2D,SAAA,CAAAhD,MAAA,EAAAyD,QAAA;QAAA;;;;;;0DAQhE;UACQL,CAAA;QAAgC,2CAA+C;;mEAO5E/D,IAAA,CAAAC,UAAA,CAAAoB,CAAA,kBACH;QAGJiD,KAAA,EAAAC,cAAA,CAAAvE,IAAA,CAAAwE,iBAAA;MAAiB,IAEjB9E,cAAA,CAAA8C,kBAAA;QAAeiC,EAAA,EAAAzE,IAAA,CAAAyE,EAAA;QACD5E,GAAA,YACE;QAAE6E,YAAA,EAAA1E,IAAA,CAAA0E,YAAA;QACZ,qBAAoC;QAA+B;QAAYC,cAAA;;;QAKhF7E,KAAA,EAAAC,cAAA,EACJC,IAAA,CAAAC,UAAA,CAAAwC,EAAA,CAAAzC,IAAA,CAAAI,UAAA,GACUJ,IAAA,CAAAC,UAAA,CAAAoB,CAAA,mBACA;QACJuD,QAAA,EAAA5E,IAAA,CAAA4E,QAAA;QACNC,IAAA;QACiBC,QAAA,GAAA9E,IAAA,CAAA+E,UAAA;QACCC,UAAA;QACJtB,IAAA;QACI/F,IAAA,EAAAqC,IAAA,CAAArC,IAAA;QACCsH,YAAA,EAAAjF,IAAA,CACLkF,QAAA;QAAsB,uBAAA5E,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAAmF,kBAAA,IAAAnF,IAAA,CAAAmF,kBAAA,IAAA3E,IAAA;QAC7B4E,OAAA,EAAA9E,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAAqF,WAAA,IAAArF,IAAA,CAAAqF,WAAA,IAAA7E,IAAA;;QACsC8E,kBAAA,EAAAhF,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAAuF,sBAAA,IAAAvF,IAAA,CAAAuF,sBAAA,IACD/E,IAAA;QAAAgF,mBAAA,EAAAlF,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAAyF,uBAAA,IAAAzF,IAAA,CAAAyF,uBAAA,IAAAjF,IAAA;QACTkF,gBAAA,EAAApF,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAA2F,oBAAA,IAAA3F,IAAA,CAAA2F,oBAAA,IAAAnF,IAAA;QACLoF,SAAA,G,uIA5BV,OAAAtF,MAAiB,MAAAuF,QAAA,CAAAtF,aAAA,CAAAI,MAAA,IAAAX,IAAA,CAAAR,kBAAA,+CAAAc,MAAA,QAAAA,MAAA,MAAAuF,QAAA,CAAAtF,aAAA,KAAAC,IAAA,KAAAR,IAAA,CAAAP,gBAAA,IAAAO,IAAA,CAAAP,gBAAA,IAAAe,IAAA,sC;MAgClC,aAAAsF,UAAA,IACJ,CAAAC,qBAAA,EAAA/F,IAAA,CAAAY,MAAA,CAAAwB,iBAAA,EACM,GACQpC,IAAA,CAAA+E,UAAA,IAAApF,SAAA,IAAAC,kBAAA;;;;QAyCZE,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAoB,CAAA;QAlCE2E,WAAA,EAAAnC,eAAA,CAAA7D,IAAA,CAAAY,MAAA,CAAAwB,iBAAA;MAAgC,aAAA6D,UAAA,KAAAC,kBAAA,eAA+C,K;;;+BAM5ElG,IAAA,CAAAC,UAAA,CAAAoB,CAAA,mBACHrB,IAAA,CAAAC,UAAA,CAAAoB,CAAA,kBAEJ;MACc,IAEb3B,cAAA,CAAA8C,kBAAA;QAAeiC,EAAA,EAAAzE,IAAA,CAAAyE,EAAA;QACI5E,GAAA;QACL;QACT;QACa,mBAAAG,IAAA,CAAA8D,KAAA;QACR,iBAAA9D,IAAA,CAAAkF,QAAA;QACNP,cAAA;QACJD,YAAA,EACU1E,IAAA,CAAA0E,YAAA;QAAA5E,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAoB,CAAA;QACAuD,QAAA,EAAA5E,IAAA,CAAA4E,QAAA;QACVjH,IAAA,EAAAqC,IAAA,CAAArC,IAAA;QACgBkH,IAAA;QACGC,QAAA,GAAA9E,IAAA,CAAA+E,UAAA;QACiBC,UAAA;QAClBtB,IAAA;QACJuB,YAAA,EAAAjF,IAAA,CAAAkF,QAAA;QACPI,kBAAA,EAAAhF,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAAuF,sBAAA,IAAAvF,IAAA,CAAAuF,sBAAA,IAAA/E,IAAA;;QACsCkF,gBAAA,EAAApF,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAA2F,oBAAA,IAAA3F,IAAA,CAAA2F,oBAAA,IAAAnF,IAAA,EACD;QAAA4E,OAAA,EAAA9E,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAAqF,WAClB,IAAArF,IAAA,CAAAqF,WAAA,IAAA7E,IAAA;QAAS2F,OAAA,EAAA7F,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAAmG,OAAA,IAAAnG,IAAA,CAAAmG,OAAA,IAAA3F,IAAA;6JAvBf,QAAAF,MAAA,OAAAuF,QAAA,CAAAtF,aAAA,CAAAI,MAAA,IAAAX,IAAA,CAAAR,kBAAA,+CAAiBc,MAAA,SAAAA,MAAA,OAAAuF,QAAA,CAAAtF,aAAA,KAAAC,IAAA,KAAAR,IAAA,CAAAP,gBAAA,IAAAO,IAAA,CAAAP,gBAAA,IAAAe,IAAA,sC;QA4BlC,uBAAAF,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAAmF,kBAAA,IAAAnF,IAAA,CAAAmF,kBAAA,IAAA3E,IAAA;SACF,UAAA4F,UAAA,KAAAL,qBAAA,EAAA/F,IAAA,CAAAY,MAAA,CAAAwB,iBAAA,EACJ,EACM,MAAgCpC,IAAA,CAAA+E,UAAA,IAAApF,SAAA,IAAAC,kBAAA;QAA+CqE,GAAA;;;mEASjFjE,IAAA,CAAAC,UAAA,CAAAoB,CAAA,qBACA;QAAA2E,WAAA,EAAAnC,eAAA,CAAA7D,IAAA,CAAAY,MAAA,CAAAwB,iBAAA;MAA8B,aAAAiE,UAAA,KAAAH,kBAAA,eAA4C,Q;;QAkC3EpG,KAAA,EAAAC,cAAA,EArBOC,IAAA,CAAAC,UAAA,CAAAoB,CAAA,iB,uJAEJ;2FAEAmB,kBAAA;;UAENxC,IAAA,CAAAsG,aAAA,GAAA5G,cAAA,EAAAC,SAAA,IAAAqE,WAAA,CAAAuC,kBAAA;;;;QAHqBlE,OAAA,EAAAC,OAAA,S,uEAMC;WAChB;MAAA,OACA,aAA0B,CAAAkE,KAAA,GAAAxG,IAAA,CAAAyG,YAAA,E;QAEhCxC,GAAA;;;;QAGuB5B,OAAA,EAAAC,OAAA,CADzB,QAEQ3C,SAAA,IAAAqE,WAAA,CAAA0C,uBAAA,CAAA1G,IAAA,CAAA2G,SAAA;;uEAEN3G,IAAA,CAAA4G,aAAA,IAAA5G,IAAA,CAAA6G,YAAA,IAAAlH,SAAA,IAAAqE,WAAA,CAAAuC,kBAAA;;;;;;MAuBW,OAhBX,aAAAL,kBAAA,eAAS,EACR,QACG;IACP;IACqBY,OAAA,EAAAxE,OAAA,Q;MAEXzC,GAAA;MACmBkH,IAAA,EAAA/G,IAAA,CAAAgH,eAAA;;sBAOrB,EAAAhH,IAAA,CAAAY,MAAA,CAAAqG,aAAA;MAAA,uBAAAjH,IADD,CAAAkH;IAAA;MAFO7E,OAAA,EAAAC,OAAA,CAAA6E,KAAA,IACN,CAAYrE,UAAA,CAAA9C,IAAA,CAAA2C,MAAA,aAAAyE,cAAA,CAAAC,kBAAA,CAAAF,KAAA,I;;;qEA5PE;MAAApD,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}