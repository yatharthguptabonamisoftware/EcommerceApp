{"ast":null,"code":"import { defineComponent, ref, computed, watch, nextTick, provide, reactive, onMounted, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, createBlock, resolveDynamicComponent, withCtx, renderSlot, createCommentVNode } from 'vue';\nimport { isNumber, useResizeObserver, useEventListener } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport Bar from './bar.mjs';\nimport { scrollbarProps, scrollbarEmits } from './scrollbar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { addUnit } from '../../../utils/vue/style.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { scrollbarContextKey } from '../../../tokens/scrollbar.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwScrollbar\",\n  components: {\n    Bar\n  },\n  props: scrollbarProps,\n  emits: scrollbarEmits,\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"scrollbar\");\n    let stopResizeObserver = void 0;\n    let stopResizeListener = void 0;\n    const scrollbar$ = ref();\n    const wrap$ = ref();\n    const resize$ = ref();\n    const sizeWidth = ref(\"0\");\n    const sizeHeight = ref(\"0\");\n    const barRef = ref();\n    const moveX = ref(0);\n    const moveY = ref(0);\n    const ratioY = ref(1);\n    const ratioX = ref(1);\n    const SCOPE = \"TwScrollbar\";\n    const GAP = 4;\n    const style = computed(() => {\n      const style2 = {};\n      if (props.height) style2.height = addUnit(props.height);\n      if (props.maxHeight) style2.maxHeight = addUnit(props.maxHeight);\n      return [props.wrapStyle, style2];\n    });\n    const handleScroll = () => {\n      var _a;\n      if (wrap$.value) {\n        (_a = barRef.value) == null ? void 0 : _a.handleScroll(wrap$.value);\n        emit(\"scroll\", {\n          scrollTop: wrap$.value.scrollTop,\n          scrollLeft: wrap$.value.scrollLeft\n        });\n      }\n    };\n    const setScrollTop = value => {\n      if (!isNumber(value)) {\n        debugWarn(SCOPE, \"value must be a number\");\n        return;\n      }\n      wrap$.value.scrollTop = value;\n    };\n    const setScrollLeft = value => {\n      if (!isNumber(value)) {\n        debugWarn(SCOPE, \"value must be a number\");\n        return;\n      }\n      wrap$.value.scrollLeft = value;\n    };\n    const update = () => {\n      if (!wrap$.value) return;\n      const offsetHeight = wrap$.value.offsetHeight - GAP;\n      const offsetWidth = wrap$.value.offsetWidth - GAP;\n      const originalHeight = offsetHeight ** 2 / wrap$.value.scrollHeight;\n      const originalWidth = offsetWidth ** 2 / wrap$.value.scrollWidth;\n      const height = Math.max(originalHeight, props.minSize);\n      const width = Math.max(originalWidth, props.minSize);\n      ratioY.value = originalHeight / (offsetHeight - originalHeight) / (height / (offsetHeight - height));\n      ratioX.value = originalWidth / (offsetWidth - originalWidth) / (width / (offsetWidth - width));\n      sizeHeight.value = height + GAP < offsetHeight ? `${height}px` : \"\";\n      sizeWidth.value = width + GAP < offsetWidth ? `${width}px` : \"\";\n    };\n    watch(() => props.noresize, noresize => {\n      if (noresize) {\n        stopResizeObserver == null ? void 0 : stopResizeObserver();\n        stopResizeListener == null ? void 0 : stopResizeListener();\n      } else {\n        ;\n        ({\n          stop: stopResizeObserver\n        } = useResizeObserver(resize$, update));\n        stopResizeListener = useEventListener(\"resize\", update);\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => [props.maxHeight, props.height], () => {\n      if (!props.native) nextTick(() => {\n        var _a;\n        update();\n        if (wrap$.value) {\n          (_a = barRef.value) == null ? void 0 : _a.handleScroll(wrap$.value);\n        }\n      });\n    });\n    provide(scrollbarContextKey, reactive({\n      scrollbarElement: scrollbar$,\n      wrapElement: wrap$\n    }));\n    onMounted(() => {\n      if (!props.native) nextTick(() => update());\n    });\n    return {\n      ns,\n      scrollbar$,\n      wrap$,\n      resize$,\n      barRef,\n      moveX,\n      moveY,\n      ratioX,\n      ratioY,\n      sizeWidth,\n      sizeHeight,\n      style,\n      update,\n      handleScroll,\n      setScrollTop,\n      setScrollLeft\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_bar = resolveComponent(\"bar\");\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"scrollbar$\",\n    class: normalizeClass(_ctx.ns.b())\n  }, [createElementVNode(\"div\", {\n    ref: \"wrap$\",\n    class: normalizeClass([_ctx.wrapClass, _ctx.ns.e(\"wrap\"), {\n      [_ctx.ns.em(\"wrap\", \"hidden-default\")]: !_ctx.native\n    }]),\n    style: normalizeStyle(_ctx.style),\n    onScroll: _cache[0] || (_cache[0] = (...args) => _ctx.handleScroll && _ctx.handleScroll(...args))\n  }, [(openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {\n    ref: \"resize$\",\n    class: normalizeClass([_ctx.ns.e(\"view\"), _ctx.viewClass]),\n    style: normalizeStyle(_ctx.viewStyle)\n  }, {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 8, [\"class\", \"style\"]))], 38), !_ctx.native ? (openBlock(), createBlock(_component_bar, {\n    key: 0,\n    ref: \"barRef\",\n    height: _ctx.sizeHeight,\n    width: _ctx.sizeWidth,\n    always: _ctx.always,\n    \"ratio-x\": _ctx.ratioX,\n    \"ratio-y\": _ctx.ratioY\n  }, null, 8, [\"height\", \"width\", \"always\", \"ratio-x\", \"ratio-y\"])) : createCommentVNode(\"v-if\", true)], 2);\n}\nvar Scrollbar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Scrollbar as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","Bar","props","scrollbarProps","emits","scrollbarEmits","setup","emit","ns","useNamespace","stopResizeObserver","stopResizeListener","scrollbar$","ref","wrap$","resize$","sizeWidth","sizeHeight","barRef","moveX","moveY","ratioY","ratioX","SCOPE","GAP","style","computed","style2","height","addUnit","maxHeight","wrapStyle","handleScroll","_a","value","scrollTop","scrollLeft","setScrollTop","isNumber","debugWarn","setScrollLeft","update","offsetHeight","offsetWidth","originalHeight","scrollHeight","originalWidth","scrollWidth","Math","max","minSize","width","watch","noresize","stop","useResizeObserver","useEventListener","immediate","native","nextTick","provide","scrollbarContextKey","reactive","scrollbarElement","wrapElement","onMounted","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_bar","resolveComponent","openBlock","createElementBlock","class","normalizeClass","b","createElementVNode","wrapClass","createBlock","resolveDynamicComponent","tag","key","always"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/scrollbar/src/scrollbar.vue"],"sourcesContent":["<template>\n  <div ref=\"scrollbar$\" :class=\"ns.b()\">\n    <div\n      ref=\"wrap$\"\n      :class=\"[\n        wrapClass,\n        ns.e('wrap'),\n        { [ns.em('wrap', 'hidden-default')]: !native },\n      ]\"\n      :style=\"style\"\n      @scroll=\"handleScroll\"\n    >\n      <component\n        :is=\"tag\"\n        ref=\"resize$\"\n        :class=\"[ns.e('view'), viewClass]\"\n        :style=\"viewStyle\"\n      >\n        <slot />\n      </component>\n    </div>\n    <template v-if=\"!native\">\n      <bar\n        ref=\"barRef\"\n        :height=\"sizeHeight\"\n        :width=\"sizeWidth\"\n        :always=\"always\"\n        :ratio-x=\"ratioX\"\n        :ratio-y=\"ratioY\"\n      ></bar>\n    </template>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onMounted,\n  provide,\n  ref,\n  watch,\n  reactive,\n} from 'vue'\nimport { useResizeObserver, useEventListener } from '@vueuse/core'\nimport { isNumber, debugWarn, addUnit } from '@tw-element/utils'\nimport { scrollbarContextKey } from '@tw-element/tokens'\nimport { useNamespace } from '@tw-element/hooks'\nimport Bar from './bar.vue'\n\nimport { scrollbarProps, scrollbarEmits } from './scrollbar'\nimport type { StyleValue, CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'TwScrollbar',\n  components: {\n    Bar,\n  },\n  props: scrollbarProps,\n  emits: scrollbarEmits,\n\n  setup(props, { emit }) {\n    const ns = useNamespace('scrollbar')\n\n    let stopResizeObserver: (() => void) | undefined = undefined\n    let stopResizeListener: (() => void) | undefined = undefined\n\n    const scrollbar$ = ref<HTMLDivElement>()\n    const wrap$ = ref<HTMLDivElement>()\n    const resize$ = ref<HTMLElement>()\n\n    const sizeWidth = ref('0')\n    const sizeHeight = ref('0')\n    const barRef = ref()\n    const moveX = ref(0)\n    const moveY = ref(0)\n    const ratioY = ref(1)\n    const ratioX = ref(1)\n    const SCOPE = 'TwScrollbar'\n    const GAP = 4 // top 2 + bottom 2 of bar instance\n\n    const style = computed<StyleValue>(() => {\n      const style: CSSProperties = {}\n      if (props.height) style.height = addUnit(props.height)\n      if (props.maxHeight) style.maxHeight = addUnit(props.maxHeight)\n      return [props.wrapStyle, style]\n    })\n\n    const handleScroll = () => {\n      if (wrap$.value) {\n        barRef.value?.handleScroll(wrap$.value)\n\n        emit('scroll', {\n          scrollTop: wrap$.value.scrollTop,\n          scrollLeft: wrap$.value.scrollLeft,\n        })\n      }\n    }\n\n    const setScrollTop = (value: number) => {\n      if (!isNumber(value)) {\n        debugWarn(SCOPE, 'value must be a number')\n        return\n      }\n      wrap$.value!.scrollTop = value\n    }\n\n    const setScrollLeft = (value: number) => {\n      if (!isNumber(value)) {\n        debugWarn(SCOPE, 'value must be a number')\n        return\n      }\n      wrap$.value!.scrollLeft = value\n    }\n\n    const update = () => {\n      if (!wrap$.value) return\n      const offsetHeight = wrap$.value.offsetHeight - GAP\n      const offsetWidth = wrap$.value.offsetWidth - GAP\n\n      const originalHeight = offsetHeight ** 2 / wrap$.value.scrollHeight\n      const originalWidth = offsetWidth ** 2 / wrap$.value.scrollWidth\n      const height = Math.max(originalHeight, props.minSize)\n      const width = Math.max(originalWidth, props.minSize)\n\n      ratioY.value =\n        originalHeight /\n        (offsetHeight - originalHeight) /\n        (height / (offsetHeight - height))\n      ratioX.value =\n        originalWidth /\n        (offsetWidth - originalWidth) /\n        (width / (offsetWidth - width))\n\n      sizeHeight.value = height + GAP < offsetHeight ? `${height}px` : ''\n      sizeWidth.value = width + GAP < offsetWidth ? `${width}px` : ''\n    }\n\n    watch(\n      () => props.noresize,\n      (noresize) => {\n        if (noresize) {\n          stopResizeObserver?.()\n          stopResizeListener?.()\n        } else {\n          ;({ stop: stopResizeObserver } = useResizeObserver(resize$, update))\n          stopResizeListener = useEventListener('resize', update)\n        }\n      },\n      { immediate: true }\n    )\n\n    watch(\n      () => [props.maxHeight, props.height],\n      () => {\n        if (!props.native)\n          nextTick(() => {\n            update()\n            if (wrap$.value) {\n              barRef.value?.handleScroll(wrap$.value)\n            }\n          })\n      }\n    )\n\n    provide(\n      scrollbarContextKey,\n      reactive({\n        scrollbarElement: scrollbar$,\n        wrapElement: wrap$,\n      })\n    )\n\n    onMounted(() => {\n      if (!props.native) nextTick(() => update())\n    })\n\n    return {\n      ns,\n      scrollbar$,\n      wrap$,\n      resize$,\n      barRef,\n      moveX,\n      moveY,\n      ratioX,\n      ratioY,\n      sizeWidth,\n      sizeHeight,\n      style,\n      update,\n      handleScroll,\n      setScrollTop,\n      setScrollLeft,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}