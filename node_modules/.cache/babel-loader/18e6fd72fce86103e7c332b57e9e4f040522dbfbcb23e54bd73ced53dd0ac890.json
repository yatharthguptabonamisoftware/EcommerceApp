{"ast":null,"code":"import { defineComponent, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { checkTagProps, checkTagEmits } from './check-tag.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwCheckTag\",\n  props: checkTagProps,\n  emits: checkTagEmits,\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"check-tag\");\n    const onChange = () => {\n      const checked = !props.checked;\n      emit(\"change\", checked);\n      emit(\"update:checked\", checked);\n    };\n    return {\n      ns,\n      onChange\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"span\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"checked\", _ctx.checked)]),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onChange && _ctx.onChange(...args))\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\nvar CheckTag = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { CheckTag as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","checkTagProps","emits","checkTagEmits","setup","emit","ns","useNamespace","onChange","checked","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","class","normalizeClass","_ctx","b","is","onClick","args","renderSlot","$slots"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/check-tag/src/check-tag.vue"],"sourcesContent":["<template>\n  <span :class=\"[ns.b(), ns.is('checked', checked)]\" @click=\"onChange\">\n    <slot></slot>\n  </span>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { useNamespace } from '@tw-element/hooks'\nimport { checkTagProps, checkTagEmits } from './check-tag'\n\nexport default defineComponent({\n  name: 'TwCheckTag',\n\n  props: checkTagProps,\n  emits: checkTagEmits,\n\n  setup(props, { emit }) {\n    const ns = useNamespace('check-tag')\n\n    const onChange = () => {\n      const checked = !props.checked\n      emit('change', checked)\n      emit('update:checked', checked)\n    }\n\n    return {\n      ns,\n      onChange,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;AAUA,MAAKA,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAM;EAENC,KAAA,EAAOC,aAAA;EACPC,KAAA,EAAOC,aAAA;EAEPC,MAAMJ,KAAA,EAAO;IAAEK;EAAA,GAAQ;IACrB,MAAMC,EAAA,GAAKC,YAAA,CAAa;IAExB,MAAMC,QAAA,GAAWA,CAAA,KAAM;MACrB,MAAMC,OAAA,GAAU,CAACT,KAAA,CAAMS,OAAA;MACvBJ,IAAA,CAAK,UAAUI,OAAA;MACfJ,IAAA,CAAK,kBAAkBI,OAAA;IAAA;IAGzB,OAAO;MACLH,EAAA;MACAE;IAAA;EAAA;AAAA;2BA1BJE,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAEOC,KAAA,EAAAC,QAAA;SAFKC,SAAA,IAAAC,kBAAA,CAAW,QAAK;IAAwBC,KAAA,EAAKC,cAAA,EAAAC,IAAA,CAAAb,EAAA,CAAAc,CAAA,IAAAD,IAAA,CAAAb,EAAA,CAAAe,EAAA,YAAEF,IAAA,CAAAV,OAAA;IAAAa,OAAA,EAAAZ,MAAA,QAAAA,MAAA,UAAAa,IAAA,KAAAJ,IAAA,CAAAX,QAAA,IAAAW,IAAA,CAAAX,QAAA,IAAAe,IAAA;KACzD,CAAAC,UAAA,CAAAL,IAAA,CAAAM,MAAA,a"},"metadata":{},"sourceType":"module","externalDependencies":[]}