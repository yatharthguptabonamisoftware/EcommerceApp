{"ast":null,"code":"import '../../../constants/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nconst useMove = (props, checkedState, propsKey, emit) => {\n  const _emit = (value, type, checked) => {\n    emit(UPDATE_MODEL_EVENT, value);\n    emit(CHANGE_EVENT, value, type, checked);\n  };\n  const addToLeft = () => {\n    const currentValue = props.modelValue.slice();\n    checkedState.rightChecked.forEach(item => {\n      const index = currentValue.indexOf(item);\n      if (index > -1) {\n        currentValue.splice(index, 1);\n      }\n    });\n    _emit(currentValue, \"left\", checkedState.rightChecked);\n  };\n  const addToRight = () => {\n    let currentValue = props.modelValue.slice();\n    const itemsToBeMoved = props.data.filter(item => {\n      const itemKey = item[propsKey.value];\n      return checkedState.leftChecked.includes(itemKey) && !props.modelValue.includes(itemKey);\n    }).map(item => item[propsKey.value]);\n    currentValue = props.targetOrder === \"unshift\" ? itemsToBeMoved.concat(currentValue) : currentValue.concat(itemsToBeMoved);\n    if (props.targetOrder === \"original\") {\n      currentValue = props.data.filter(item => currentValue.includes(item[propsKey.value])).map(item => item[propsKey.value]);\n    }\n    _emit(currentValue, \"right\", checkedState.leftChecked);\n  };\n  return {\n    addToLeft,\n    addToRight\n  };\n};\nexport { useMove };","map":{"version":3,"names":["useMove","props","checkedState","propsKey","emit","_emit","value","type","checked","UPDATE_MODEL_EVENT","CHANGE_EVENT","addToLeft","currentValue","modelValue","slice","rightChecked","forEach","item","index","indexOf","splice","addToRight","itemsToBeMoved","data","filter","itemKey","leftChecked","includes","map","targetOrder","concat"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/transfer/src/useMove.ts"],"sourcesContent":["import { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@tw-element/constants'\n\nimport type { ComputedRef } from 'vue'\nimport type {\n  TransferProps,\n  TransferCheckedState,\n  DataItem,\n  Key,\n} from './transfer'\n\nexport const useMove = (\n  props: TransferProps,\n  checkedState: TransferCheckedState,\n  propsKey: ComputedRef<string>,\n  emit\n) => {\n  const _emit = (value, type: 'left' | 'right', checked: Key[]) => {\n    emit(UPDATE_MODEL_EVENT, value)\n    emit(CHANGE_EVENT, value, type, checked)\n  }\n\n  const addToLeft = () => {\n    const currentValue = props.modelValue.slice()\n\n    checkedState.rightChecked.forEach((item) => {\n      const index = currentValue.indexOf(item)\n      if (index > -1) {\n        currentValue.splice(index, 1)\n      }\n    })\n    _emit(currentValue, 'left', checkedState.rightChecked)\n  }\n\n  const addToRight = () => {\n    let currentValue = props.modelValue.slice()\n\n    const itemsToBeMoved = props.data\n      .filter((item: DataItem) => {\n        const itemKey = item[propsKey.value]\n        return (\n          checkedState.leftChecked.includes(itemKey) &&\n          !props.modelValue.includes(itemKey)\n        )\n      })\n      .map((item) => item[propsKey.value])\n\n    currentValue =\n      props.targetOrder === 'unshift'\n        ? itemsToBeMoved.concat(currentValue)\n        : currentValue.concat(itemsToBeMoved)\n\n    if (props.targetOrder === 'original') {\n      currentValue = props.data\n        .filter((item) => currentValue.includes(item[propsKey.value]))\n        .map((item) => item[propsKey.value])\n    }\n\n    _emit(currentValue, 'right', checkedState.leftChecked)\n  }\n\n  return {\n    addToLeft,\n    addToRight,\n  }\n}\n"],"mappings":";;AACY,MAACA,OAAO,GAAGA,CAACC,KAAK,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EAC9D,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAEC,OAAO,KAAK;IACtCJ,IAAI,CAACK,kBAAkB,EAAEH,KAAK,CAAC;IAC/BF,IAAI,CAACM,YAAY,EAAEJ,KAAK,EAAEC,IAAI,EAAEC,OAAO,CAAC;EAC5C,CAAG;EACD,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,YAAY,GAAGX,KAAK,CAACY,UAAU,CAACC,KAAK,EAAE;IAC7CZ,YAAY,CAACa,YAAY,CAACC,OAAO,CAAEC,IAAI,IAAK;MAC1C,MAAMC,KAAK,GAAGN,YAAY,CAACO,OAAO,CAACF,IAAI,CAAC;MACxC,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAE;QACdN,YAAY,CAACQ,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACrC;IACA,CAAK,CAAC;IACFb,KAAK,CAACO,YAAY,EAAE,MAAM,EAAEV,YAAY,CAACa,YAAY,CAAC;EAC1D,CAAG;EACD,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIT,YAAY,GAAGX,KAAK,CAACY,UAAU,CAACC,KAAK,EAAE;IAC3C,MAAMQ,cAAc,GAAGrB,KAAK,CAACsB,IAAI,CAACC,MAAM,CAAEP,IAAI,IAAK;MACjD,MAAMQ,OAAO,GAAGR,IAAI,CAACd,QAAQ,CAACG,KAAK,CAAC;MACpC,OAAOJ,YAAY,CAACwB,WAAW,CAACC,QAAQ,CAACF,OAAO,CAAC,IAAI,CAACxB,KAAK,CAACY,UAAU,CAACc,QAAQ,CAACF,OAAO,CAAC;IAC9F,CAAK,CAAC,CAACG,GAAG,CAAEX,IAAI,IAAKA,IAAI,CAACd,QAAQ,CAACG,KAAK,CAAC,CAAC;IACtCM,YAAY,GAAGX,KAAK,CAAC4B,WAAW,KAAK,SAAS,GAAGP,cAAc,CAACQ,MAAM,CAAClB,YAAY,CAAC,GAAGA,YAAY,CAACkB,MAAM,CAACR,cAAc,CAAC;IAC1H,IAAIrB,KAAK,CAAC4B,WAAW,KAAK,UAAU,EAAE;MACpCjB,YAAY,GAAGX,KAAK,CAACsB,IAAI,CAACC,MAAM,CAAEP,IAAI,IAAKL,YAAY,CAACe,QAAQ,CAACV,IAAI,CAACd,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAACsB,GAAG,CAAEX,IAAI,IAAKA,IAAI,CAACd,QAAQ,CAACG,KAAK,CAAC,CAAC;IACjI;IACID,KAAK,CAACO,YAAY,EAAE,OAAO,EAAEV,YAAY,CAACwB,WAAW,CAAC;EAC1D,CAAG;EACD,OAAO;IACLf,SAAS;IACTU;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}