{"ast":null,"code":"import { defineComponent, ref, computed, onMounted, watch, resolveComponent, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, createCommentVNode, resolveDynamicComponent, renderSlot, createElementBlock, toDisplayString, Fragment, withModifiers, createVNode, vShow } from 'vue';\nimport { useTimeoutFn, useEventListener } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { TwBadge } from '../../badge/index.mjs';\nimport { TwIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { messageProps, messageEmits } from './message2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { TypeComponents, TypeComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwMessage\",\n  components: {\n    TwBadge,\n    TwIcon,\n    ...TypeComponents\n  },\n  props: messageProps,\n  emits: messageEmits,\n  setup(props) {\n    const ns = useNamespace(\"message\");\n    const visible = ref(false);\n    const badgeType = ref(props.type ? props.type === \"error\" ? \"danger\" : props.type : \"info\");\n    let stopTimer = void 0;\n    const typeClass = computed(() => {\n      const type = props.type;\n      return {\n        [ns.bm(\"icon\", type)]: type && TypeComponentsMap[type]\n      };\n    });\n    const iconComponent = computed(() => {\n      return props.icon || TypeComponentsMap[props.type] || \"\";\n    });\n    const customStyle = computed(() => ({\n      top: `${props.offset}px`,\n      zIndex: props.zIndex\n    }));\n    function startTimer() {\n      if (props.duration > 0) {\n        ;\n        ({\n          stop: stopTimer\n        } = useTimeoutFn(() => {\n          if (visible.value) close();\n        }, props.duration));\n      }\n    }\n    function clearTimer() {\n      stopTimer == null ? void 0 : stopTimer();\n    }\n    function close() {\n      visible.value = false;\n    }\n    function keydown({\n      code\n    }) {\n      if (code === EVENT_CODE.esc) {\n        if (visible.value) {\n          close();\n        }\n      } else {\n        startTimer();\n      }\n    }\n    onMounted(() => {\n      startTimer();\n      visible.value = true;\n    });\n    watch(() => props.repeatNum, () => {\n      clearTimer();\n      startTimer();\n    });\n    useEventListener(document, \"keydown\", keydown);\n    return {\n      ns,\n      typeClass,\n      iconComponent,\n      customStyle,\n      visible,\n      badgeType,\n      close,\n      clearTimer,\n      startTimer\n    };\n  }\n});\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = [\"innerHTML\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_badge = resolveComponent(\"el-badge\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_close = resolveComponent(\"close\");\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.ns.b(\"fade\"),\n    onBeforeLeave: _ctx.onClose,\n    onAfterLeave: _cache[2] || (_cache[2] = $event => _ctx.$emit(\"destroy\"))\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"div\", {\n      id: _ctx.id,\n      class: normalizeClass([_ctx.ns.b(), {\n        [_ctx.ns.m(_ctx.type)]: _ctx.type && !_ctx.icon\n      }, _ctx.ns.is(\"center\", _ctx.center), _ctx.ns.is(\"closable\", _ctx.showClose), _ctx.customClass]),\n      style: normalizeStyle(_ctx.customStyle),\n      role: \"alert\",\n      onMouseenter: _cache[0] || (_cache[0] = (...args) => _ctx.clearTimer && _ctx.clearTimer(...args)),\n      onMouseleave: _cache[1] || (_cache[1] = (...args) => _ctx.startTimer && _ctx.startTimer(...args))\n    }, [_ctx.repeatNum > 1 ? (openBlock(), createBlock(_component_el_badge, {\n      key: 0,\n      value: _ctx.repeatNum,\n      type: _ctx.badgeType,\n      class: normalizeClass(_ctx.ns.e(\"badge\"))\n    }, null, 8, [\"value\", \"type\", \"class\"])) : createCommentVNode(\"v-if\", true), _ctx.iconComponent ? (openBlock(), createBlock(_component_el_icon, {\n      key: 1,\n      class: normalizeClass([_ctx.ns.e(\"icon\"), _ctx.typeClass])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n      _: 1\n    }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\", {}, () => [!_ctx.dangerouslyUseHTMLString ? (openBlock(), createElementBlock(\"p\", {\n      key: 0,\n      class: normalizeClass(_ctx.ns.e(\"content\"))\n    }, toDisplayString(_ctx.message), 3)) : (openBlock(), createElementBlock(Fragment, {\n      key: 1\n    }, [createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"), createElementVNode(\"p\", {\n      class: normalizeClass(_ctx.ns.e(\"content\")),\n      innerHTML: _ctx.message\n    }, null, 10, _hoisted_2)], 2112))]), _ctx.showClose ? (openBlock(), createBlock(_component_el_icon, {\n      key: 2,\n      class: normalizeClass(_ctx.ns.e(\"closeBtn\")),\n      onClick: withModifiers(_ctx.close, [\"stop\"])\n    }, {\n      default: withCtx(() => [createVNode(_component_close)]),\n      _: 1\n    }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 46, _hoisted_1), [[vShow, _ctx.visible]])]),\n    _: 3\n  }, 8, [\"name\", \"onBeforeLeave\"]);\n}\nvar MessageConstructor = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { MessageConstructor as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","TwBadge","TwIcon","TypeComponents","props","messageProps","emits","messageEmits","setup","ns","useNamespace","visible","ref","badgeType","type","stopTimer","typeClass","computed","bm","TypeComponentsMap","iconComponent","icon","customStyle","top","offset","zIndex","startTimer","duration","stop","useTimeoutFn","value","close","clearTimer","keydown","code","EVENT_CODE","esc","onMounted","watch","repeatNum","useEventListener","document","openBlock","createBlock","Transition","_ctx","b","onBeforeLeave","onClose","onAfterLeave","_cache","$event","$emit","withDirectives","createElementVNode","id","class","normalizeClass","m","is","center","showClose","customClass","style","normalizeStyle","role","onMouseenter","args","onMouseleave","_component_el_badge","key","e","createCommentVNode","_component_el_icon","resolveDynamicComponent","renderSlot","$slots","dangerouslyUseHTMLString","createElementBlock","toDisplayString","message","Fragment","innerHTML","onClick","withModifiers","withCtx","createVNode","_component_close","_hoisted_1","vShow"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/message/src/message.vue"],"sourcesContent":["<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      :class=\"[\n        ns.b(),\n        { [ns.m(type)]: type && !icon },\n        ns.is('center', center),\n        ns.is('closable', showClose),\n        customClass,\n      ]\"\n      :style=\"customStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n    >\n      <el-badge\n        v-if=\"repeatNum > 1\"\n        :value=\"repeatNum\"\n        :type=\"badgeType\"\n        :class=\"ns.e('badge')\"\n      >\n      </el-badge>\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <slot>\n        <p v-if=\"!dangerouslyUseHTMLString\" :class=\"ns.e('content')\">\n          {{ message }}\n        </p>\n        <!-- Caution here, message could've been compromised, never use user's input as message -->\n        <p v-else :class=\"ns.e('content')\" v-html=\"message\"></p>\n      </slot>\n      <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n        <close />\n      </el-icon>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, onMounted, watch } from 'vue'\nimport { useEventListener, useTimeoutFn } from '@vueuse/core'\nimport { TypeComponents, TypeComponentsMap } from '@tw-element/utils'\nimport { EVENT_CODE } from '@tw-element/constants'\nimport TwBadge from '@tw-element/components/badge'\nimport { TwIcon } from '@tw-element/components/icon'\n\nimport { useNamespace } from '@tw-element/hooks'\nimport { messageEmits, messageProps } from './message'\nimport type { BadgeProps } from '@tw-element/components/badge'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'TwMessage',\n\n  components: {\n    TwBadge,\n    TwIcon,\n    ...TypeComponents,\n  },\n\n  props: messageProps,\n  emits: messageEmits,\n\n  setup(props) {\n    const ns = useNamespace('message')\n    const visible = ref(false)\n    const badgeType = ref<BadgeProps['type']>(\n      props.type ? (props.type === 'error' ? 'danger' : props.type) : 'info'\n    )\n    let stopTimer: (() => void) | undefined = undefined\n\n    const typeClass = computed(() => {\n      const type = props.type\n      return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n    })\n\n    const iconComponent = computed(() => {\n      return props.icon || TypeComponentsMap[props.type] || ''\n    })\n\n    const customStyle = computed<CSSProperties>(() => ({\n      top: `${props.offset}px`,\n      zIndex: props.zIndex,\n    }))\n\n    function startTimer() {\n      if (props.duration > 0) {\n        ;({ stop: stopTimer } = useTimeoutFn(() => {\n          if (visible.value) close()\n        }, props.duration))\n      }\n    }\n\n    function clearTimer() {\n      stopTimer?.()\n    }\n\n    function close() {\n      visible.value = false\n    }\n\n    function keydown({ code }: KeyboardEvent) {\n      if (code === EVENT_CODE.esc) {\n        // press esc to close the message\n        if (visible.value) {\n          close()\n        }\n      } else {\n        startTimer() // resume timer\n      }\n    }\n\n    onMounted(() => {\n      startTimer()\n      visible.value = true\n    })\n\n    watch(\n      () => props.repeatNum,\n      () => {\n        clearTimer()\n        startTimer()\n      }\n    )\n\n    useEventListener(document, 'keydown', keydown)\n\n    return {\n      ns,\n      typeClass,\n      iconComponent,\n      customStyle,\n      visible,\n      badgeType,\n\n      close,\n      clearTimer,\n      startTimer,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}