{"ast":null,"code":"import { computed, unref } from 'vue';\nimport { useGlobalConfig } from '../use-global-config/index.mjs';\nconst defaultNamespace = \"tw\";\nconst statePrefix = \"is-\";\nconst _bem = (namespace, block, blockSuffix, element, modifier) => {\n  let cls = `${namespace}-${block}`;\n  if (blockSuffix) {\n    cls += `-${blockSuffix}`;\n  }\n  if (element) {\n    cls += `__${element}`;\n  }\n  if (modifier) {\n    cls += `--${modifier}`;\n  }\n  return cls;\n};\nconst useNamespace = block => {\n  const globalConfig = useGlobalConfig(\"namespace\");\n  const namespace = computed(() => globalConfig.value || defaultNamespace);\n  const b = (blockSuffix = \"\") => _bem(unref(namespace), block, blockSuffix, \"\", \"\");\n  const e = element => element ? _bem(unref(namespace), block, \"\", element, \"\") : \"\";\n  const m = modifier => modifier ? _bem(unref(namespace), block, \"\", \"\", modifier) : \"\";\n  const be = (blockSuffix, element) => blockSuffix && element ? _bem(unref(namespace), block, blockSuffix, element, \"\") : \"\";\n  const em = (element, modifier) => element && modifier ? _bem(unref(namespace), block, \"\", element, modifier) : \"\";\n  const bm = (blockSuffix, modifier) => blockSuffix && modifier ? _bem(unref(namespace), block, blockSuffix, \"\", modifier) : \"\";\n  const bem = (blockSuffix, element, modifier) => blockSuffix && element && modifier ? _bem(unref(namespace), block, blockSuffix, element, modifier) : \"\";\n  const is = (name, ...args) => {\n    const state = args.length >= 1 ? args[0] : true;\n    return name && state ? `${statePrefix}${name}` : \"\";\n  };\n  return {\n    namespace,\n    b,\n    e,\n    m,\n    be,\n    em,\n    bm,\n    bem,\n    is\n  };\n};\nexport { useNamespace };","map":{"version":3,"names":["defaultNamespace","statePrefix","_bem","namespace","block","blockSuffix","element","modifier","cls","useNamespace","globalConfig","useGlobalConfig","computed","value","b","unref","e","m","be","em","bm","bem","is","name","args","state","length"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/hooks/use-namespace/index.ts"],"sourcesContent":["import { unref, computed } from 'vue'\nimport { useGlobalConfig } from '../use-global-config'\n\nconst defaultNamespace = 'tw'\nconst statePrefix = 'is-'\n\nconst _bem = (\n  namespace: string,\n  block: string,\n  blockSuffix: string,\n  element: string,\n  modifier: string\n) => {\n  let cls = `${namespace}-${block}`\n  if (blockSuffix) {\n    cls += `-${blockSuffix}`\n  }\n  if (element) {\n    cls += `__${element}`\n  }\n  if (modifier) {\n    cls += `--${modifier}`\n  }\n  return cls\n}\n\nexport const useNamespace = (block: string) => {\n  const globalConfig = useGlobalConfig('namespace')\n  const namespace = computed(() => globalConfig.value || defaultNamespace)\n  const b = (blockSuffix = '') =>\n    _bem(unref(namespace), block, blockSuffix, '', '')\n  const e = (element?: string) =>\n    element ? _bem(unref(namespace), block, '', element, '') : ''\n  const m = (modifier?: string) =>\n    modifier ? _bem(unref(namespace), block, '', '', modifier) : ''\n  const be = (blockSuffix?: string, element?: string) =>\n    blockSuffix && element\n      ? _bem(unref(namespace), block, blockSuffix, element, '')\n      : ''\n  const em = (element?: string, modifier?: string) =>\n    element && modifier\n      ? _bem(unref(namespace), block, '', element, modifier)\n      : ''\n  const bm = (blockSuffix?: string, modifier?: string) =>\n    blockSuffix && modifier\n      ? _bem(unref(namespace), block, blockSuffix, '', modifier)\n      : ''\n  const bem = (blockSuffix?: string, element?: string, modifier?: string) =>\n    blockSuffix && element && modifier\n      ? _bem(unref(namespace), block, blockSuffix, element, modifier)\n      : ''\n  const is: {\n    (name: string, state: boolean | undefined): string\n    (name: string): string\n  } = (name: string, ...args: [boolean | undefined] | []) => {\n    const state = args.length >= 1 ? args[0]! : true\n    return name && state ? `${statePrefix}${name}` : ''\n  }\n  return {\n    namespace,\n    b,\n    e,\n    m,\n    be,\n    em,\n    bm,\n    bem,\n    is,\n  }\n}\n"],"mappings":";;AAEA,MAAMA,gBAAgB,GAAG,IAAI;AAC7B,MAAMC,WAAW,GAAG,KAAK;AACzB,MAAMC,IAAI,GAAGA,CAACC,SAAS,EAAEC,KAAK,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,KAAK;EACjE,IAAIC,GAAG,GAAI,GAAEL,SAAU,IAAGC,KAAM,EAAC;EACjC,IAAIC,WAAW,EAAE;IACfG,GAAG,IAAK,IAAGH,WAAY,EAAC;EAC5B;EACE,IAAIC,OAAO,EAAE;IACXE,GAAG,IAAK,KAAIF,OAAQ,EAAC;EACzB;EACE,IAAIC,QAAQ,EAAE;IACZC,GAAG,IAAK,KAAID,QAAS,EAAC;EAC1B;EACE,OAAOC,GAAG;AACZ,CAAC;AACW,MAACC,YAAY,GAAIL,KAAK,IAAK;EACrC,MAAMM,YAAY,GAAGC,eAAe,CAAC,WAAW,CAAC;EACjD,MAAMR,SAAS,GAAGS,QAAQ,CAAC,MAAMF,YAAY,CAACG,KAAK,IAAIb,gBAAgB,CAAC;EACxE,MAAMc,CAAC,GAAGA,CAACT,WAAW,GAAG,EAAE,KAAKH,IAAI,CAACa,KAAK,CAACZ,SAAS,CAAC,EAAEC,KAAK,EAAEC,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC;EAClF,MAAMW,CAAC,GAAIV,OAAO,IAAKA,OAAO,GAAGJ,IAAI,CAACa,KAAK,CAACZ,SAAS,CAAC,EAAEC,KAAK,EAAE,EAAE,EAAEE,OAAO,EAAE,EAAE,CAAC,GAAG,EAAE;EACpF,MAAMW,CAAC,GAAIV,QAAQ,IAAKA,QAAQ,GAAGL,IAAI,CAACa,KAAK,CAACZ,SAAS,CAAC,EAAEC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAEG,QAAQ,CAAC,GAAG,EAAE;EACvF,MAAMW,EAAE,GAAGA,CAACb,WAAW,EAAEC,OAAO,KAAKD,WAAW,IAAIC,OAAO,GAAGJ,IAAI,CAACa,KAAK,CAACZ,SAAS,CAAC,EAAEC,KAAK,EAAEC,WAAW,EAAEC,OAAO,EAAE,EAAE,CAAC,GAAG,EAAE;EAC1H,MAAMa,EAAE,GAAGA,CAACb,OAAO,EAAEC,QAAQ,KAAKD,OAAO,IAAIC,QAAQ,GAAGL,IAAI,CAACa,KAAK,CAACZ,SAAS,CAAC,EAAEC,KAAK,EAAE,EAAE,EAAEE,OAAO,EAAEC,QAAQ,CAAC,GAAG,EAAE;EACjH,MAAMa,EAAE,GAAGA,CAACf,WAAW,EAAEE,QAAQ,KAAKF,WAAW,IAAIE,QAAQ,GAAGL,IAAI,CAACa,KAAK,CAACZ,SAAS,CAAC,EAAEC,KAAK,EAAEC,WAAW,EAAE,EAAE,EAAEE,QAAQ,CAAC,GAAG,EAAE;EAC7H,MAAMc,GAAG,GAAGA,CAAChB,WAAW,EAAEC,OAAO,EAAEC,QAAQ,KAAKF,WAAW,IAAIC,OAAO,IAAIC,QAAQ,GAAGL,IAAI,CAACa,KAAK,CAACZ,SAAS,CAAC,EAAEC,KAAK,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,CAAC,GAAG,EAAE;EACvJ,MAAMe,EAAE,GAAGA,CAACC,IAAI,EAAE,GAAGC,IAAI,KAAK;IAC5B,MAAMC,KAAK,GAAGD,IAAI,CAACE,MAAM,IAAI,CAAC,GAAGF,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI;IAC/C,OAAOD,IAAI,IAAIE,KAAK,GAAI,GAAExB,WAAY,GAAEsB,IAAK,EAAC,GAAG,EAAE;EACvD,CAAG;EACD,OAAO;IACLpB,SAAS;IACTW,CAAC;IACDE,CAAC;IACDC,CAAC;IACDC,EAAE;IACFC,EAAE;IACFC,EAAE;IACFC,GAAG;IACHC;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}