{"ast":null,"code":"import { defineComponent, provide, reactive, toRef, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buttonGroupProps } from './button-group2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { buttonGroupContextKey } from '../../../tokens/button.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwButtonGroup\",\n  props: buttonGroupProps,\n  setup(props) {\n    provide(buttonGroupContextKey, reactive({\n      size: toRef(props, \"size\"),\n      type: toRef(props, \"type\")\n    }));\n    const ns = useNamespace(\"button\");\n    return {\n      ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(`${_ctx.ns.b(\"group\")}`)\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\nvar ButtonGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { ButtonGroup as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","buttonGroupProps","setup","provide","buttonGroupContextKey","reactive","size","toRef","type","ns","useNamespace","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","class","normalizeClass","_ctx","b","renderSlot","$slots"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/button/src/button-group.vue"],"sourcesContent":["<template>\n  <div :class=\"`${ns.b('group')}`\">\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, provide, reactive, toRef } from 'vue'\nimport { buttonGroupContextKey } from '@tw-element/tokens'\nimport { useNamespace } from '@tw-element/hooks'\nimport { buttonGroupProps } from './button-group'\n\nexport default defineComponent({\n  name: 'TwButtonGroup',\n  props: buttonGroupProps,\n\n  setup(props) {\n    provide(\n      buttonGroupContextKey,\n      reactive({\n        size: toRef(props, 'size'),\n        type: toRef(props, 'type'),\n      })\n    )\n    const ns = useNamespace('button')\n    return {\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;AAWA,MAAKA,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAOC,gBAAA;EAEPC,MAAMF,KAAA,EAAO;IACXG,OAAA,CACEC,qBAAA,EACAC,QAAA,CAAS;MACPC,IAAA,EAAMC,KAAA,CAAMP,KAAA,EAAO;MACnBQ,IAAA,EAAMD,KAAA,CAAMP,KAAA,EAAO;IAAA;IAGvB,MAAMS,EAAA,GAAKC,YAAA,CAAa;IACxB,OAAO;MACLD;IAAA;EAAA;AAAA;2BAxBJE,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAEMC,KAAA,EAAAC,QAAA;SAFKC,SAAA,IAAAC,kBAAA,CAAS;IAAAC,KAAA,EAAAC,cAAA,IAAAC,IAAA,CAAAX,EAAA,CAAAY,CAAA;KAClB,CAAAC,UAAA,CAAAF,IAAA,CAAAG,MAAA,a"},"metadata":{},"sourceType":"module","externalDependencies":[]}