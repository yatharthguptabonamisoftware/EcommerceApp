{"ast":null,"code":"import { defineComponent, ref, computed, watch, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, renderSlot } from 'vue';\nimport { TwIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { avatarProps, avatarEmits } from './avatar2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber } from '@vueuse/core';\nimport { addUnit } from '../../../utils/vue/style.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwAvatar\",\n  components: {\n    TwIcon\n  },\n  props: avatarProps,\n  emits: avatarEmits,\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"avatar\");\n    const hasLoadError = ref(false);\n    const avatarClass = computed(() => {\n      const {\n        size,\n        icon,\n        shape\n      } = props;\n      const classList = [ns.b()];\n      if (isString(size)) classList.push(ns.m(size));\n      if (icon) classList.push(ns.m(\"icon\"));\n      if (shape) classList.push(ns.m(shape));\n      return classList;\n    });\n    const sizeStyle = computed(() => {\n      const {\n        size\n      } = props;\n      return isNumber(size) ? {\n        \"--tw-avatar-size\": addUnit(size)\n      } : void 0;\n    });\n    const fitStyle = computed(() => ({\n      objectFit: props.fit\n    }));\n    watch(() => props.src, () => hasLoadError.value = false);\n    function handleError(e) {\n      hasLoadError.value = true;\n      emit(\"error\", e);\n    }\n    return {\n      hasLoadError,\n      avatarClass,\n      sizeStyle,\n      fitStyle,\n      handleError\n    };\n  }\n});\nconst _hoisted_1 = [\"src\", \"alt\", \"srcset\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  return openBlock(), createElementBlock(\"span\", {\n    class: normalizeClass(_ctx.avatarClass),\n    style: normalizeStyle(_ctx.sizeStyle)\n  }, [(_ctx.src || _ctx.srcSet) && !_ctx.hasLoadError ? (openBlock(), createElementBlock(\"img\", {\n    key: 0,\n    src: _ctx.src,\n    alt: _ctx.alt,\n    srcset: _ctx.srcSet,\n    style: normalizeStyle(_ctx.fitStyle),\n    onError: _cache[0] || (_cache[0] = (...args) => _ctx.handleError && _ctx.handleError(...args))\n  }, null, 44, _hoisted_1)) : _ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 1\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))]),\n    _: 1\n  })) : renderSlot(_ctx.$slots, \"default\", {\n    key: 2\n  })], 6);\n}\nvar Avatar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Avatar as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","TwIcon","props","avatarProps","emits","avatarEmits","setup","emit","ns","useNamespace","hasLoadError","ref","avatarClass","computed","size","icon","shape","classList","b","isString","push","m","sizeStyle","isNumber","addUnit","fitStyle","objectFit","fit","watch","src","value","handleError","e","openBlock","createElementBlock","class","normalizeClass","_ctx","style","normalizeStyle","srcSet","key","alt","srcset","onError","_cache","args","_hoisted_1","createBlock","_component_el_icon","default","withCtx","resolveDynamicComponent"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/avatar/src/avatar.vue"],"sourcesContent":["<template>\n  <span :class=\"avatarClass\" :style=\"sizeStyle\">\n    <img\n      v-if=\"(src || srcSet) && !hasLoadError\"\n      :src=\"src\"\n      :alt=\"alt\"\n      :srcset=\"srcSet\"\n      :style=\"fitStyle\"\n      @error=\"handleError\"\n    />\n    <el-icon v-else-if=\"icon\">\n      <component :is=\"icon\" />\n    </el-icon>\n    <slot v-else></slot>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, watch } from 'vue'\nimport { TwIcon } from '@tw-element/components/icon'\nimport { useNamespace } from '@tw-element/hooks'\nimport { isNumber, isString, addUnit } from '@tw-element/utils'\nimport { avatarEmits, avatarProps } from './avatar'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'TwAvatar',\n  components: {\n    TwIcon,\n  },\n  props: avatarProps,\n  emits: avatarEmits,\n\n  setup(props, { emit }) {\n    const ns = useNamespace('avatar')\n\n    const hasLoadError = ref(false)\n\n    const avatarClass = computed(() => {\n      const { size, icon, shape } = props\n      const classList = [ns.b()]\n      if (isString(size)) classList.push(ns.m(size))\n      if (icon) classList.push(ns.m('icon'))\n      if (shape) classList.push(ns.m(shape))\n      return classList\n    })\n\n    const sizeStyle = computed(() => {\n      const { size } = props\n      return isNumber(size)\n        ? ({\n            '--tw-avatar-size': addUnit(size),\n          } as CSSProperties)\n        : undefined\n    })\n\n    const fitStyle = computed<CSSProperties>(() => ({\n      objectFit: props.fit,\n    }))\n\n    // need reset hasLoadError to false if src changed\n    watch(\n      () => props.src,\n      () => (hasLoadError.value = false)\n    )\n\n    function handleError(e: Event) {\n      hasLoadError.value = true\n      emit('error', e)\n    }\n\n    return {\n      hasLoadError,\n      avatarClass,\n      sizeStyle,\n      fitStyle,\n      handleError,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;AA0BA,MAAKA,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IACVC;EAAA;EAEFC,KAAA,EAAOC,WAAA;EACPC,KAAA,EAAOC,WAAA;EAEPC,MAAMJ,KAAA,EAAO;IAAEK;EAAA,GAAQ;IACrB,MAAMC,EAAA,GAAKC,YAAA,CAAa;IAExB,MAAMC,YAAA,GAAeC,GAAA,CAAI;IAEzB,MAAMC,WAAA,GAAcC,QAAA,CAAS,MAAM;MACjC,MAAM;QAAEC,IAAA;QAAMC,IAAA;QAAMC;MAAA,IAAUd,KAAA;MAC9B,MAAMe,SAAA,GAAY,CAACT,EAAA,CAAGU,CAAA;MACtB,IAAIC,QAAA,CAASL,IAAA,GAAOG,SAAA,CAAUG,IAAA,CAAKZ,EAAA,CAAGa,CAAA,CAAEP,IAAA;MACxC,IAAIC,IAAA,EAAME,SAAA,CAAUG,IAAA,CAAKZ,EAAA,CAAGa,CAAA,CAAE;MAC9B,IAAIL,KAAA,EAAOC,SAAA,CAAUG,IAAA,CAAKZ,EAAA,CAAGa,CAAA,CAAEL,KAAA;MAC/B,OAAOC,SAAA;IAAA;IAGT,MAAMK,SAAA,GAAYT,QAAA,CAAS,MAAM;MAC/B,MAAM;QAAEC;MAAA,IAASZ,KAAA;MACjB,OAAOqB,QAAA,CAAST,IAAA,IACX;QACC,oBAAoBU,OAAA,CAAQV,IAAA;MAAA,IAE9B;IAAA;IAGN,MAAMW,QAAA,GAAWZ,QAAA,CAAwB;MACvCa,SAAA,EAAWxB,KAAA,CAAMyB;IAAA;IAInBC,KAAA,CACE,MAAM1B,KAAA,CAAM2B,GAAA,EACZ,MAAOnB,YAAA,CAAaoB,KAAA,GAAQ;IAG9B,SAAAC,YAAqBC,CAAA,EAAU;MAC7BtB,YAAA,CAAaoB,KAAA,GAAQ;MACrBvB,IAAA,CAAK,SAASyB,CAAA;IAAA;IAGhB,OAAO;MACLtB,YAAA;MACAE,WAAA;MACAU,SAAA;MACAG,QAAA;MACAM;IAAA;EAAA;AAAA;;;;SA5EQE,SAAA,IAAAC,kBAAA,CAAa;IAAGC,KAAA,EAAKC,cAAA,CAAEC,IAAA,CAAAzB,WAAA;IAAA0B,KAAA,EAAAC,cAAA,CAAAF,IAAA,CAAAf,SAAA;wBACjCkB,MAAA,MAAAH,IAAA,CAAA3B,YAAA,IAAAuB,SAAA,IAAAC,kBAAA;IAEGO,GAAA,EAAK;IACLZ,GAAA,EAAKQ,IAAA,CAAAR,GAAA;IACLa,GAAA,EAAAL,IAAA,CAAQK,GAAA;IACRC,MAAA,EAAKN,IAAA,CAAAG,MAAA;IACLF,KAAA,EAAKC,cAAA,CAAAF,IAAA,CAAAZ,QAAA;IAAAmB,OAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAAT,IAAA,CAAAN,WAAA,IAAAM,IAAA,CAAAN,WAAA,IAAAe,IAAA;KAEY,UAAIC,UAAA,KAAAV,IAAA,CAAAtB,IAAA,IAAAkB,SAAA,IAAAe,WAAA,CACEC,kBAAA;IAAAR,GAAA;EAAA;IAAAS,OAAA,EAAAC,OAAA,CAAxB,QAAAlB,SAAA,IAAAe,WAAA,CAAAI,uBAAA,CAAAf,IAAA,CAAAtB,IAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}