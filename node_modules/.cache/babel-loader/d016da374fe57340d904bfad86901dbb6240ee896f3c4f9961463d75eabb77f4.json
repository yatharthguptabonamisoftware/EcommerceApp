{"ast":null,"code":"import { inject, shallowRef, ref, computed, nextTick } from 'vue';\nimport '../../../constants/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { twFormKey, twFormItemKey } from '../../../tokens/form.mjs';\nimport { UPDATE_MODEL_EVENT, INPUT_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nconst useSlide = (props, initData, emit) => {\n  const TwForm = inject(twFormKey, {});\n  const TwFormItem = inject(twFormItemKey, {});\n  const slider = shallowRef(null);\n  const firstButton = ref(null);\n  const secondButton = ref(null);\n  const buttonRefs = {\n    firstButton,\n    secondButton\n  };\n  const sliderDisabled = computed(() => {\n    return props.disabled || TwForm.disabled || false;\n  });\n  const minValue = computed(() => {\n    return Math.min(initData.firstValue, initData.secondValue);\n  });\n  const maxValue = computed(() => {\n    return Math.max(initData.firstValue, initData.secondValue);\n  });\n  const barSize = computed(() => {\n    return props.range ? `${100 * (maxValue.value - minValue.value) / (props.max - props.min)}%` : `${100 * (initData.firstValue - props.min) / (props.max - props.min)}%`;\n  });\n  const barStart = computed(() => {\n    return props.range ? `${100 * (minValue.value - props.min) / (props.max - props.min)}%` : \"0%\";\n  });\n  const runwayStyle = computed(() => {\n    return props.vertical ? {\n      height: props.height\n    } : {};\n  });\n  const barStyle = computed(() => {\n    return props.vertical ? {\n      height: barSize.value,\n      bottom: barStart.value\n    } : {\n      width: barSize.value,\n      left: barStart.value\n    };\n  });\n  const resetSize = () => {\n    if (slider.value) {\n      initData.sliderSize = slider.value[`client${props.vertical ? \"Height\" : \"Width\"}`];\n    }\n  };\n  const setPosition = percent => {\n    const targetValue = props.min + percent * (props.max - props.min) / 100;\n    if (!props.range) {\n      firstButton.value.setPosition(percent);\n      return;\n    }\n    let buttonRefName;\n    if (Math.abs(minValue.value - targetValue) < Math.abs(maxValue.value - targetValue)) {\n      buttonRefName = initData.firstValue < initData.secondValue ? \"firstButton\" : \"secondButton\";\n    } else {\n      buttonRefName = initData.firstValue > initData.secondValue ? \"firstButton\" : \"secondButton\";\n    }\n    buttonRefs[buttonRefName].value.setPosition(percent);\n  };\n  const setFirstValue = firstValue => {\n    initData.firstValue = firstValue;\n    _emit(props.range ? [minValue.value, maxValue.value] : firstValue);\n  };\n  const setSecondValue = secondValue => {\n    initData.secondValue = secondValue;\n    if (props.range) {\n      _emit([minValue.value, maxValue.value]);\n    }\n  };\n  const _emit = val => {\n    emit(UPDATE_MODEL_EVENT, val);\n    emit(INPUT_EVENT, val);\n  };\n  const emitChange = async () => {\n    await nextTick();\n    emit(CHANGE_EVENT, props.range ? [minValue.value, maxValue.value] : props.modelValue);\n  };\n  const onSliderClick = event => {\n    if (sliderDisabled.value || initData.dragging) return;\n    resetSize();\n    if (props.vertical) {\n      const sliderOffsetBottom = slider.value.getBoundingClientRect().bottom;\n      setPosition((sliderOffsetBottom - event.clientY) / initData.sliderSize * 100);\n    } else {\n      const sliderOffsetLeft = slider.value.getBoundingClientRect().left;\n      setPosition((event.clientX - sliderOffsetLeft) / initData.sliderSize * 100);\n    }\n    emitChange();\n  };\n  return {\n    TwFormItem,\n    slider,\n    firstButton,\n    secondButton,\n    sliderDisabled,\n    minValue,\n    maxValue,\n    runwayStyle,\n    barStyle,\n    resetSize,\n    setPosition,\n    emitChange,\n    onSliderClick,\n    setFirstValue,\n    setSecondValue\n  };\n};\nexport { useSlide };","map":{"version":3,"names":["useSlide","props","initData","emit","TwForm","inject","twFormKey","TwFormItem","twFormItemKey","slider","shallowRef","firstButton","ref","secondButton","buttonRefs","sliderDisabled","computed","disabled","minValue","Math","min","firstValue","secondValue","maxValue","max","barSize","range","value","barStart","runwayStyle","vertical","height","barStyle","bottom","width","left","resetSize","sliderSize","setPosition","percent","targetValue","buttonRefName","abs","setFirstValue","_emit","setSecondValue","val","UPDATE_MODEL_EVENT","INPUT_EVENT","emitChange","nextTick","CHANGE_EVENT","modelValue","onSliderClick","event","dragging","sliderOffsetBottom","getBoundingClientRect","clientY","sliderOffsetLeft","clientX"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/slider/src/useSlide.ts"],"sourcesContent":["import { computed, inject, nextTick, ref, shallowRef } from 'vue'\nimport {\n  CHANGE_EVENT,\n  UPDATE_MODEL_EVENT,\n  INPUT_EVENT,\n} from '@tw-element/constants'\nimport { twFormKey, twFormItemKey } from '@tw-element/tokens'\nimport type { CSSProperties } from 'vue'\nimport type { ButtonRefs, ISliderInitData, ISliderProps } from './slider.type'\n\nimport type { TwFormContext, TwFormItemContext } from '@tw-element/tokens'\nimport type { Nullable } from '@tw-element/utils'\n\nexport const useSlide = (\n  props: ISliderProps,\n  initData: ISliderInitData,\n  emit\n) => {\n  const TwForm = inject(twFormKey, {} as TwFormContext)\n  const TwFormItem = inject(twFormItemKey, {} as TwFormItemContext)\n\n  const slider = shallowRef<Nullable<HTMLElement>>(null)\n\n  const firstButton = ref(null)\n\n  const secondButton = ref(null)\n\n  const buttonRefs: ButtonRefs = {\n    firstButton,\n    secondButton,\n  }\n\n  const sliderDisabled = computed(() => {\n    return props.disabled || TwForm.disabled || false\n  })\n\n  const minValue = computed(() => {\n    return Math.min(initData.firstValue, initData.secondValue)\n  })\n\n  const maxValue = computed(() => {\n    return Math.max(initData.firstValue, initData.secondValue)\n  })\n\n  const barSize = computed(() => {\n    return props.range\n      ? `${\n          (100 * (maxValue.value - minValue.value)) / (props.max - props.min)\n        }%`\n      : `${\n          (100 * (initData.firstValue - props.min)) / (props.max - props.min)\n        }%`\n  })\n\n  const barStart = computed(() => {\n    return props.range\n      ? `${(100 * (minValue.value - props.min)) / (props.max - props.min)}%`\n      : '0%'\n  })\n\n  const runwayStyle = computed<CSSProperties>(() => {\n    return props.vertical ? { height: props.height } : {}\n  })\n\n  const barStyle = computed<CSSProperties>(() => {\n    return props.vertical\n      ? {\n          height: barSize.value,\n          bottom: barStart.value,\n        }\n      : {\n          width: barSize.value,\n          left: barStart.value,\n        }\n  })\n\n  const resetSize = () => {\n    if (slider.value) {\n      initData.sliderSize =\n        slider.value[`client${props.vertical ? 'Height' : 'Width'}`]\n    }\n  }\n\n  const setPosition = (percent: number) => {\n    const targetValue = props.min + (percent * (props.max - props.min)) / 100\n    if (!props.range) {\n      firstButton.value.setPosition(percent)\n      return\n    }\n    let buttonRefName: string\n    if (\n      Math.abs(minValue.value - targetValue) <\n      Math.abs(maxValue.value - targetValue)\n    ) {\n      buttonRefName =\n        initData.firstValue < initData.secondValue\n          ? 'firstButton'\n          : 'secondButton'\n    } else {\n      buttonRefName =\n        initData.firstValue > initData.secondValue\n          ? 'firstButton'\n          : 'secondButton'\n    }\n    buttonRefs[buttonRefName].value.setPosition(percent)\n  }\n\n  const setFirstValue = (firstValue: number) => {\n    initData.firstValue = firstValue\n    _emit(props.range ? [minValue.value, maxValue.value] : firstValue)\n  }\n\n  const setSecondValue = (secondValue: number) => {\n    initData.secondValue = secondValue\n\n    if (props.range) {\n      _emit([minValue.value, maxValue.value])\n    }\n  }\n\n  const _emit = (val: number | number[]) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emit(INPUT_EVENT, val)\n  }\n\n  const emitChange = async () => {\n    await nextTick()\n    emit(\n      CHANGE_EVENT,\n      props.range ? [minValue.value, maxValue.value] : props.modelValue\n    )\n  }\n\n  const onSliderClick = (event: MouseEvent) => {\n    if (sliderDisabled.value || initData.dragging) return\n    resetSize()\n    if (props.vertical) {\n      const sliderOffsetBottom = slider.value.getBoundingClientRect().bottom\n      setPosition(\n        ((sliderOffsetBottom - event.clientY) / initData.sliderSize) * 100\n      )\n    } else {\n      const sliderOffsetLeft = slider.value.getBoundingClientRect().left\n      setPosition(\n        ((event.clientX - sliderOffsetLeft) / initData.sliderSize) * 100\n      )\n    }\n    emitChange()\n  }\n\n  return {\n    TwFormItem,\n    slider,\n    firstButton,\n    secondButton,\n    sliderDisabled,\n    minValue,\n    maxValue,\n    runwayStyle,\n    barStyle,\n    resetSize,\n    setPosition,\n    emitChange,\n    onSliderClick,\n    setFirstValue,\n    setSecondValue,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}