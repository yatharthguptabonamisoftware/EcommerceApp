{"ast":null,"code":"import { ref, computed, inject, nextTick, watch } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { on, off } from '../../../utils/dom/event.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nconst useTooltip = (props, formatTooltip, showTooltip) => {\n  const tooltip = ref(null);\n  const tooltipVisible = ref(false);\n  const enableFormat = computed(() => {\n    return formatTooltip.value instanceof Function;\n  });\n  const formatValue = computed(() => {\n    return enableFormat.value && formatTooltip.value(props.modelValue) || props.modelValue;\n  });\n  const displayTooltip = debounce(() => {\n    showTooltip.value && (tooltipVisible.value = true);\n  }, 50);\n  const hideTooltip = debounce(() => {\n    showTooltip.value && (tooltipVisible.value = false);\n  }, 50);\n  return {\n    tooltip,\n    tooltipVisible,\n    formatValue,\n    displayTooltip,\n    hideTooltip\n  };\n};\nconst useSliderButton = (props, initData, emit) => {\n  const {\n    disabled,\n    min,\n    max,\n    step,\n    showTooltip,\n    precision,\n    sliderSize,\n    formatTooltip,\n    emitChange,\n    resetSize,\n    updateDragging\n  } = inject(\"SliderProvider\");\n  const {\n    tooltip,\n    tooltipVisible,\n    formatValue,\n    displayTooltip,\n    hideTooltip\n  } = useTooltip(props, formatTooltip, showTooltip);\n  const currentPosition = computed(() => {\n    return `${(props.modelValue - min.value) / (max.value - min.value) * 100}%`;\n  });\n  const wrapperStyle = computed(() => {\n    return props.vertical ? {\n      bottom: currentPosition.value\n    } : {\n      left: currentPosition.value\n    };\n  });\n  const handleMouseEnter = () => {\n    initData.hovering = true;\n    displayTooltip();\n  };\n  const handleMouseLeave = () => {\n    initData.hovering = false;\n    if (!initData.dragging) {\n      hideTooltip();\n    }\n  };\n  const onButtonDown = event => {\n    if (disabled.value) return;\n    event.preventDefault();\n    onDragStart(event);\n    on(window, \"mousemove\", onDragging);\n    on(window, \"touchmove\", onDragging);\n    on(window, \"mouseup\", onDragEnd);\n    on(window, \"touchend\", onDragEnd);\n    on(window, \"contextmenu\", onDragEnd);\n  };\n  const onLeftKeyDown = () => {\n    if (disabled.value) return;\n    initData.newPosition = parseFloat(currentPosition.value) - step.value / (max.value - min.value) * 100;\n    setPosition(initData.newPosition);\n    emitChange();\n  };\n  const onRightKeyDown = () => {\n    if (disabled.value) return;\n    initData.newPosition = parseFloat(currentPosition.value) + step.value / (max.value - min.value) * 100;\n    setPosition(initData.newPosition);\n    emitChange();\n  };\n  const getClientXY = event => {\n    let clientX;\n    let clientY;\n    if (event.type.startsWith(\"touch\")) {\n      clientY = event.touches[0].clientY;\n      clientX = event.touches[0].clientX;\n    } else {\n      clientY = event.clientY;\n      clientX = event.clientX;\n    }\n    return {\n      clientX,\n      clientY\n    };\n  };\n  const onDragStart = event => {\n    initData.dragging = true;\n    initData.isClick = true;\n    const {\n      clientX,\n      clientY\n    } = getClientXY(event);\n    if (props.vertical) {\n      initData.startY = clientY;\n    } else {\n      initData.startX = clientX;\n    }\n    initData.startPosition = parseFloat(currentPosition.value);\n    initData.newPosition = initData.startPosition;\n  };\n  const onDragging = event => {\n    if (initData.dragging) {\n      initData.isClick = false;\n      displayTooltip();\n      resetSize();\n      let diff;\n      const {\n        clientX,\n        clientY\n      } = getClientXY(event);\n      if (props.vertical) {\n        initData.currentY = clientY;\n        diff = (initData.startY - initData.currentY) / sliderSize.value * 100;\n      } else {\n        initData.currentX = clientX;\n        diff = (initData.currentX - initData.startX) / sliderSize.value * 100;\n      }\n      initData.newPosition = initData.startPosition + diff;\n      setPosition(initData.newPosition);\n    }\n  };\n  const onDragEnd = () => {\n    if (initData.dragging) {\n      setTimeout(() => {\n        initData.dragging = false;\n        if (!initData.hovering) {\n          hideTooltip();\n        }\n        if (!initData.isClick) {\n          setPosition(initData.newPosition);\n          emitChange();\n        }\n      }, 0);\n      off(window, \"mousemove\", onDragging);\n      off(window, \"touchmove\", onDragging);\n      off(window, \"mouseup\", onDragEnd);\n      off(window, \"touchend\", onDragEnd);\n      off(window, \"contextmenu\", onDragEnd);\n    }\n  };\n  const setPosition = async newPosition => {\n    if (newPosition === null || isNaN(newPosition)) return;\n    if (newPosition < 0) {\n      newPosition = 0;\n    } else if (newPosition > 100) {\n      newPosition = 100;\n    }\n    const lengthPerStep = 100 / ((max.value - min.value) / step.value);\n    const steps = Math.round(newPosition / lengthPerStep);\n    let value = steps * lengthPerStep * (max.value - min.value) * 0.01 + min.value;\n    value = parseFloat(value.toFixed(precision.value));\n    emit(UPDATE_MODEL_EVENT, value);\n    if (!initData.dragging && props.modelValue !== initData.oldValue) {\n      initData.oldValue = props.modelValue;\n    }\n    await nextTick();\n    initData.dragging && displayTooltip();\n    tooltip.value.updatePopper();\n  };\n  watch(() => initData.dragging, val => {\n    updateDragging(val);\n  });\n  return {\n    tooltip,\n    tooltipVisible,\n    showTooltip,\n    wrapperStyle,\n    formatValue,\n    handleMouseEnter,\n    handleMouseLeave,\n    onButtonDown,\n    onLeftKeyDown,\n    onRightKeyDown,\n    setPosition\n  };\n};\nexport { useSliderButton };","map":{"version":3,"names":["useTooltip","props","formatTooltip","showTooltip","tooltip","ref","tooltipVisible","enableFormat","computed","value","Function","formatValue","modelValue","displayTooltip","debounce","hideTooltip","useSliderButton","initData","emit","disabled","min","max","step","precision","sliderSize","emitChange","resetSize","updateDragging","inject","currentPosition","wrapperStyle","vertical","bottom","left","handleMouseEnter","hovering","handleMouseLeave","dragging","onButtonDown","event","preventDefault","onDragStart","on","window","onDragging","onDragEnd","onLeftKeyDown","newPosition","parseFloat","setPosition","onRightKeyDown","getClientXY","clientX","clientY","type","startsWith","touches","isClick","startY","startX","startPosition","diff","currentY","currentX","setTimeout","off","isNaN","lengthPerStep","steps","Math","round","toFixed","UPDATE_MODEL_EVENT","oldValue","nextTick","updatePopper","watch","val"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/slider/src/useSliderButton.ts"],"sourcesContent":["import { computed, inject, nextTick, ref, watch } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { UPDATE_MODEL_EVENT } from '@tw-element/constants'\nimport { off, on } from '@tw-element/utils'\n\nimport type { ComputedRef, CSSProperties } from 'vue'\nimport type {\n  ISliderButtonInitData,\n  ISliderButtonProps,\n  ISliderProvider,\n} from './slider.type'\n\nconst useTooltip = (\n  props: ISliderButtonProps,\n  formatTooltip: ComputedRef<(value: number) => number | string>,\n  showTooltip: ComputedRef<boolean>\n) => {\n  const tooltip = ref(null)\n\n  const tooltipVisible = ref(false)\n\n  const enableFormat = computed(() => {\n    return formatTooltip.value instanceof Function\n  })\n\n  const formatValue = computed(() => {\n    return (\n      (enableFormat.value && formatTooltip.value(props.modelValue)) ||\n      props.modelValue\n    )\n  })\n\n  const displayTooltip = debounce(() => {\n    showTooltip.value && (tooltipVisible.value = true)\n  }, 50)\n\n  const hideTooltip = debounce(() => {\n    showTooltip.value && (tooltipVisible.value = false)\n  }, 50)\n\n  return {\n    tooltip,\n    tooltipVisible,\n    formatValue,\n    displayTooltip,\n    hideTooltip,\n  }\n}\n\nexport const useSliderButton = (\n  props: ISliderButtonProps,\n  initData: ISliderButtonInitData,\n  emit\n) => {\n  const {\n    disabled,\n    min,\n    max,\n    step,\n    showTooltip,\n    precision,\n    sliderSize,\n    formatTooltip,\n    emitChange,\n    resetSize,\n    updateDragging,\n  } = inject<ISliderProvider>('SliderProvider')\n\n  const { tooltip, tooltipVisible, formatValue, displayTooltip, hideTooltip } =\n    useTooltip(props, formatTooltip, showTooltip)\n\n  const currentPosition = computed(() => {\n    return `${\n      ((props.modelValue - min.value) / (max.value - min.value)) * 100\n    }%`\n  })\n\n  const wrapperStyle = computed(() => {\n    return (\n      props.vertical\n        ? { bottom: currentPosition.value }\n        : { left: currentPosition.value }\n    ) as CSSProperties\n  })\n\n  const handleMouseEnter = () => {\n    initData.hovering = true\n    displayTooltip()\n  }\n\n  const handleMouseLeave = () => {\n    initData.hovering = false\n    if (!initData.dragging) {\n      hideTooltip()\n    }\n  }\n\n  const onButtonDown = (event: MouseEvent | TouchEvent) => {\n    if (disabled.value) return\n    event.preventDefault()\n    onDragStart(event)\n    on(window, 'mousemove', onDragging)\n    on(window, 'touchmove', onDragging)\n    on(window, 'mouseup', onDragEnd)\n    on(window, 'touchend', onDragEnd)\n    on(window, 'contextmenu', onDragEnd)\n  }\n\n  const onLeftKeyDown = () => {\n    if (disabled.value) return\n    initData.newPosition =\n      parseFloat(currentPosition.value) -\n      (step.value / (max.value - min.value)) * 100\n    setPosition(initData.newPosition)\n    emitChange()\n  }\n\n  const onRightKeyDown = () => {\n    if (disabled.value) return\n    initData.newPosition =\n      parseFloat(currentPosition.value) +\n      (step.value / (max.value - min.value)) * 100\n    setPosition(initData.newPosition)\n    emitChange()\n  }\n\n  const getClientXY = (event: MouseEvent | TouchEvent) => {\n    let clientX: number\n    let clientY: number\n    if (event.type.startsWith('touch')) {\n      clientY = (event as TouchEvent).touches[0].clientY\n      clientX = (event as TouchEvent).touches[0].clientX\n    } else {\n      clientY = (event as MouseEvent).clientY\n      clientX = (event as MouseEvent).clientX\n    }\n    return {\n      clientX,\n      clientY,\n    }\n  }\n\n  const onDragStart = (event: MouseEvent | TouchEvent) => {\n    initData.dragging = true\n    initData.isClick = true\n    const { clientX, clientY } = getClientXY(event)\n    if (props.vertical) {\n      initData.startY = clientY\n    } else {\n      initData.startX = clientX\n    }\n    initData.startPosition = parseFloat(currentPosition.value)\n    initData.newPosition = initData.startPosition\n  }\n\n  const onDragging = (event: MouseEvent | TouchEvent) => {\n    if (initData.dragging) {\n      initData.isClick = false\n      displayTooltip()\n      resetSize()\n      let diff: number\n      const { clientX, clientY } = getClientXY(event)\n      if (props.vertical) {\n        initData.currentY = clientY\n        diff = ((initData.startY - initData.currentY) / sliderSize.value) * 100\n      } else {\n        initData.currentX = clientX\n        diff = ((initData.currentX - initData.startX) / sliderSize.value) * 100\n      }\n      initData.newPosition = initData.startPosition + diff\n      setPosition(initData.newPosition)\n    }\n  }\n\n  const onDragEnd = () => {\n    if (initData.dragging) {\n      /*\n       * 防止在 mouseup 后立即触发 click，导致滑块有几率产生一小段位移\n       * 不使用 preventDefault 是因为 mouseup 和 click 没有注册在同一个 DOM 上\n       */\n      setTimeout(() => {\n        initData.dragging = false\n        if (!initData.hovering) {\n          hideTooltip()\n        }\n        if (!initData.isClick) {\n          setPosition(initData.newPosition)\n          emitChange()\n        }\n      }, 0)\n      off(window, 'mousemove', onDragging)\n      off(window, 'touchmove', onDragging)\n      off(window, 'mouseup', onDragEnd)\n      off(window, 'touchend', onDragEnd)\n      off(window, 'contextmenu', onDragEnd)\n    }\n  }\n\n  const setPosition = async (newPosition: number) => {\n    if (newPosition === null || isNaN(newPosition)) return\n    if (newPosition < 0) {\n      newPosition = 0\n    } else if (newPosition > 100) {\n      newPosition = 100\n    }\n    const lengthPerStep = 100 / ((max.value - min.value) / step.value)\n    const steps = Math.round(newPosition / lengthPerStep)\n    let value =\n      steps * lengthPerStep * (max.value - min.value) * 0.01 + min.value\n    value = parseFloat(value.toFixed(precision.value))\n    emit(UPDATE_MODEL_EVENT, value)\n\n    if (!initData.dragging && props.modelValue !== initData.oldValue) {\n      initData.oldValue = props.modelValue\n    }\n\n    await nextTick()\n    initData.dragging && displayTooltip()\n    tooltip.value.updatePopper()\n  }\n\n  watch(\n    () => initData.dragging,\n    (val) => {\n      updateDragging(val)\n    }\n  )\n\n  return {\n    tooltip,\n    tooltipVisible,\n    showTooltip,\n    wrapperStyle,\n    formatValue,\n    handleMouseEnter,\n    handleMouseLeave,\n    onButtonDown,\n    onLeftKeyDown,\n    onRightKeyDown,\n    setPosition,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}