{"ast":null,"code":"import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, mergeProps, Fragment, renderList, renderSlot, createVNode, normalizeClass, createBlock, createCommentVNode, normalizeProps } from 'vue';\nimport '../../../hooks/index.mjs';\nimport SkeletonItem from './skeleton-item2.mjs';\nimport { skeletonProps } from './skeleton.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useThrottleRender } from '../../../hooks/use-throttle-render/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwSkeleton\",\n  components: {\n    [SkeletonItem.name]: SkeletonItem\n  },\n  props: skeletonProps,\n  setup(props) {\n    const ns = useNamespace(\"skeleton\");\n    const innerLoading = computed(() => {\n      return props.loading;\n    });\n    const uiLoading = useThrottleRender(innerLoading, props.throttle);\n    return {\n      ns,\n      uiLoading\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_skeleton_item = resolveComponent(\"el-skeleton-item\");\n  return _ctx.uiLoading ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    class: [_ctx.ns.b(), _ctx.ns.is(\"animated\", _ctx.animated)]\n  }, _ctx.$attrs), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.count, i => {\n    return openBlock(), createElementBlock(Fragment, {\n      key: i\n    }, [_ctx.loading ? renderSlot(_ctx.$slots, \"template\", {\n      key: i\n    }, () => [createVNode(_component_el_skeleton_item, {\n      class: normalizeClass(_ctx.ns.is(\"first\")),\n      variant: \"p\"\n    }, null, 8, [\"class\"]), (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.rows, item => {\n      return openBlock(), createBlock(_component_el_skeleton_item, {\n        key: item,\n        class: normalizeClass([_ctx.ns.e(\"paragraph\"), _ctx.ns.is(\"last\", item === _ctx.rows && _ctx.rows > 1)]),\n        variant: \"p\"\n      }, null, 8, [\"class\"]);\n    }), 128))]) : createCommentVNode(\"v-if\", true)], 64);\n  }), 128))], 16)) : renderSlot(_ctx.$slots, \"default\", normalizeProps(mergeProps({\n    key: 1\n  }, _ctx.$attrs)));\n}\nvar Skeleton = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Skeleton as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","SkeletonItem","props","skeletonProps","setup","ns","useNamespace","innerLoading","computed","loading","uiLoading","useThrottleRender","throttle","key","class","_ctx","b","is","animated","$attrs","count","i","openBlock","createElementBlock","Fragment","renderSlot","$slots","createVNode","_component_el_skeleton_item","normalizeClass","variant","renderList","rows","item","createBlock","e","normalizeProps","mergeProps"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/skeleton/src/skeleton.vue"],"sourcesContent":["<template>\n  <template v-if=\"uiLoading\">\n    <div :class=\"[ns.b(), ns.is('animated', animated)]\" v-bind=\"$attrs\">\n      <template v-for=\"i in count\" :key=\"i\">\n        <slot v-if=\"loading\" :key=\"i\" name=\"template\">\n          <el-skeleton-item :class=\"ns.is('first')\" variant=\"p\" />\n          <el-skeleton-item\n            v-for=\"item in rows\"\n            :key=\"item\"\n            :class=\"[\n              ns.e('paragraph'),\n              ns.is('last', item === rows && rows > 1),\n            ]\"\n            variant=\"p\"\n          />\n        </slot>\n      </template>\n    </div>\n  </template>\n  <template v-else>\n    <slot v-bind=\"$attrs\"></slot>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useNamespace, useThrottleRender } from '@tw-element/hooks'\nimport SkeletonItem from './skeleton-item.vue'\nimport { skeletonProps } from './skeleton'\n\nexport default defineComponent({\n  name: 'TwSkeleton',\n  components: {\n    [SkeletonItem.name]: SkeletonItem,\n  },\n  props: skeletonProps,\n  setup(props) {\n    const ns = useNamespace('skeleton')\n    const innerLoading = computed(() => {\n      return props.loading\n    })\n\n    const uiLoading = useThrottleRender(innerLoading, props.throttle)\n\n    return {\n      ns,\n      uiLoading,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;AA8BA,MAAKA,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IAAA,CACTC,YAAA,CAAaF,IAAA,GAAOE;EAAA;EAEvBC,KAAA,EAAOC,aAAA;EACPC,MAAMF,KAAA,EAAO;IACX,MAAMG,EAAA,GAAKC,YAAA,CAAa;IACxB,MAAMC,YAAA,GAAeC,QAAA,CAAS,MAAM;MAClC,OAAON,KAAA,CAAMO,OAAA;IAAA;IAGf,MAAMC,SAAA,GAAYC,iBAAA,CAAkBJ,YAAA,EAAcL,KAAA,CAAMU,QAAA;IAExD,OAAO;MACLP,EAAA;MACAK;IAAA;EAAA;AAAA;;;;IA5CIG,GAAA,EAAK;IAAAC,KAAA,EAAiD,CAAAC,IAAA,CAAMV,EAAA,CAAAW,CAAA,IAAAD,IAAA,CAAAV,EAAA,CAAAY,EAAA,aAAAF,IAAA,CAAAG,QAAA;EAAA,GAAAH,IAAA,CAAAI,MAAA,K,+DAC5BJ,IAAA,CAAAK,KAAA,EAAAC,CAAA;WACtBC,SAAA,IAAOC,kBAAA,CAAAC,QAAA;MAAAX,GAAA,EAAAQ;IAAA,IAAAN,IAAA,CAAnBN,OAAA,GAAAgB,UAAA,CACEV,IAAA,CAAwDW,MAAA;MAAAb,GAAA,EAAAQ;IAAA,UAAAM,WAAA,CAAhCC,2BAAA,EAAO;MAAWd,KAAA,EAAOe,cAAA,CAAId,IAAA,CAAAV,EAAA,CAAAY,EAAA;MAAAa,OAAA;gBACrD,aAAAR,SAAA,QAAAC,kBAAA,CAQEC,QAAA,QAAAO,UAAA,CAAAhB,IAAA,CAAAiB,IAAA,EAAAC,IAAA;aANMX,SAAA,IAAIY,WAAA,CAAAN,2BAAA;QACTf,GAAA,EAAKoB,IAAA;QAAqBnB,KAAA,EAACe,cAAA,EAA6Bd,IAAA,CAAAV,EAAA,CAAG8B,CAAA,CAAE,cAAApB,IAAA,CAAAV,EAAA,CAAAY,EAAA,SAAAgB,IAAA,KAAAlB,IAAA,CAAAiB,IAAA,IAAAjB,IAAA,CAAAiB,IAAA,M;;;;cAWtE,OAAAP,UAAA,CAAAV,IAAA,CAAAW,MAAA,aAAAU,cAAA,CAAAC,UAAA;IAAAxB,GAAA;EAAA,GAAAE,IAAA,CAAAI,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}