{"ast":null,"code":"import { isVNode, createVNode, render } from 'vue';\nimport { isClient, isNumber } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { messageConfig } from '../../config-provider/src/config-provider.mjs';\nimport MessageConstructor from './message.mjs';\nimport { messageTypes } from './message2.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nconst instances = [];\nlet seed = 1;\nconst message = function (options = {}) {\n  if (!isClient) return {\n    close: () => void 0\n  };\n  if (isNumber(messageConfig.max) && instances.length >= messageConfig.max) {\n    return {\n      close: () => void 0\n    };\n  }\n  if (!isVNode(options) && typeof options === \"object\" && options.grouping && !isVNode(options.message) && instances.length) {\n    const tempVm = instances.find(item => {\n      var _a, _b, _c;\n      return `${(_b = (_a = item.vm.props) == null ? void 0 : _a.message) != null ? _b : \"\"}` === `${(_c = options.message) != null ? _c : \"\"}`;\n    });\n    if (tempVm) {\n      tempVm.vm.component.props.repeatNum += 1;\n      tempVm.vm.component.props.type = options == null ? void 0 : options.type;\n      return {\n        close: () => vm.component.proxy.visible = false\n      };\n    }\n  }\n  if (typeof options === \"string\" || isVNode(options)) {\n    options = {\n      message: options\n    };\n  }\n  let verticalOffset = options.offset || 20;\n  instances.forEach(({\n    vm: vm2\n  }) => {\n    var _a;\n    verticalOffset += (((_a = vm2.el) == null ? void 0 : _a.offsetHeight) || 0) + 16;\n  });\n  verticalOffset += 16;\n  const {\n    nextZIndex\n  } = useZIndex();\n  const id = `message_${seed++}`;\n  const userOnClose = options.onClose;\n  const props = {\n    zIndex: nextZIndex(),\n    offset: verticalOffset,\n    ...options,\n    id,\n    onClose: () => {\n      close(id, userOnClose);\n    }\n  };\n  let appendTo = document.body;\n  if (options.appendTo instanceof HTMLElement) {\n    appendTo = options.appendTo;\n  } else if (typeof options.appendTo === \"string\") {\n    appendTo = document.querySelector(options.appendTo);\n  }\n  if (!(appendTo instanceof HTMLElement)) {\n    debugWarn(\"TwMessage\", \"the appendTo option is not an HTMLElement. Falling back to document.body.\");\n    appendTo = document.body;\n  }\n  const container = document.createElement(\"div\");\n  container.className = `container_${id}`;\n  const message2 = props.message;\n  const vm = createVNode(MessageConstructor, props, isVNode(props.message) ? {\n    default: () => message2\n  } : null);\n  vm.props.onDestroy = () => {\n    render(null, container);\n  };\n  render(vm, container);\n  instances.push({\n    vm\n  });\n  appendTo.appendChild(container.firstElementChild);\n  return {\n    close: () => vm.component.proxy.visible = false\n  };\n};\nmessageTypes.forEach(type => {\n  message[type] = (options = {}) => {\n    if (typeof options === \"string\" || isVNode(options)) {\n      options = {\n        message: options\n      };\n    }\n    return message({\n      ...options,\n      type\n    });\n  };\n});\nfunction close(id, userOnClose) {\n  const idx = instances.findIndex(({\n    vm: vm2\n  }) => id === vm2.component.props.id);\n  if (idx === -1) return;\n  const {\n    vm\n  } = instances[idx];\n  if (!vm) return;\n  userOnClose == null ? void 0 : userOnClose(vm);\n  const removedHeight = vm.el.offsetHeight;\n  instances.splice(idx, 1);\n  const len = instances.length;\n  if (len < 1) return;\n  for (let i = idx; i < len; i++) {\n    const pos = parseInt(instances[i].vm.el.style[\"top\"], 10) - removedHeight - 16;\n    instances[i].vm.component.props.offset = pos;\n  }\n}\nfunction closeAll() {\n  var _a;\n  for (let i = instances.length - 1; i >= 0; i--) {\n    const instance = instances[i].vm.component;\n    (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.close();\n  }\n}\nmessage.closeAll = closeAll;\nexport { close, closeAll, message as default };","map":{"version":3,"names":["instances","seed","message","options","isClient","close","isNumber","messageConfig","max","length","isVNode","grouping","tempVm","find","item","_a","_b","_c","vm","props","component","repeatNum","type","proxy","visible","verticalOffset","offset","forEach","vm2","el","offsetHeight","nextZIndex","useZIndex","id","userOnClose","onClose","zIndex","appendTo","document","body","HTMLElement","querySelector","debugWarn","container","createElement","className","message2","createVNode","MessageConstructor","default","onDestroy","render","push","appendChild","firstElementChild","messageTypes","idx","findIndex","removedHeight","splice","len","i","pos","parseInt","style","closeAll","instance"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/message/src/message-method.ts"],"sourcesContent":["import { createVNode, render } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { isVNode, isNumber, debugWarn } from '@tw-element/utils'\nimport { useZIndex } from '@tw-element/hooks'\nimport { messageConfig } from '@tw-element/components/config-provider/src/config-provider'\nimport MessageConstructor from './message.vue'\nimport { messageTypes } from './message'\n\nimport type { Message, MessageFn, MessageQueue, MessageProps } from './message'\nimport type { ComponentPublicInstance, VNode } from 'vue'\n\nconst instances: MessageQueue = []\nlet seed = 1\n\n// TODO: Since Notify.ts is basically the same like this file. So we could do some encapsulation against them to reduce code duplication.\n\nconst message: MessageFn & Partial<Message> = function (options = {}) {\n  if (!isClient) return { close: () => undefined }\n  if (isNumber(messageConfig.max) && instances.length >= messageConfig.max) {\n    return { close: () => undefined }\n  }\n\n  if (\n    !isVNode(options) &&\n    typeof options === 'object' &&\n    options.grouping &&\n    !isVNode(options.message) &&\n    instances.length\n  ) {\n    const tempVm: any = instances.find(\n      (item) =>\n        `${item.vm.props?.message ?? ''}` ===\n        `${(options as any).message ?? ''}`\n    )\n    if (tempVm) {\n      tempVm.vm.component!.props.repeatNum += 1\n      tempVm.vm.component!.props.type = options?.type\n      return {\n        close: () =>\n          ((\n            vm.component!.proxy as ComponentPublicInstance<{ visible: boolean }>\n          ).visible = false),\n      }\n    }\n  }\n\n  if (typeof options === 'string' || isVNode(options)) {\n    options = { message: options }\n  }\n\n  let verticalOffset = options.offset || 20\n  instances.forEach(({ vm }) => {\n    verticalOffset += (vm.el?.offsetHeight || 0) + 16\n  })\n  verticalOffset += 16\n\n  const { nextZIndex } = useZIndex()\n\n  const id = `message_${seed++}`\n  const userOnClose = options.onClose\n  const props: Partial<MessageProps> = {\n    zIndex: nextZIndex(),\n    offset: verticalOffset,\n    ...options,\n    id,\n    onClose: () => {\n      close(id, userOnClose)\n    },\n  }\n\n  let appendTo: HTMLElement | null = document.body\n  if (options.appendTo instanceof HTMLElement) {\n    appendTo = options.appendTo\n  } else if (typeof options.appendTo === 'string') {\n    appendTo = document.querySelector(options.appendTo)\n  }\n  // should fallback to default value with a warning\n  if (!(appendTo instanceof HTMLElement)) {\n    debugWarn(\n      'TwMessage',\n      'the appendTo option is not an HTMLElement. Falling back to document.body.'\n    )\n    appendTo = document.body\n  }\n\n  const container = document.createElement('div')\n\n  container.className = `container_${id}`\n\n  const message = props.message\n  const vm = createVNode(\n    MessageConstructor,\n    props,\n    isVNode(props.message) ? { default: () => message } : null\n  )\n\n  // clean message element preventing mem leak\n  vm.props!.onDestroy = () => {\n    render(null, container)\n    // since the element is destroy, then the VNode should be collected by GC as well\n    // we do not want cause any mem leak because we have returned vm as a reference to users\n    // so that we manually set it to false.\n  }\n\n  render(vm, container)\n  // instances will remove this item when close function gets called. So we do not need to worry about it.\n  instances.push({ vm })\n  appendTo.appendChild(container.firstElementChild!)\n\n  return {\n    // instead of calling the onClose function directly, setting this value so that we can have the full lifecycle\n    // for out component, so that all closing steps will not be skipped.\n    close: () =>\n      ((\n        vm.component!.proxy as ComponentPublicInstance<{ visible: boolean }>\n      ).visible = false),\n  }\n}\n\nmessageTypes.forEach((type) => {\n  message[type] = (options = {}) => {\n    if (typeof options === 'string' || isVNode(options)) {\n      options = {\n        message: options,\n      }\n    }\n    return message({\n      ...options,\n      type,\n    })\n  }\n})\n\nexport function close(id: string, userOnClose?: (vm: VNode) => void): void {\n  const idx = instances.findIndex(({ vm }) => id === vm.component!.props.id)\n  if (idx === -1) return\n\n  const { vm } = instances[idx]\n  if (!vm) return\n  userOnClose?.(vm)\n\n  const removedHeight = vm.el!.offsetHeight\n  instances.splice(idx, 1)\n\n  // adjust other instances vertical offset\n  const len = instances.length\n  if (len < 1) return\n  for (let i = idx; i < len; i++) {\n    const pos =\n      parseInt(instances[i].vm.el!.style['top'], 10) - removedHeight - 16\n\n    instances[i].vm.component!.props.offset = pos\n  }\n}\n\nexport function closeAll(): void {\n  for (let i = instances.length - 1; i >= 0; i--) {\n    const instance = instances[i].vm.component\n    ;(instance?.proxy as any)?.close()\n  }\n}\n\nmessage.closeAll = closeAll\n\nexport default message as Message\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}