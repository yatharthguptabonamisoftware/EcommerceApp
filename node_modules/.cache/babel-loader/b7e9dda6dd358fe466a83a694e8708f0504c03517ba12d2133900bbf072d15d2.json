{"ast":null,"code":"import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, renderSlot, createBlock, withCtx, createVNode, createCommentVNode, Transition } from 'vue';\nimport { TwIcon } from '../../icon/index.mjs';\nimport { Close } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { tagProps, tagEmits } from './tag2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwTag\",\n  components: {\n    TwIcon,\n    Close\n  },\n  props: tagProps,\n  emits: tagEmits,\n  setup(props, {\n    emit\n  }) {\n    const tagSize = useSize();\n    const ns = useNamespace(\"tag\");\n    const classes = computed(() => {\n      const {\n        type,\n        hit,\n        effect,\n        closable\n      } = props;\n      return [ns.b(), ns.is(\"closable\", closable), ns.m(type), ns.m(tagSize.value), ns.m(effect), ns.is(\"hit\", hit)];\n    });\n    const handleClose = event => {\n      event.stopPropagation();\n      emit(\"close\", event);\n    };\n    const handleClick = event => {\n      emit(\"click\", event);\n    };\n    return {\n      ns,\n      classes,\n      handleClose,\n      handleClick\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_close = resolveComponent(\"close\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  return !_ctx.disableTransitions ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass(_ctx.classes),\n    style: normalizeStyle({\n      backgroundColor: _ctx.color\n    }),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [createElementVNode(\"span\", {\n    class: normalizeClass(_ctx.ns.e(\"content\"))\n  }, [renderSlot(_ctx.$slots, \"default\")], 2), _ctx.closable ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"close\")),\n    onClick: _ctx.handleClose\n  }, {\n    default: withCtx(() => [createVNode(_component_close)]),\n    _: 1\n  }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 6)) : (openBlock(), createBlock(Transition, {\n    key: 1,\n    name: `${_ctx.ns.namespace.value}-zoom-in-center`\n  }, {\n    default: withCtx(() => [createElementVNode(\"span\", {\n      class: normalizeClass(_ctx.classes),\n      style: normalizeStyle({\n        backgroundColor: _ctx.color\n      }),\n      onClick: _cache[1] || (_cache[1] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n    }, [createElementVNode(\"span\", {\n      class: normalizeClass(_ctx.ns.e(\"content\"))\n    }, [renderSlot(_ctx.$slots, \"default\")], 2), _ctx.closable ? (openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      class: normalizeClass(_ctx.ns.e(\"close\")),\n      onClick: _ctx.handleClose\n    }, {\n      default: withCtx(() => [createVNode(_component_close)]),\n      _: 1\n    }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 6)]),\n    _: 3\n  }, 8, [\"name\"]));\n}\nvar Tag = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Tag as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","TwIcon","Close","props","tagProps","emits","tagEmits","setup","emit","tagSize","useSize","ns","useNamespace","classes","computed","type","hit","effect","closable","b","is","m","value","handleClose","event","stopPropagation","handleClick","key","class","normalizeClass","_ctx","style","normalizeStyle","backgroundColor","color","onClick","_cache","args","createElementVNode","e","renderSlot","$slots","openBlock","createBlock","_component_el_icon","withCtx","createVNode","_component_close","namespace"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/tag/src/tag.vue"],"sourcesContent":["<template>\n  <span\n    v-if=\"!disableTransitions\"\n    :class=\"classes\"\n    :style=\"{ backgroundColor: color }\"\n    @click=\"handleClick\"\n  >\n    <span :class=\"ns.e('content')\">\n      <slot></slot>\n    </span>\n    <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click=\"handleClose\">\n      <close />\n    </el-icon>\n  </span>\n  <transition v-else :name=\"`${ns.namespace.value}-zoom-in-center`\">\n    <span\n      :class=\"classes\"\n      :style=\"{ backgroundColor: color }\"\n      @click=\"handleClick\"\n    >\n      <span :class=\"ns.e('content')\">\n        <slot></slot>\n      </span>\n      <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click=\"handleClose\">\n        <close />\n      </el-icon>\n    </span>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport TwIcon from '@tw-element/components/icon'\nimport { Close } from '@element-plus/icons-vue'\n\nimport { useSize, useNamespace } from '@tw-element/hooks'\nimport { tagProps, tagEmits } from './tag'\n\nexport default defineComponent({\n  name: 'TwTag',\n\n  components: { TwIcon, Close },\n\n  props: tagProps,\n  emits: tagEmits,\n\n  setup(props, { emit }) {\n    const tagSize = useSize()\n    const ns = useNamespace('tag')\n    const classes = computed(() => {\n      const { type, hit, effect, closable } = props\n      return [\n        ns.b(),\n        ns.is('closable', closable),\n        ns.m(type),\n        ns.m(tagSize.value),\n        ns.m(effect),\n        ns.is('hit', hit),\n      ]\n    })\n\n    // methods\n    const handleClose = (event: MouseEvent) => {\n      event.stopPropagation()\n      emit('close', event)\n    }\n\n    const handleClick = (event: MouseEvent) => {\n      emit('click', event)\n    }\n\n    return {\n      ns,\n      classes,\n      handleClose,\n      handleClick,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}