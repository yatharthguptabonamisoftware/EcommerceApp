{"ast":null,"code":"const mutable = val => val;\nexport { mutable };","map":{"version":3,"names":["mutable","val"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/utils/typescript.ts"],"sourcesContent":["export const mutable = <T extends readonly any[] | Record<string, unknown>>(\n  val: T\n) => val as Mutable<typeof val>\nexport type Mutable<T> = { -readonly [P in keyof T]: T[P] }\n\nexport type HTMLElementCustomized<T> = HTMLElement & T\n\n/**\n * @deprecated stop to use null\n * @see {@link https://github.com/sindresorhus/meta/discussions/7}\n */\nexport type Nullable<T> = T | null\n"],"mappings":"AAAY,MAACA,OAAO,GAAIC,GAAG,IAAKA,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}