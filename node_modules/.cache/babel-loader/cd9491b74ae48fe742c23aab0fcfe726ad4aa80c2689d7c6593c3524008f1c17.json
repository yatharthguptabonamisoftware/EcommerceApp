{"ast":null,"code":"import { defineComponent, ref, computed, nextTick, onMounted, resolveComponent, resolveDirective, openBlock, createBlock, withCtx, createElementVNode, normalizeClass, normalizeStyle, createVNode, createElementBlock, Fragment, renderList, renderSlot, createTextVNode, toDisplayString, withDirectives, mergeProps, withKeys, withModifiers, createSlots } from 'vue';\nimport { NOOP, isArray } from '@vue/shared';\nimport { debounce } from 'lodash-unified';\nimport '../../../hooks/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { TwInput } from '../../input/index.mjs';\nimport { TwScrollbar } from '../../scrollbar/index.mjs';\nimport { TwTooltip } from '../../tooltip/index.mjs';\nimport '../../popper/index.mjs';\nimport { TwIcon } from '../../icon/index.mjs';\nimport { Loading } from '@element-plus/icons-vue';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useDeprecateAppendToBody } from '../../popper/src/deprecation.mjs';\nimport { useAttrs } from '../../../hooks/use-attrs/index.mjs';\nimport { generateId } from '../../../utils/rand.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nconst COMPONENT_NAME = \"TwAutocomplete\";\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElTooltip: TwTooltip,\n    TwInput,\n    TwScrollbar,\n    TwIcon,\n    Loading\n  },\n  directives: {\n    clickoutside: ClickOutside\n  },\n  inheritAttrs: false,\n  props: {\n    valueKey: {\n      type: String,\n      default: \"value\"\n    },\n    modelValue: {\n      type: [String, Number],\n      default: \"\"\n    },\n    debounce: {\n      type: Number,\n      default: 300\n    },\n    placement: {\n      type: String,\n      validator: val => {\n        return [\"top\", \"top-start\", \"top-end\", \"bottom\", \"bottom-start\", \"bottom-end\"].includes(val);\n      },\n      default: \"bottom-start\"\n    },\n    fetchSuggestions: {\n      type: Function,\n      default: NOOP\n    },\n    popperClass: {\n      type: String,\n      default: \"\"\n    },\n    triggerOnFocus: {\n      type: Boolean,\n      default: true\n    },\n    selectWhenUnmatched: {\n      type: Boolean,\n      default: false\n    },\n    hideLoading: {\n      type: Boolean,\n      default: false\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: void 0\n    },\n    teleported: useTooltipContentProps.teleported,\n    highlightFirstItem: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [UPDATE_MODEL_EVENT, \"input\", \"change\", \"focus\", \"blur\", \"clear\", \"select\"],\n  setup(props, ctx) {\n    const ns = useNamespace(\"autocomplete\");\n    const {\n      compatTeleported\n    } = useDeprecateAppendToBody(COMPONENT_NAME, \"popperAppendToBody\");\n    const attrs = useAttrs();\n    const suggestions = ref([]);\n    const highlightedIndex = ref(-1);\n    const dropdownWidth = ref(\"\");\n    const activated = ref(false);\n    const suggestionDisabled = ref(false);\n    const loading = ref(false);\n    const inputRef = ref(null);\n    const regionRef = ref(null);\n    const popper = ref(null);\n    const id = computed(() => {\n      return ns.b(String(generateId()));\n    });\n    const suggestionVisible = computed(() => {\n      const isValidData = isArray(suggestions.value) && suggestions.value.length > 0;\n      return (isValidData || loading.value) && activated.value;\n    });\n    const suggestionLoading = computed(() => {\n      return !props.hideLoading && loading.value;\n    });\n    const onSuggestionShow = () => {\n      nextTick(() => {\n        if (suggestionVisible.value) {\n          dropdownWidth.value = `${inputRef.value.$el.offsetWidth}px`;\n        }\n      });\n    };\n    onMounted(() => {\n      inputRef.value.inputOrTextarea.setAttribute(\"role\", \"textbox\");\n      inputRef.value.inputOrTextarea.setAttribute(\"aria-autocomplete\", \"list\");\n      inputRef.value.inputOrTextarea.setAttribute(\"aria-controls\", \"id\");\n      inputRef.value.inputOrTextarea.setAttribute(\"aria-activedescendant\", `${id.value}-item-${highlightedIndex.value}`);\n    });\n    const getData = queryString => {\n      if (suggestionDisabled.value) {\n        return;\n      }\n      loading.value = true;\n      props.fetchSuggestions(queryString, suggestionsArg => {\n        loading.value = false;\n        if (suggestionDisabled.value) {\n          return;\n        }\n        if (isArray(suggestionsArg)) {\n          suggestions.value = suggestionsArg;\n          highlightedIndex.value = props.highlightFirstItem ? 0 : -1;\n        } else {\n          throwError(\"TwAutocomplete\", \"autocomplete suggestions must be an array\");\n        }\n      });\n    };\n    const debouncedGetData = debounce(getData, props.debounce);\n    const handleInput = value => {\n      ctx.emit(\"input\", value);\n      ctx.emit(UPDATE_MODEL_EVENT, value);\n      suggestionDisabled.value = false;\n      if (!props.triggerOnFocus && !value) {\n        suggestionDisabled.value = true;\n        suggestions.value = [];\n        return;\n      }\n      debouncedGetData(value);\n    };\n    const handleChange = value => {\n      ctx.emit(\"change\", value);\n    };\n    const handleFocus = e => {\n      activated.value = true;\n      ctx.emit(\"focus\", e);\n      if (props.triggerOnFocus) {\n        debouncedGetData(String(props.modelValue));\n      }\n    };\n    const handleBlur = e => {\n      ctx.emit(\"blur\", e);\n    };\n    const handleClear = () => {\n      activated.value = false;\n      ctx.emit(UPDATE_MODEL_EVENT, \"\");\n      ctx.emit(\"clear\");\n    };\n    const handleKeyEnter = () => {\n      if (suggestionVisible.value && highlightedIndex.value >= 0 && highlightedIndex.value < suggestions.value.length) {\n        select(suggestions.value[highlightedIndex.value]);\n      } else if (props.selectWhenUnmatched) {\n        ctx.emit(\"select\", {\n          value: props.modelValue\n        });\n        nextTick(() => {\n          suggestions.value = [];\n          highlightedIndex.value = -1;\n        });\n      }\n    };\n    const close = () => {\n      activated.value = false;\n    };\n    const focus = () => {\n      var _a;\n      (_a = inputRef.value) == null ? void 0 : _a.focus();\n    };\n    const select = item => {\n      ctx.emit(\"input\", item[props.valueKey]);\n      ctx.emit(UPDATE_MODEL_EVENT, item[props.valueKey]);\n      ctx.emit(\"select\", item);\n      nextTick(() => {\n        suggestions.value = [];\n        highlightedIndex.value = -1;\n      });\n    };\n    const highlight = index => {\n      if (!suggestionVisible.value || loading.value) {\n        return;\n      }\n      if (index < 0) {\n        highlightedIndex.value = -1;\n        return;\n      }\n      if (index >= suggestions.value.length) {\n        index = suggestions.value.length - 1;\n      }\n      const suggestion = regionRef.value.querySelector(`.${ns.be(\"suggestion\", \"wrap\")}`);\n      const suggestionList = suggestion.querySelectorAll(`.${ns.be(\"suggestion\", \"list\")} li`);\n      const highlightItem = suggestionList[index];\n      const scrollTop = suggestion.scrollTop;\n      const {\n        offsetTop,\n        scrollHeight\n      } = highlightItem;\n      if (offsetTop + scrollHeight > scrollTop + suggestion.clientHeight) {\n        suggestion.scrollTop += scrollHeight;\n      }\n      if (offsetTop < scrollTop) {\n        suggestion.scrollTop -= scrollHeight;\n      }\n      highlightedIndex.value = index;\n      inputRef.value.inputOrTextarea.setAttribute(\"aria-activedescendant\", `${id.value}-item-${highlightedIndex.value}`);\n    };\n    return {\n      attrs,\n      suggestions,\n      highlightedIndex,\n      dropdownWidth,\n      activated,\n      suggestionDisabled,\n      loading,\n      inputRef,\n      regionRef,\n      popper,\n      id,\n      suggestionVisible,\n      suggestionLoading,\n      compatTeleported,\n      getData,\n      handleInput,\n      handleChange,\n      handleFocus,\n      handleBlur,\n      handleClear,\n      handleKeyEnter,\n      close,\n      focus,\n      select,\n      highlight,\n      onSuggestionShow,\n      ns\n    };\n  }\n});\nconst _hoisted_1 = [\"aria-expanded\", \"aria-owns\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"id\", \"aria-selected\", \"onClick\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = resolveComponent(\"el-input\");\n  const _component_loading = resolveComponent(\"loading\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  const _directive_clickoutside = resolveDirective(\"clickoutside\");\n  return openBlock(), createBlock(_component_el_tooltip, {\n    ref: \"popper\",\n    visible: _ctx.suggestionVisible,\n    \"onUpdate:visible\": _cache[2] || (_cache[2] = $event => _ctx.suggestionVisible = $event),\n    placement: _ctx.placement,\n    \"fallback-placements\": [\"bottom-start\", \"top-start\"],\n    \"popper-class\": `${_ctx.ns.e(\"popper\")} ${_ctx.popperClass}`,\n    teleported: _ctx.compatTeleported,\n    \"gpu-acceleration\": false,\n    pure: \"\",\n    \"manual-mode\": \"\",\n    effect: \"light\",\n    trigger: \"click\",\n    transition: `${_ctx.ns.namespace.value}-zoom-in-top`,\n    persistent: \"\",\n    onShow: _ctx.onSuggestionShow\n  }, {\n    content: withCtx(() => [createElementVNode(\"div\", {\n      ref: \"regionRef\",\n      class: normalizeClass([_ctx.ns.b(\"suggestion\"), _ctx.ns.is(\"loading\", _ctx.suggestionLoading)]),\n      style: normalizeStyle({\n        minWidth: _ctx.dropdownWidth,\n        outline: \"none\"\n      }),\n      role: \"region\"\n    }, [createVNode(_component_el_scrollbar, {\n      id: _ctx.id,\n      tag: \"ul\",\n      \"wrap-class\": _ctx.ns.be(\"suggestion\", \"wrap\"),\n      \"view-class\": _ctx.ns.be(\"suggestion\", \"list\"),\n      role: \"listbox\"\n    }, {\n      default: withCtx(() => [_ctx.suggestionLoading ? (openBlock(), createElementBlock(\"li\", _hoisted_2, [createVNode(_component_el_icon, {\n        class: \"is-loading\"\n      }, {\n        default: withCtx(() => [createVNode(_component_loading)]),\n        _: 1\n      })])) : (openBlock(true), createElementBlock(Fragment, {\n        key: 1\n      }, renderList(_ctx.suggestions, (item, index) => {\n        return openBlock(), createElementBlock(\"li\", {\n          id: `${_ctx.id}-item-${index}`,\n          key: index,\n          class: normalizeClass({\n            highlighted: _ctx.highlightedIndex === index\n          }),\n          role: \"option\",\n          \"aria-selected\": _ctx.highlightedIndex === index,\n          onClick: $event => _ctx.select(item)\n        }, [renderSlot(_ctx.$slots, \"default\", {\n          item\n        }, () => [createTextVNode(toDisplayString(item[_ctx.valueKey]), 1)])], 10, _hoisted_3);\n      }), 128))]),\n      _: 3\n    }, 8, [\"id\", \"wrap-class\", \"view-class\"])], 6)]),\n    default: withCtx(() => [withDirectives((openBlock(), createElementBlock(\"div\", {\n      class: normalizeClass([_ctx.ns.b(), _ctx.$attrs.class]),\n      style: normalizeStyle(_ctx.$attrs.style),\n      role: \"combobox\",\n      \"aria-haspopup\": \"listbox\",\n      \"aria-expanded\": _ctx.suggestionVisible,\n      \"aria-owns\": _ctx.id\n    }, [createVNode(_component_el_input, mergeProps({\n      ref: \"inputRef\"\n    }, _ctx.attrs, {\n      \"model-value\": _ctx.modelValue,\n      onInput: _ctx.handleInput,\n      onChange: _ctx.handleChange,\n      onFocus: _ctx.handleFocus,\n      onBlur: _ctx.handleBlur,\n      onClear: _ctx.handleClear,\n      onKeydown: [_cache[0] || (_cache[0] = withKeys(withModifiers($event => _ctx.highlight(_ctx.highlightedIndex - 1), [\"prevent\"]), [\"up\"])), _cache[1] || (_cache[1] = withKeys(withModifiers($event => _ctx.highlight(_ctx.highlightedIndex + 1), [\"prevent\"]), [\"down\"])), withKeys(_ctx.handleKeyEnter, [\"enter\"]), withKeys(_ctx.close, [\"tab\"])]\n    }), createSlots({\n      _: 2\n    }, [_ctx.$slots.prepend ? {\n      name: \"prepend\",\n      fn: withCtx(() => [renderSlot(_ctx.$slots, \"prepend\")])\n    } : void 0, _ctx.$slots.append ? {\n      name: \"append\",\n      fn: withCtx(() => [renderSlot(_ctx.$slots, \"append\")])\n    } : void 0, _ctx.$slots.prefix ? {\n      name: \"prefix\",\n      fn: withCtx(() => [renderSlot(_ctx.$slots, \"prefix\")])\n    } : void 0, _ctx.$slots.suffix ? {\n      name: \"suffix\",\n      fn: withCtx(() => [renderSlot(_ctx.$slots, \"suffix\")])\n    } : void 0]), 1040, [\"model-value\", \"onInput\", \"onChange\", \"onFocus\", \"onBlur\", \"onClear\", \"onKeydown\"])], 14, _hoisted_1)), [[_directive_clickoutside, _ctx.close]])]),\n    _: 3\n  }, 8, [\"visible\", \"placement\", \"popper-class\", \"teleported\", \"transition\", \"onShow\"]);\n}\nvar Autocomplete = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Autocomplete as default };","map":{"version":3,"names":["COMPONENT_NAME","_sfc_main","defineComponent","name","components","ElTooltip","TwTooltip","TwInput","TwScrollbar","TwIcon","Loading","directives","clickoutside","ClickOutside","inheritAttrs","props","valueKey","type","String","default","modelValue","Number","debounce","placement","validator","val","includes","fetchSuggestions","Function","NOOP","popperClass","triggerOnFocus","Boolean","selectWhenUnmatched","hideLoading","popperAppendToBody","teleported","useTooltipContentProps","highlightFirstItem","emits","UPDATE_MODEL_EVENT","setup","ctx","ns","useNamespace","compatTeleported","useDeprecateAppendToBody","attrs","useAttrs","suggestions","ref","highlightedIndex","dropdownWidth","activated","suggestionDisabled","loading","inputRef","regionRef","popper","id","computed","b","generateId","suggestionVisible","isValidData","isArray","value","length","suggestionLoading","onSuggestionShow","nextTick","$el","offsetWidth","onMounted","inputOrTextarea","setAttribute","getData","queryString","suggestionsArg","throwError","debouncedGetData","handleInput","emit","handleChange","handleFocus","e","handleBlur","handleClear","handleKeyEnter","select","close","focus","_a","item","highlight","index","suggestion","querySelector","be","suggestionList","querySelectorAll","highlightItem","scrollTop","offsetTop","scrollHeight","clientHeight","openBlock","createBlock","_component_el_tooltip","visible","_ctx","_cache","$event","pure","effect","trigger","transition","namespace","persistent","content","withCtx","createElementVNode","class","normalizeClass","is","style","normalizeStyle","minWidth","outline","createVNode","_component_el_scrollbar","tag","createElementBlock","_hoisted_2","_component_el_icon","Fragment","key","renderList","highlighted","role","renderSlot","$slots","withDirectives","$attrs","_component_el_input","mergeProps","onInput","onChange","onFocus","onBlur","onClear","withKeys","withModifiers","createSlots","_","fn","_hoisted_1"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/autocomplete/src/index.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"popper\"\n    v-model:visible=\"suggestionVisible\"\n    :placement=\"placement\"\n    :fallback-placements=\"['bottom-start', 'top-start']\"\n    :popper-class=\"`${ns.e('popper')} ${popperClass}`\"\n    :teleported=\"compatTeleported\"\n    :gpu-acceleration=\"false\"\n    pure\n    manual-mode\n    effect=\"light\"\n    trigger=\"click\"\n    :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n    persistent\n    @show=\"onSuggestionShow\"\n  >\n    <div\n      v-clickoutside=\"close\"\n      :class=\"[ns.b(), $attrs.class]\"\n      :style=\"$attrs.style\"\n      role=\"combobox\"\n      aria-haspopup=\"listbox\"\n      :aria-expanded=\"suggestionVisible\"\n      :aria-owns=\"id\"\n    >\n      <el-input\n        ref=\"inputRef\"\n        v-bind=\"attrs\"\n        :model-value=\"modelValue\"\n        @input=\"handleInput\"\n        @change=\"handleChange\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @clear=\"handleClear\"\n        @keydown.up.prevent=\"highlight(highlightedIndex - 1)\"\n        @keydown.down.prevent=\"highlight(highlightedIndex + 1)\"\n        @keydown.enter=\"handleKeyEnter\"\n        @keydown.tab=\"close\"\n      >\n        <template v-if=\"$slots.prepend\" #prepend>\n          <slot name=\"prepend\"></slot>\n        </template>\n        <template v-if=\"$slots.append\" #append>\n          <slot name=\"append\"></slot>\n        </template>\n        <template v-if=\"$slots.prefix\" #prefix>\n          <slot name=\"prefix\"></slot>\n        </template>\n        <template v-if=\"$slots.suffix\" #suffix>\n          <slot name=\"suffix\"></slot>\n        </template>\n      </el-input>\n    </div>\n    <template #content>\n      <div\n        ref=\"regionRef\"\n        :class=\"[ns.b('suggestion'), ns.is('loading', suggestionLoading)]\"\n        :style=\"{ minWidth: dropdownWidth, outline: 'none' }\"\n        role=\"region\"\n      >\n        <el-scrollbar\n          :id=\"id\"\n          tag=\"ul\"\n          :wrap-class=\"ns.be('suggestion', 'wrap')\"\n          :view-class=\"ns.be('suggestion', 'list')\"\n          role=\"listbox\"\n        >\n          <li v-if=\"suggestionLoading\">\n            <el-icon class=\"is-loading\"><loading /></el-icon>\n          </li>\n          <template v-else>\n            <li\n              v-for=\"(item, index) in suggestions\"\n              :id=\"`${id}-item-${index}`\"\n              :key=\"index\"\n              :class=\"{ highlighted: highlightedIndex === index }\"\n              role=\"option\"\n              :aria-selected=\"highlightedIndex === index\"\n              @click=\"select(item)\"\n            >\n              <slot :item=\"item\">{{ item[valueKey] }}</slot>\n            </li>\n          </template>\n        </el-scrollbar>\n      </div>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted, nextTick } from 'vue'\nimport { NOOP } from '@vue/shared'\nimport { debounce } from 'lodash-unified'\nimport { useAttrs, useNamespace } from '@tw-element/hooks'\nimport { ClickOutside } from '@tw-element/directives'\nimport { generateId, isArray, throwError } from '@tw-element/utils'\nimport { UPDATE_MODEL_EVENT } from '@tw-element/constants'\nimport TwInput from '@tw-element/components/input'\nimport TwScrollbar from '@tw-element/components/scrollbar'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@tw-element/components/tooltip'\nimport { useDeprecateAppendToBody } from '@tw-element/components/popper'\nimport TwIcon from '@tw-element/components/icon'\nimport { Loading } from '@element-plus/icons-vue'\n\nimport type { Placement } from '@tw-element/components/popper'\nimport type { PropType } from 'vue'\n\nconst COMPONENT_NAME = 'TwAutocomplete'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElTooltip,\n    TwInput,\n    TwScrollbar,\n    TwIcon,\n    Loading,\n  },\n  directives: {\n    clickoutside: ClickOutside,\n  },\n  inheritAttrs: false,\n  props: {\n    valueKey: {\n      type: String,\n      default: 'value',\n    },\n    modelValue: {\n      type: [String, Number],\n      default: '',\n    },\n    debounce: {\n      type: Number,\n      default: 300,\n    },\n    placement: {\n      type: String as PropType<Placement>,\n      validator: (val: string): boolean => {\n        return [\n          'top',\n          'top-start',\n          'top-end',\n          'bottom',\n          'bottom-start',\n          'bottom-end',\n        ].includes(val)\n      },\n      default: 'bottom-start',\n    },\n    fetchSuggestions: {\n      type: Function as PropType<\n        (queryString: string, cb: (data: any[]) => void) => void\n      >,\n      default: NOOP,\n    },\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    triggerOnFocus: {\n      type: Boolean,\n      default: true,\n    },\n    selectWhenUnmatched: {\n      type: Boolean,\n      default: false,\n    },\n    hideLoading: {\n      type: Boolean,\n      default: false,\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: undefined,\n    },\n    teleported: useTooltipContentProps.teleported,\n    highlightFirstItem: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\n    UPDATE_MODEL_EVENT,\n    'input',\n    'change',\n    'focus',\n    'blur',\n    'clear',\n    'select',\n  ],\n  setup(props, ctx) {\n    const ns = useNamespace('autocomplete')\n    const { compatTeleported } = useDeprecateAppendToBody(\n      COMPONENT_NAME,\n      'popperAppendToBody'\n    )\n    const attrs = useAttrs()\n    const suggestions = ref<any[]>([])\n    const highlightedIndex = ref(-1)\n    const dropdownWidth = ref('')\n    const activated = ref(false)\n    const suggestionDisabled = ref(false)\n    const loading = ref(false)\n    const inputRef = ref<{\n      inputOrTextarea: HTMLInputElement | HTMLTextAreaElement\n      focus: () => void\n      $el: HTMLElement\n    } | null>(null)\n    const regionRef = ref<HTMLElement | null>(null)\n    const popper = ref(null)\n\n    const id = computed(() => {\n      return ns.b(String(generateId()))\n    })\n    const suggestionVisible = computed(() => {\n      const isValidData =\n        isArray(suggestions.value) && suggestions.value.length > 0\n      return (isValidData || loading.value) && activated.value\n    })\n    const suggestionLoading = computed(() => {\n      return !props.hideLoading && loading.value\n    })\n\n    const onSuggestionShow = () => {\n      nextTick(() => {\n        if (suggestionVisible.value) {\n          dropdownWidth.value = `${inputRef.value!.$el.offsetWidth}px`\n        }\n      })\n    }\n\n    onMounted(() => {\n      inputRef.value!.inputOrTextarea.setAttribute('role', 'textbox')\n      inputRef.value!.inputOrTextarea.setAttribute('aria-autocomplete', 'list')\n      inputRef.value!.inputOrTextarea.setAttribute('aria-controls', 'id')\n      inputRef.value!.inputOrTextarea.setAttribute(\n        'aria-activedescendant',\n        `${id.value}-item-${highlightedIndex.value}`\n      )\n    })\n\n    const getData = (queryString: string) => {\n      if (suggestionDisabled.value) {\n        return\n      }\n      loading.value = true\n      props.fetchSuggestions(queryString, (suggestionsArg) => {\n        loading.value = false\n        if (suggestionDisabled.value) {\n          return\n        }\n        if (isArray(suggestionsArg)) {\n          suggestions.value = suggestionsArg\n          highlightedIndex.value = props.highlightFirstItem ? 0 : -1\n        } else {\n          throwError(\n            'TwAutocomplete',\n            'autocomplete suggestions must be an array'\n          )\n        }\n      })\n    }\n    const debouncedGetData = debounce(getData, props.debounce)\n    const handleInput = (value: string) => {\n      ctx.emit('input', value)\n      ctx.emit(UPDATE_MODEL_EVENT, value)\n      suggestionDisabled.value = false\n      if (!props.triggerOnFocus && !value) {\n        suggestionDisabled.value = true\n        suggestions.value = []\n        return\n      }\n      debouncedGetData(value)\n    }\n    const handleChange = (value) => {\n      ctx.emit('change', value)\n    }\n    const handleFocus = (e) => {\n      activated.value = true\n      ctx.emit('focus', e)\n      if (props.triggerOnFocus) {\n        debouncedGetData(String(props.modelValue))\n      }\n    }\n    const handleBlur = (e) => {\n      ctx.emit('blur', e)\n    }\n    const handleClear = () => {\n      activated.value = false\n      ctx.emit(UPDATE_MODEL_EVENT, '')\n      ctx.emit('clear')\n    }\n    const handleKeyEnter = () => {\n      if (\n        suggestionVisible.value &&\n        highlightedIndex.value >= 0 &&\n        highlightedIndex.value < suggestions.value.length\n      ) {\n        select(suggestions.value[highlightedIndex.value])\n      } else if (props.selectWhenUnmatched) {\n        ctx.emit('select', { value: props.modelValue })\n        nextTick(() => {\n          suggestions.value = []\n          highlightedIndex.value = -1\n        })\n      }\n    }\n    const close = () => {\n      activated.value = false\n    }\n    const focus = () => {\n      inputRef.value?.focus()\n    }\n    const select = (item) => {\n      ctx.emit('input', item[props.valueKey])\n      ctx.emit(UPDATE_MODEL_EVENT, item[props.valueKey])\n      ctx.emit('select', item)\n      nextTick(() => {\n        suggestions.value = []\n        highlightedIndex.value = -1\n      })\n    }\n    const highlight = (index: number) => {\n      if (!suggestionVisible.value || loading.value) {\n        return\n      }\n      if (index < 0) {\n        highlightedIndex.value = -1\n        return\n      }\n      if (index >= suggestions.value.length) {\n        index = suggestions.value.length - 1\n      }\n      const suggestion = regionRef.value!.querySelector(\n        `.${ns.be('suggestion', 'wrap')}`\n      )!\n      const suggestionList = suggestion.querySelectorAll(\n        `.${ns.be('suggestion', 'list')} li`\n      )!\n      const highlightItem = suggestionList[index]\n      const scrollTop = suggestion.scrollTop\n      const { offsetTop, scrollHeight } = highlightItem as HTMLElement\n\n      if (offsetTop + scrollHeight > scrollTop + suggestion.clientHeight) {\n        suggestion.scrollTop += scrollHeight\n      }\n      if (offsetTop < scrollTop) {\n        suggestion.scrollTop -= scrollHeight\n      }\n      highlightedIndex.value = index\n      inputRef.value!.inputOrTextarea.setAttribute(\n        'aria-activedescendant',\n        `${id.value}-item-${highlightedIndex.value}`\n      )\n    }\n\n    return {\n      attrs,\n      suggestions,\n      highlightedIndex,\n      dropdownWidth,\n      activated,\n      suggestionDisabled,\n      loading,\n      inputRef,\n      regionRef,\n      popper,\n\n      id,\n      suggestionVisible,\n      suggestionLoading,\n\n      // deprecation in 2.1.0\n      compatTeleported,\n\n      getData,\n      handleInput,\n      handleChange,\n      handleFocus,\n      handleBlur,\n      handleClear,\n      handleKeyEnter,\n      close,\n      focus,\n      select,\n      highlight,\n      onSuggestionShow,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}