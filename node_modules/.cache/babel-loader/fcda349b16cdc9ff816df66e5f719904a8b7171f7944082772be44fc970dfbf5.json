{"ast":null,"code":"import '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { Loading } from '@element-plus/icons-vue';\nimport { buildProps } from '../../../utils/vue/props.mjs';\nimport { useSizeProp } from '../../../hooks/use-common-props/index.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nconst buttonType = [\"default\", \"primary\", \"success\", \"warning\", \"info\", \"danger\", \"text\", \"\"];\nconst buttonNativeType = [\"button\", \"submit\", \"reset\"];\nconst buttonProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  type: {\n    type: String,\n    values: buttonType,\n    default: \"\"\n  },\n  icon: {\n    type: iconPropType,\n    default: \"\"\n  },\n  nativeType: {\n    type: String,\n    values: buttonNativeType,\n    default: \"button\"\n  },\n  loading: Boolean,\n  loadingIcon: {\n    type: iconPropType,\n    default: () => Loading\n  },\n  plain: Boolean,\n  autofocus: Boolean,\n  round: Boolean,\n  circle: Boolean,\n  color: String,\n  autoInsertSpace: {\n    type: Boolean,\n    default: void 0\n  }\n});\nconst buttonEmits = {\n  click: evt => evt instanceof MouseEvent\n};\nexport { buttonEmits, buttonNativeType, buttonProps, buttonType };","map":{"version":3,"names":["buttonType","buttonNativeType","buttonProps","buildProps","size","useSizeProp","disabled","Boolean","type","String","values","default","icon","iconPropType","nativeType","loading","loadingIcon","Loading","plain","autofocus","round","circle","color","autoInsertSpace","buttonEmits","click","evt","MouseEvent"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/button/src/button.ts"],"sourcesContent":["import { useSizeProp } from '@tw-element/hooks'\nimport { buildProps, iconPropType } from '@tw-element/utils'\nimport { Loading } from '@element-plus/icons-vue'\nimport type { ExtractPropTypes } from 'vue'\nimport type button from './button.vue'\n\nexport const buttonType = [\n  'default',\n  'primary',\n  'success',\n  'warning',\n  'info',\n  'danger',\n  'text',\n  '',\n] as const\nexport const buttonNativeType = ['button', 'submit', 'reset'] as const\n\nexport const buttonProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  type: {\n    type: String,\n    values: buttonType,\n    default: '',\n  },\n  icon: {\n    type: iconPropType,\n    default: '',\n  },\n  nativeType: {\n    type: String,\n    values: buttonNativeType,\n    default: 'button',\n  },\n  loading: Boolean,\n  loadingIcon: {\n    type: iconPropType,\n    default: () => Loading,\n  },\n  plain: Boolean,\n  autofocus: Boolean,\n  round: Boolean,\n  circle: Boolean,\n  color: String,\n  autoInsertSpace: {\n    type: Boolean,\n    default: undefined,\n  },\n} as const)\n\nexport interface ButtonConfigContext {\n  autoInsertSpace?: boolean\n}\n\nexport const buttonEmits = {\n  click: (evt: MouseEvent) => evt instanceof MouseEvent,\n}\n\nexport type ButtonProps = ExtractPropTypes<typeof buttonProps>\nexport type ButtonEmits = typeof buttonEmits\n\nexport type ButtonType = ButtonProps['type']\nexport type ButtonNativeType = ButtonProps['nativeType']\n\nexport type ButtonInstance = InstanceType<typeof button>\n"],"mappings":";;;;;;AAGY,MAACA,UAAU,GAAG,CACxB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,MAAM,EACN,QAAQ,EACR,MAAM,EACN,EAAE,CACJ;AACY,MAACC,gBAAgB,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO;AAChD,MAACC,WAAW,GAAGC,UAAU,CAAC;EACpCC,IAAI,EAAEC,WAAW;EACjBC,QAAQ,EAAEC,OAAO;EACjBC,IAAI,EAAE;IACJA,IAAI,EAAEC,MAAM;IACZC,MAAM,EAAEV,UAAU;IAClBW,OAAO,EAAE;EACb,CAAG;EACDC,IAAI,EAAE;IACJJ,IAAI,EAAEK,YAAY;IAClBF,OAAO,EAAE;EACb,CAAG;EACDG,UAAU,EAAE;IACVN,IAAI,EAAEC,MAAM;IACZC,MAAM,EAAET,gBAAgB;IACxBU,OAAO,EAAE;EACb,CAAG;EACDI,OAAO,EAAER,OAAO;EAChBS,WAAW,EAAE;IACXR,IAAI,EAAEK,YAAY;IAClBF,OAAO,EAAEA,CAAA,KAAMM;EACnB,CAAG;EACDC,KAAK,EAAEX,OAAO;EACdY,SAAS,EAAEZ,OAAO;EAClBa,KAAK,EAAEb,OAAO;EACdc,MAAM,EAAEd,OAAO;EACfe,KAAK,EAAEb,MAAM;EACbc,eAAe,EAAE;IACff,IAAI,EAAED,OAAO;IACbI,OAAO,EAAE,KAAK;EAClB;AACA,CAAC;AACW,MAACa,WAAW,GAAG;EACzBC,KAAK,EAAGC,GAAG,IAAKA,GAAG,YAAYC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}