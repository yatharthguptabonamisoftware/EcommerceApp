{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, computed, openBlock, createElementBlock, createElementVNode, normalizeStyle, Fragment, createTextVNode, toDisplayString, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport { menuItemGroupProps } from './menu-item-group.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nconst COMPONENT_NAME = \"TwMenuItemGroup\";\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  props: menuItemGroupProps,\n  setup() {\n    const instance = getCurrentInstance();\n    const menu = inject(\"rootMenu\");\n    if (!menu) throwError(COMPONENT_NAME, \"can not inject root menu\");\n    const levelPadding = computed(() => {\n      if (menu.props.collapse) return 20;\n      let padding = 20;\n      let parent = instance.parent;\n      while (parent && parent.type.name !== \"TwMenu\") {\n        if (parent.type.name === \"TwSubMenu\") {\n          padding += 20;\n        }\n        parent = parent.parent;\n      }\n      return padding;\n    });\n    return {\n      levelPadding\n    };\n  }\n});\nconst _hoisted_1 = {\n  class: \"el-menu-item-group\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"li\", _hoisted_1, [createElementVNode(\"div\", {\n    class: \"el-menu-item-group__title\",\n    style: normalizeStyle({\n      paddingLeft: `${_ctx.levelPadding}px`\n    })\n  }, [!_ctx.$slots.title ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [createTextVNode(toDisplayString(_ctx.title), 1)], 2112)) : renderSlot(_ctx.$slots, \"title\", {\n    key: 1\n  })], 4), createElementVNode(\"ul\", null, [renderSlot(_ctx.$slots, \"default\")])]);\n}\nvar MenuItemGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { MenuItemGroup as default };","map":{"version":3,"names":["COMPONENT_NAME","_sfc_main","defineComponent","name","props","menuItemGroupProps","setup","instance","getCurrentInstance","menu","inject","throwError","levelPadding","computed","collapse","padding","parent","type","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","_hoisted_1","createElementVNode","class","style","normalizeStyle","paddingLeft","_ctx","key","createTextVNode","toDisplayString","title","renderSlot","$slots"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/menu/src/menu-item-group.vue"],"sourcesContent":["<template>\n  <li class=\"el-menu-item-group\">\n    <div\n      class=\"el-menu-item-group__title\"\n      :style=\"{ paddingLeft: `${levelPadding}px` }\"\n    >\n      <template v-if=\"!$slots.title\">{{ title }}</template>\n      <slot v-else name=\"title\" />\n    </div>\n    <ul>\n      <slot />\n    </ul>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, getCurrentInstance, inject } from 'vue'\nimport { throwError } from '@tw-element/utils'\nimport { menuItemGroupProps } from './menu-item-group'\n\nimport type { MenuProvider } from './types'\n\nconst COMPONENT_NAME = 'TwMenuItemGroup'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  props: menuItemGroupProps,\n\n  setup() {\n    const instance = getCurrentInstance()!\n    const menu = inject<MenuProvider>('rootMenu')\n    if (!menu) throwError(COMPONENT_NAME, 'can not inject root menu')\n\n    const levelPadding = computed(() => {\n      if (menu.props.collapse) return 20\n      let padding = 20\n      let parent = instance.parent\n      while (parent && parent.type.name !== 'TwMenu') {\n        if (parent.type.name === 'TwSubMenu') {\n          padding += 20\n        }\n        parent = parent.parent\n      }\n      return padding\n    })\n\n    return {\n      levelPadding,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;AAsBA,MAAMA,cAAA,GAAiB;AAEvB,MAAKC,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAMH,cAAA;EAENI,KAAA,EAAOC,kBAAA;EAEPC,MAAA,EAAQ;IACN,MAAMC,QAAA,GAAWC,kBAAA;IACjB,MAAMC,IAAA,GAAOC,MAAA,CAAqB;IAClC,IAAI,CAACD,IAAA,EAAME,UAAA,CAAWX,cAAA,EAAgB;IAEtC,MAAMY,YAAA,GAAeC,QAAA,CAAS,MAAM;MAClC,IAAIJ,IAAA,CAAKL,KAAA,CAAMU,QAAA,EAAU,OAAO;MAChC,IAAIC,OAAA,GAAU;MACd,IAAIC,MAAA,GAAST,QAAA,CAASS,MAAA;MACtB,OAAOA,MAAA,IAAUA,MAAA,CAAOC,IAAA,CAAKd,IAAA,KAAS,UAAU;QAC9C,IAAIa,MAAA,CAAOC,IAAA,CAAKd,IAAA,KAAS,aAAa;UACpCY,OAAA,IAAW;QAAA;QAEbC,MAAA,GAASA,MAAA,CAAOA,MAAA;MAAA;MAElB,OAAOD,OAAA;IAAA;IAGT,OAAO;MACLH;IAAA;EAAA;AAAA;;;;2BA/CJM,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,QAAA,EAWK;SAVHC,SAAA,IAMMC,kBAAA,OAAAC,UAAA,GAAAC,kBAAA,CALE;IACLC,KAAA,EAAK;IAAAC,KAAA,EAAAC,cAAA;MAAAC,WAAA,KAAAC,IAAA,CAAAnB,YAAA;IAAA;sEAEiC;IAAAoB,GAAA;EAAA,IAAAC,eAAA,CAAAC,eAAA,CAAAH,IAAA,CAAAI,KAAA,M,EACvC,SAAAC,UAAA,CAAAL,IAAA,CAAAM,MAAA;IAAAL,GAAA;EAAA,G,EAEF,IAAAN,kBAAA,CACU,aAAAU,UAAA,CAAAL,IAAA,CAAAM,MAAA,a"},"metadata":{},"sourceType":"module","externalDependencies":[]}