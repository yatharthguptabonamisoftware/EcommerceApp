{"ast":null,"code":"import { defineComponent, ref, computed, resolveComponent, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, resolveDynamicComponent, createCommentVNode, createElementBlock, renderSlot, createTextVNode, toDisplayString, Fragment, createVNode, vShow } from 'vue';\nimport { TwIcon } from '../../icon/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { alertProps, alertEmits } from './alert.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { TypeComponents, TypeComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwAlert\",\n  components: {\n    TwIcon,\n    ...TypeComponents\n  },\n  props: alertProps,\n  emits: alertEmits,\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const ns = useNamespace(\"alert\");\n    const visible = ref(true);\n    const iconComponent = computed(() => TypeComponentsMap[props.type] || TypeComponentsMap[\"info\"]);\n    const isBigIcon = computed(() => props.description || slots.default ? ns.is(\"big\") : \"\");\n    const isBoldTitle = computed(() => props.description || slots.default ? ns.is(\"bold\") : \"\");\n    const close = evt => {\n      visible.value = false;\n      emit(\"close\", evt);\n    };\n    return {\n      ns,\n      visible,\n      iconComponent,\n      isBigIcon,\n      isBoldTitle,\n      close\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_close = resolveComponent(\"close\");\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.ns.b(\"fade\")\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"div\", {\n      class: normalizeClass([_ctx.ns.b(), _ctx.ns.m(_ctx.type), _ctx.ns.is(\"center\", _ctx.center), _ctx.ns.is(_ctx.effect)]),\n      role: \"alert\"\n    }, [_ctx.showIcon && _ctx.iconComponent ? (openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      class: normalizeClass([_ctx.ns.e(\"icon\"), _ctx.isBigIcon])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n      _: 1\n    }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.e(\"content\"))\n    }, [_ctx.title || _ctx.$slots.title ? (openBlock(), createElementBlock(\"span\", {\n      key: 0,\n      class: normalizeClass([_ctx.ns.e(\"title\"), _ctx.isBoldTitle])\n    }, [renderSlot(_ctx.$slots, \"title\", {}, () => [createTextVNode(toDisplayString(_ctx.title), 1)])], 2)) : createCommentVNode(\"v-if\", true), _ctx.$slots.default || _ctx.description ? (openBlock(), createElementBlock(\"p\", {\n      key: 1,\n      class: normalizeClass(_ctx.ns.e(\"description\"))\n    }, [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(_ctx.description), 1)])], 2)) : createCommentVNode(\"v-if\", true), _ctx.closable ? (openBlock(), createElementBlock(Fragment, {\n      key: 2\n    }, [_ctx.closeText ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: normalizeClass([_ctx.ns.e(\"close-btn\"), _ctx.ns.is(\"customed\")]),\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.close && _ctx.close(...args))\n    }, toDisplayString(_ctx.closeText), 3)) : (openBlock(), createBlock(_component_el_icon, {\n      key: 1,\n      class: normalizeClass(_ctx.ns.e(\"close-btn\")),\n      onClick: _ctx.close\n    }, {\n      default: withCtx(() => [createVNode(_component_close)]),\n      _: 1\n    }, 8, [\"class\", \"onClick\"]))], 2112)) : createCommentVNode(\"v-if\", true)], 2)], 2), [[vShow, _ctx.visible]])]),\n    _: 3\n  }, 8, [\"name\"]);\n}\nvar Alert = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Alert as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","TwIcon","TypeComponents","props","alertProps","emits","alertEmits","setup","emit","slots","ns","useNamespace","visible","ref","iconComponent","computed","TypeComponentsMap","type","isBigIcon","description","default","is","isBoldTitle","close","evt","value","openBlock","createBlock","Transition","_ctx","b","withDirectives","createElementVNode","class","normalizeClass","m","center","effect","role","showIcon","_component_el_icon","key","e","resolveDynamicComponent","createCommentVNode","title","$slots","createElementBlock","renderSlot","createTextVNode","toDisplayString","closable","Fragment","closeText","onClick","_cache","args","withCtx","createVNode","_component_close","vShow"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/alert/src/alert.vue"],"sourcesContent":["<template>\n  <transition :name=\"ns.b('fade')\">\n    <div\n      v-show=\"visible\"\n      :class=\"[ns.b(), ns.m(type), ns.is('center', center), ns.is(effect)]\"\n      role=\"alert\"\n    >\n      <el-icon\n        v-if=\"showIcon && iconComponent\"\n        :class=\"[ns.e('icon'), isBigIcon]\"\n      >\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <div :class=\"ns.e('content')\">\n        <span\n          v-if=\"title || $slots.title\"\n          :class=\"[ns.e('title'), isBoldTitle]\"\n        >\n          <slot name=\"title\">{{ title }}</slot>\n        </span>\n        <p v-if=\"$slots.default || description\" :class=\"ns.e('description')\">\n          <slot>\n            {{ description }}\n          </slot>\n        </p>\n        <template v-if=\"closable\">\n          <div\n            v-if=\"closeText\"\n            :class=\"[ns.e('close-btn'), ns.is('customed')]\"\n            @click=\"close\"\n          >\n            {{ closeText }}\n          </div>\n          <el-icon v-else :class=\"ns.e('close-btn')\" @click=\"close\">\n            <close />\n          </el-icon>\n        </template>\n      </div>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue'\nimport { TwIcon } from '@tw-element/components/icon'\nimport { TypeComponents, TypeComponentsMap } from '@tw-element/utils'\nimport { useNamespace } from '@tw-element/hooks'\nimport { alertProps, alertEmits } from './alert'\n\nexport default defineComponent({\n  name: 'TwAlert',\n\n  components: {\n    TwIcon,\n    ...TypeComponents,\n  },\n\n  props: alertProps,\n  emits: alertEmits,\n\n  setup(props, { emit, slots }) {\n    const ns = useNamespace('alert')\n\n    // state\n    const visible = ref(true)\n\n    // computed\n    const iconComponent = computed(\n      () => TypeComponentsMap[props.type] || TypeComponentsMap['info']\n    )\n    const isBigIcon = computed(() =>\n      props.description || slots.default ? ns.is('big') : ''\n    )\n    const isBoldTitle = computed(() =>\n      props.description || slots.default ? ns.is('bold') : ''\n    )\n\n    // methods\n    const close = (evt: MouseEvent) => {\n      visible.value = false\n      emit('close', evt)\n    }\n\n    return {\n      ns,\n      visible,\n      iconComponent,\n      isBigIcon,\n      isBoldTitle,\n      close,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}