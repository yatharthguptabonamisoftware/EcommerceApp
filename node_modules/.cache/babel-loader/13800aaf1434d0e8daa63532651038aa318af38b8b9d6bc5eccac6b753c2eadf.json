{"ast":null,"code":"import { Fragment, defineComponent, getCurrentInstance, ref, onUpdated, onMounted, watch, nextTick, provide, h, renderSlot } from 'vue';\nimport { isPromise, NOOP } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { TwIcon } from '../../icon/index.mjs';\nimport { Plus } from '@element-plus/icons-vue';\nimport '../../../tokens/index.mjs';\nimport TabNav from './tab-nav.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { UPDATE_MODEL_EVENT, INPUT_EVENT } from '../../../constants/event.mjs';\nimport { tabsRootContextKey } from '../../../tokens/tabs.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nconst tabsProps = buildProps({\n  type: {\n    type: String,\n    values: [\"card\", \"border-card\", \"\"],\n    default: \"\"\n  },\n  activeName: {\n    type: String,\n    default: \"\"\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number],\n    default: \"\"\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: [\"top\", \"right\", \"bottom\", \"left\"],\n    default: \"top\"\n  },\n  beforeLeave: {\n    type: definePropType(Function),\n    default: () => true\n  },\n  stretch: Boolean\n});\nconst tabsEmits = {\n  [UPDATE_MODEL_EVENT]: tabName => typeof tabName === \"string\" || typeof tabName === \"number\",\n  [INPUT_EVENT]: tabName => typeof tabName === \"string\" || typeof tabName === \"number\",\n  \"tab-click\": (pane, ev) => ev instanceof Event,\n  edit: (paneName, action) => action === \"remove\" || action === \"add\",\n  \"tab-remove\": paneName => typeof paneName === \"string\" || typeof paneName === \"number\",\n  \"tab-add\": () => true\n};\nconst getPaneInstanceFromSlot = (vnode, paneInstanceList = []) => {\n  const children = vnode.children || [];\n  Array.from(children).forEach(node => {\n    let type = node.type;\n    type = type.name || type;\n    if (type === \"TwTabPane\" && node.component) {\n      paneInstanceList.push(node.component);\n    } else if (type === Fragment || type === \"template\") {\n      getPaneInstanceFromSlot(node, paneInstanceList);\n    }\n  });\n  return paneInstanceList;\n};\nvar Tabs = defineComponent({\n  name: \"TwTabs\",\n  props: tabsProps,\n  emits: tabsEmits,\n  setup(props, {\n    emit,\n    slots,\n    expose\n  }) {\n    const instance = getCurrentInstance();\n    const nav$ = ref();\n    const panes = ref([]);\n    const currentName = ref(props.modelValue || props.activeName || \"0\");\n    const paneStatesMap = {};\n    const updatePaneInstances = (isForceUpdate = false) => {\n      if (slots.default) {\n        const children = instance.subTree.children;\n        const content = Array.from(children).find(({\n          props: props2\n        }) => (props2 == null ? void 0 : props2.class) === \"el-tabs__content\");\n        if (!content) return;\n        const paneInstanceList = getPaneInstanceFromSlot(content).map(paneComponent => paneStatesMap[paneComponent.uid]);\n        const panesChanged = !(paneInstanceList.length === panes.value.length && paneInstanceList.every((pane, index) => pane.uid === panes.value[index].uid));\n        if (isForceUpdate || panesChanged) {\n          panes.value = paneInstanceList;\n        }\n      } else if (panes.value.length !== 0) {\n        panes.value = [];\n      }\n    };\n    const changeCurrentName = value => {\n      currentName.value = value;\n      emit(INPUT_EVENT, value);\n      emit(UPDATE_MODEL_EVENT, value);\n    };\n    const setCurrentName = value => {\n      var _a;\n      if (currentName.value === value) return;\n      const canLeave = (_a = props.beforeLeave) == null ? void 0 : _a.call(props, value, currentName.value);\n      if (isPromise(canLeave)) {\n        canLeave.then(() => {\n          var _a2, _b;\n          changeCurrentName(value);\n          (_b = (_a2 = nav$.value) == null ? void 0 : _a2.removeFocus) == null ? void 0 : _b.call(_a2);\n        }, NOOP);\n      } else if (canLeave !== false) {\n        changeCurrentName(value);\n      }\n    };\n    const handleTabClick = (tab, tabName, event) => {\n      if (tab.props.disabled) return;\n      setCurrentName(tabName);\n      emit(\"tab-click\", tab, event);\n    };\n    const handleTabRemove = (pane, ev) => {\n      if (pane.props.disabled) return;\n      ev.stopPropagation();\n      emit(\"edit\", pane.props.name, \"remove\");\n      emit(\"tab-remove\", pane.props.name);\n    };\n    const handleTabAdd = () => {\n      emit(\"edit\", null, \"add\");\n      emit(\"tab-add\");\n    };\n    onUpdated(() => updatePaneInstances());\n    onMounted(() => updatePaneInstances());\n    watch(() => props.activeName, modelValue => setCurrentName(modelValue));\n    watch(() => props.modelValue, modelValue => setCurrentName(modelValue));\n    watch(currentName, async () => {\n      var _a, _b;\n      updatePaneInstances(true);\n      await nextTick();\n      await ((_a = nav$.value) == null ? void 0 : _a.$nextTick());\n      (_b = nav$.value) == null ? void 0 : _b.scrollToActiveTab();\n    });\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      updatePaneState: pane => paneStatesMap[pane.uid] = pane\n    });\n    expose({\n      currentName\n    });\n    return () => {\n      const newButton = props.editable || props.addable ? h(\"span\", {\n        class: \"el-tabs__new-tab\",\n        tabindex: \"0\",\n        onClick: handleTabAdd,\n        onKeydown: ev => {\n          if (ev.code === EVENT_CODE.enter) handleTabAdd();\n        }\n      }, [h(TwIcon, {\n        class: \"is-icon-plus\"\n      }, {\n        default: () => h(Plus)\n      })]) : null;\n      const header = h(\"div\", {\n        class: [\"el-tabs__header\", `is-${props.tabPosition}`]\n      }, [newButton, h(TabNav, {\n        currentName: currentName.value,\n        editable: props.editable,\n        type: props.type,\n        panes: panes.value,\n        stretch: props.stretch,\n        ref: nav$,\n        onTabClick: handleTabClick,\n        onTabRemove: handleTabRemove\n      })]);\n      const panels = h(\"div\", {\n        class: \"el-tabs__content\"\n      }, [renderSlot(slots, \"default\")]);\n      return h(\"div\", {\n        class: {\n          \"el-tabs\": true,\n          \"el-tabs--card\": props.type === \"card\",\n          [`el-tabs--${props.tabPosition}`]: true,\n          \"el-tabs--border-card\": props.type === \"border-card\"\n        }\n      }, props.tabPosition !== \"bottom\" ? [header, panels] : [panels, header]);\n    };\n  }\n});\nexport { Tabs as default, tabsEmits, tabsProps };","map":{"version":3,"names":["tabsProps","buildProps","type","String","values","default","activeName","closable","Boolean","addable","modelValue","Number","editable","tabPosition","beforeLeave","definePropType","Function","stretch","tabsEmits","UPDATE_MODEL_EVENT","tabName","INPUT_EVENT","tab-click","pane","ev","Event","edit","paneName","action","tab-add","getPaneInstanceFromSlot","vnode","paneInstanceList","children","Array","from","forEach","node","name","component","push","Fragment","Tabs","defineComponent","props","emits","setup","emit","slots","expose","instance","getCurrentInstance","nav$","ref","panes","currentName","paneStatesMap","updatePaneInstances","isForceUpdate","subTree","content","find","props2","class","map","paneComponent","uid","panesChanged","length","value","every","index","changeCurrentName","setCurrentName","_a","canLeave","call","isPromise","then","_a2","_b","removeFocus","NOOP","handleTabClick","tab","event","disabled","handleTabRemove","stopPropagation","handleTabAdd","onUpdated","onMounted","watch","nextTick","$nextTick","scrollToActiveTab","provide","tabsRootContextKey","updatePaneState","newButton","h","tabindex","onClick","onKeydown","code","EVENT_CODE","enter","TwIcon","Plus","header","TabNav","onTabClick","onTabRemove","panels","renderSlot"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/tabs/src/tabs.ts"],"sourcesContent":["import {\n  defineComponent,\n  Fragment,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onMounted,\n  onUpdated,\n  provide,\n  ref,\n  renderSlot,\n  watch,\n} from 'vue'\nimport { isPromise, NOOP } from '@vue/shared'\nimport { buildProps, definePropType } from '@tw-element/utils'\nimport {\n  EVENT_CODE,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@tw-element/constants'\nimport TwIcon from '@tw-element/components/icon'\nimport { Plus } from '@element-plus/icons-vue'\nimport { tabsRootContextKey } from '@tw-element/tokens'\nimport TabNav from './tab-nav'\nimport type { TabsPaneContext } from '@tw-element/tokens'\n\nimport type {\n  Component,\n  ComponentInternalInstance,\n  VNode,\n  ExtractPropTypes,\n  Ref,\n} from 'vue'\n\nexport const tabsProps = buildProps({\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  activeName: {\n    type: String,\n    default: '',\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number],\n    default: '',\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: ['top', 'right', 'bottom', 'left'],\n    default: 'top',\n  },\n  beforeLeave: {\n    type: definePropType<\n      (\n        newTabName: string | number,\n        oldTabName: string | number\n      ) => void | boolean | Promise<void | boolean>\n    >(Function),\n    default: () => true,\n  },\n  stretch: Boolean,\n} as const)\nexport type TabsProps = ExtractPropTypes<typeof tabsProps>\n\nexport const tabsEmits = {\n  [UPDATE_MODEL_EVENT]: (tabName: string | number) =>\n    typeof tabName === 'string' || typeof tabName === 'number',\n  [INPUT_EVENT]: (tabName: string | number) =>\n    typeof tabName === 'string' || typeof tabName === 'number',\n  'tab-click': (pane: TabsPaneContext, ev: Event) => ev instanceof Event,\n  edit: (paneName: string | number | null, action: 'remove' | 'add') =>\n    action === 'remove' || action === 'add',\n  'tab-remove': (paneName: string | number) =>\n    typeof paneName === 'string' || typeof paneName === 'number',\n  'tab-add': () => true,\n}\nexport type TabsEmits = typeof tabsEmits\n\nconst getPaneInstanceFromSlot = (\n  vnode: VNode,\n  paneInstanceList: ComponentInternalInstance[] = []\n) => {\n  const children = (vnode.children || []) as ArrayLike<VNode>\n  Array.from(children).forEach((node) => {\n    let type = node.type\n    type = (type as Component).name || type\n    if (type === 'TwTabPane' && node.component) {\n      paneInstanceList.push(node.component)\n    } else if (type === Fragment || type === 'template') {\n      getPaneInstanceFromSlot(node, paneInstanceList)\n    }\n  })\n  return paneInstanceList\n}\n\nexport default defineComponent({\n  name: 'TwTabs',\n\n  props: tabsProps,\n  emits: tabsEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const instance = getCurrentInstance()!\n    const nav$ = ref<InstanceType<typeof TabNav>>()\n\n    const panes: Ref<TabsPaneContext[]> = ref([])\n    const currentName = ref(props.modelValue || props.activeName || '0')\n\n    const paneStatesMap: Record<number, TabsPaneContext> = {}\n\n    const updatePaneInstances = (isForceUpdate = false) => {\n      if (slots.default) {\n        const children = instance.subTree.children as ArrayLike<VNode>\n        const content = Array.from(children).find(\n          ({ props }) => props?.class === 'el-tabs__content'\n        )\n        if (!content) return\n\n        const paneInstanceList: TabsPaneContext[] = getPaneInstanceFromSlot(\n          content\n        ).map((paneComponent) => paneStatesMap[paneComponent.uid])\n\n        const panesChanged = !(\n          paneInstanceList.length === panes.value.length &&\n          paneInstanceList.every(\n            (pane, index) => pane.uid === panes.value[index].uid\n          )\n        )\n\n        if (isForceUpdate || panesChanged) {\n          panes.value = paneInstanceList\n        }\n      } else if (panes.value.length !== 0) {\n        panes.value = []\n      }\n    }\n\n    const changeCurrentName = (value: string | number) => {\n      currentName.value = value\n      emit(INPUT_EVENT, value)\n      emit(UPDATE_MODEL_EVENT, value)\n    }\n\n    const setCurrentName = (value: string | number) => {\n      // should do nothing.\n      if (currentName.value === value) return\n\n      const canLeave = props.beforeLeave?.(value, currentName.value)\n      if (isPromise(canLeave)) {\n        canLeave.then(\n          () => {\n            changeCurrentName(value)\n\n            // call exposed function, Vue doesn't support expose in typescript yet.\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            nav$.value?.removeFocus?.()\n          },\n          // ignore promise rejection in `before-leave` hook\n          NOOP\n        )\n      } else if (canLeave !== false) {\n        changeCurrentName(value)\n      }\n    }\n\n    const handleTabClick = (\n      tab: TabsPaneContext,\n      tabName: string | number,\n      event: Event\n    ) => {\n      if (tab.props.disabled) return\n      setCurrentName(tabName)\n      emit('tab-click', tab, event)\n    }\n\n    const handleTabRemove = (pane: TabsPaneContext, ev: Event) => {\n      if (pane.props.disabled) return\n      ev.stopPropagation()\n      emit('edit', pane.props.name, 'remove')\n      emit('tab-remove', pane.props.name)\n    }\n\n    const handleTabAdd = () => {\n      emit('edit', null, 'add')\n      emit('tab-add')\n    }\n\n    onUpdated(() => updatePaneInstances())\n    onMounted(() => updatePaneInstances())\n\n    watch(\n      () => props.activeName,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(\n      () => props.modelValue,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(currentName, async () => {\n      updatePaneInstances(true)\n      await nextTick()\n      await nav$.value?.$nextTick()\n\n      // call exposed function, Vue doesn't support expose in typescript yet.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      nav$.value?.scrollToActiveTab()\n    })\n\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      updatePaneState: (pane) => (paneStatesMap[pane.uid] = pane),\n    })\n\n    expose({\n      currentName,\n    })\n\n    return () => {\n      const newButton =\n        props.editable || props.addable\n          ? h(\n              'span',\n              {\n                class: 'el-tabs__new-tab',\n                tabindex: '0',\n                onClick: handleTabAdd,\n                onKeydown: (ev: KeyboardEvent) => {\n                  if (ev.code === EVENT_CODE.enter) handleTabAdd()\n                },\n              },\n              [h(TwIcon, { class: 'is-icon-plus' }, { default: () => h(Plus) })]\n            )\n          : null\n\n      const header = h(\n        'div',\n        { class: ['el-tabs__header', `is-${props.tabPosition}`] },\n        [\n          newButton,\n          h(TabNav, {\n            currentName: currentName.value,\n            editable: props.editable,\n            type: props.type,\n            panes: panes.value,\n            stretch: props.stretch,\n            ref: nav$,\n            onTabClick: handleTabClick,\n            onTabRemove: handleTabRemove,\n          }),\n        ]\n      )\n\n      const panels = h('div', { class: 'el-tabs__content' }, [\n        renderSlot(slots, 'default'),\n      ])\n\n      return h(\n        'div',\n        {\n          class: {\n            'el-tabs': true,\n            'el-tabs--card': props.type === 'card',\n            [`el-tabs--${props.tabPosition}`]: true,\n            'el-tabs--border-card': props.type === 'border-card',\n          },\n        },\n        props.tabPosition !== 'bottom' ? [header, panels] : [panels, header]\n      )\n    }\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}