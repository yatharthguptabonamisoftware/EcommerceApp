{"ast":null,"code":"import { defineComponent, ref, inject, computed, unref, watch, resolveComponent, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, withDirectives, mergeProps, renderSlot, createTextVNode, toDisplayString, vShow, createCommentVNode } from 'vue';\nimport { onClickOutside } from '@vueuse/core';\nimport '../../popper/index.mjs';\nimport '../../visual-hidden/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { useTooltipContentProps } from './tooltip.mjs';\nimport { TOOLTIP_INJECTION_KEY } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport TwPopperContent from '../../popper/src/content.mjs';\nimport ElVisuallyHidden from '../../visual-hidden/src/visual-hidden.mjs';\nimport { useEscapeKeydown } from '../../../hooks/use-escape-keydown/index.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElTooltipContent\",\n  components: {\n    TwPopperContent,\n    ElVisuallyHidden\n  },\n  inheritAttrs: false,\n  props: useTooltipContentProps,\n  setup(props) {\n    const contentRef = ref(null);\n    const intermediateOpen = ref(false);\n    const entering = ref(false);\n    const leaving = ref(false);\n    const {\n      controlled,\n      id,\n      open,\n      trigger,\n      onClose,\n      onOpen,\n      onShow,\n      onHide\n    } = inject(TOOLTIP_INJECTION_KEY, void 0);\n    const persistentRef = computed(() => {\n      if (process.env.NODE_ENV === \"test\") {\n        return true;\n      }\n      return props.persistent;\n    });\n    const shouldRender = computed(() => {\n      return unref(persistentRef) ? true : unref(open);\n    });\n    const shouldShow = computed(() => {\n      return props.disabled ? false : unref(open);\n    });\n    const contentStyle = computed(() => {\n      var _a;\n      return (_a = props.style) != null ? _a : {};\n    });\n    const ariaHidden = computed(() => !unref(open));\n    useEscapeKeydown(onClose);\n    const onTransitionLeave = () => {\n      onHide();\n    };\n    const stopWhenControlled = () => {\n      if (unref(controlled)) return true;\n    };\n    const onContentEnter = composeEventHandlers(stopWhenControlled, () => {\n      if (props.enterable && unref(trigger) === \"hover\") {\n        onOpen();\n      }\n    });\n    const onContentLeave = composeEventHandlers(stopWhenControlled, () => {\n      if (unref(trigger) === \"hover\") {\n        onClose();\n      }\n    });\n    const onBeforeEnter = () => {\n      var _a, _b;\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n    };\n    const onAfterShow = () => {\n      onShow();\n    };\n    let stopHandle;\n    watch(() => unref(open), val => {\n      if (val) {\n        stopHandle = onClickOutside(computed(() => {\n          var _a;\n          return (_a = contentRef.value) == null ? void 0 : _a.popperContentRef;\n        }), () => {\n          if (unref(controlled)) return;\n          const $trigger = unref(trigger);\n          if ($trigger !== \"hover\") {\n            onClose();\n          }\n        });\n      } else {\n        stopHandle == null ? void 0 : stopHandle();\n      }\n    }, {\n      flush: \"post\"\n    });\n    return {\n      ariaHidden,\n      entering,\n      leaving,\n      id,\n      intermediateOpen,\n      contentStyle,\n      contentRef,\n      shouldRender,\n      shouldShow,\n      open,\n      onAfterShow,\n      onBeforeEnter,\n      onContentEnter,\n      onContentLeave,\n      onTransitionLeave\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_visually_hidden = resolveComponent(\"el-visually-hidden\");\n  const _component_el_popper_content = resolveComponent(\"el-popper-content\");\n  return openBlock(), createBlock(Teleport, {\n    disabled: !_ctx.teleported,\n    to: _ctx.appendTo\n  }, [createVNode(Transition, {\n    name: _ctx.transition,\n    onAfterLeave: _ctx.onTransitionLeave,\n    onBeforeEnter: _ctx.onBeforeEnter,\n    onAfterEnter: _ctx.onAfterShow\n  }, {\n    default: withCtx(() => [_ctx.shouldRender ? withDirectives((openBlock(), createBlock(_component_el_popper_content, mergeProps({\n      key: 0,\n      ref: \"contentRef\"\n    }, _ctx.$attrs, {\n      \"aria-hidden\": _ctx.ariaHidden,\n      \"boundaries-padding\": _ctx.boundariesPadding,\n      \"fallback-placements\": _ctx.fallbackPlacements,\n      \"gpu-acceleration\": _ctx.gpuAcceleration,\n      offset: _ctx.offset,\n      placement: _ctx.placement,\n      \"popper-options\": _ctx.popperOptions,\n      strategy: _ctx.strategy,\n      effect: _ctx.effect,\n      enterable: _ctx.enterable,\n      pure: _ctx.pure,\n      \"popper-class\": _ctx.popperClass,\n      \"popper-style\": [_ctx.popperStyle, _ctx.contentStyle],\n      \"reference-el\": _ctx.referenceEl,\n      \"z-index\": _ctx.zIndex,\n      onMouseenter: _ctx.onContentEnter,\n      onMouseleave: _ctx.onContentLeave\n    }), {\n      default: withCtx(() => [renderSlot(_ctx.$slots, \"default\"), createVNode(_component_el_visually_hidden, {\n        id: _ctx.id,\n        role: \"tooltip\"\n      }, {\n        default: withCtx(() => [createTextVNode(toDisplayString(_ctx.ariaLabel), 1)]),\n        _: 1\n      }, 8, [\"id\"])]),\n      _: 3\n    }, 16, [\"aria-hidden\", \"boundaries-padding\", \"fallback-placements\", \"gpu-acceleration\", \"offset\", \"placement\", \"popper-options\", \"strategy\", \"effect\", \"enterable\", \"pure\", \"popper-class\", \"popper-style\", \"reference-el\", \"z-index\", \"onMouseenter\", \"onMouseleave\"])), [[vShow, _ctx.shouldShow]]) : createCommentVNode(\"v-if\", true)]),\n    _: 3\n  }, 8, [\"name\", \"onAfterLeave\", \"onBeforeEnter\", \"onAfterEnter\"])], 8, [\"disabled\", \"to\"]);\n}\nvar ElTooltipContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { ElTooltipContent as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","TwPopperContent","ElVisuallyHidden","inheritAttrs","props","useTooltipContentProps","setup","contentRef","ref","intermediateOpen","entering","leaving","controlled","id","open","trigger","onClose","onOpen","onShow","onHide","inject","TOOLTIP_INJECTION_KEY","persistentRef","computed","process","env","NODE_ENV","persistent","shouldRender","unref","shouldShow","disabled","contentStyle","_a","style","ariaHidden","useEscapeKeydown","onTransitionLeave","stopWhenControlled","onContentEnter","composeEventHandlers","enterable","onContentLeave","onBeforeEnter","_b","value","updatePopper","call","onAfterShow","stopHandle","watch","val","onClickOutside","popperContentRef","$trigger","flush","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_el_popper_content","resolveComponent","openBlock","createBlock","Teleport","teleported","to","appendTo","onAfterLeave","onAfterEnter","default","withCtx","withDirectives","mergeProps","key","$attrs","boundariesPadding","fallbackPlacements","gpuAcceleration","offset","placement","popperOptions","strategy","effect","pure","popperClass","zIndex","onMouseenter","onMouseleave","_"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/tooltip/src/content.vue"],"sourcesContent":["<template>\n  <teleport :disabled=\"!teleported\" :to=\"appendTo\">\n    <transition\n      :name=\"transition\"\n      @after-leave=\"onTransitionLeave\"\n      @before-enter=\"onBeforeEnter\"\n      @after-enter=\"onAfterShow\"\n    >\n      <el-popper-content\n        v-if=\"shouldRender\"\n        v-show=\"shouldShow\"\n        ref=\"contentRef\"\n        v-bind=\"$attrs\"\n        :aria-hidden=\"ariaHidden\"\n        :boundaries-padding=\"boundariesPadding\"\n        :fallback-placements=\"fallbackPlacements\"\n        :gpu-acceleration=\"gpuAcceleration\"\n        :offset=\"offset\"\n        :placement=\"placement\"\n        :popper-options=\"popperOptions\"\n        :strategy=\"strategy\"\n        :effect=\"effect\"\n        :enterable=\"enterable\"\n        :pure=\"pure\"\n        :popper-class=\"popperClass\"\n        :popper-style=\"[popperStyle, contentStyle]\"\n        :reference-el=\"referenceEl\"\n        :z-index=\"zIndex\"\n        @mouseenter=\"onContentEnter\"\n        @mouseleave=\"onContentLeave\"\n      >\n        <slot />\n        <el-visually-hidden :id=\"id\" role=\"tooltip\">\n          {{ ariaLabel }}\n        </el-visually-hidden>\n      </el-popper-content>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref, unref, watch } from 'vue'\nimport { onClickOutside } from '@vueuse/core'\nimport { TwPopperContent } from '@tw-element/components/popper'\nimport { ElVisuallyHidden } from '@tw-element/components/visual-hidden'\nimport { composeEventHandlers } from '@tw-element/utils'\nimport { useEscapeKeydown } from '@tw-element/hooks'\n\nimport { useTooltipContentProps } from './tooltip'\nimport { TOOLTIP_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'ElTooltipContent',\n  components: {\n    TwPopperContent,\n    ElVisuallyHidden,\n  },\n  inheritAttrs: false,\n  props: useTooltipContentProps,\n  setup(props) {\n    const contentRef = ref<InstanceType<typeof TwPopperContent> | null>(null)\n    const intermediateOpen = ref(false)\n    const entering = ref(false)\n    const leaving = ref(false)\n    const { controlled, id, open, trigger, onClose, onOpen, onShow, onHide } =\n      inject(TOOLTIP_INJECTION_KEY, undefined)!\n    const persistentRef = computed(() => {\n      // For testing, we would always want the content to be rendered\n      // to the DOM, so we need to return true here.\n      if (process.env.NODE_ENV === 'test') {\n        return true\n      }\n      return props.persistent\n    })\n\n    const shouldRender = computed(() => {\n      return unref(persistentRef) ? true : unref(open)\n    })\n\n    const shouldShow = computed(() => {\n      return props.disabled ? false : unref(open)\n    })\n\n    const contentStyle = computed(() => (props.style ?? {}) as any)\n\n    const ariaHidden = computed(() => !unref(open))\n\n    useEscapeKeydown(onClose)\n\n    const onTransitionLeave = () => {\n      onHide()\n    }\n\n    const stopWhenControlled = () => {\n      if (unref(controlled)) return true\n    }\n\n    const onContentEnter = composeEventHandlers(stopWhenControlled, () => {\n      if (props.enterable && unref(trigger) === 'hover') {\n        onOpen()\n      }\n    })\n\n    const onContentLeave = composeEventHandlers(stopWhenControlled, () => {\n      if (unref(trigger) === 'hover') {\n        onClose()\n      }\n    })\n\n    const onBeforeEnter = () => {\n      contentRef.value?.updatePopper?.()\n    }\n\n    const onAfterShow = () => {\n      onShow()\n    }\n\n    let stopHandle: ReturnType<typeof onClickOutside>\n\n    watch(\n      () => unref(open),\n      (val) => {\n        if (val) {\n          stopHandle = onClickOutside(\n            computed(() => {\n              return contentRef.value?.popperContentRef\n            }),\n            () => {\n              if (unref(controlled)) return\n              const $trigger = unref(trigger)\n              if ($trigger !== 'hover') {\n                onClose()\n              }\n            }\n          )\n        } else {\n          stopHandle?.()\n        }\n      },\n      {\n        flush: 'post',\n      }\n    )\n\n    return {\n      ariaHidden,\n      entering,\n      leaving,\n      id,\n      intermediateOpen,\n      contentStyle,\n      contentRef,\n      shouldRender,\n      shouldShow,\n      open,\n      onAfterShow,\n      onBeforeEnter,\n      onContentEnter,\n      onContentLeave,\n      onTransitionLeave,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;AAmDA,MAAKA,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IACVC,eAAA;IACAC;EAAA;EAEFC,YAAA,EAAc;EACdC,KAAA,EAAOC,sBAAA;EACPC,MAAMF,KAAA,EAAO;IACX,MAAMG,UAAA,GAAaC,GAAA,CAAiD;IACpE,MAAMC,gBAAA,GAAmBD,GAAA,CAAI;IAC7B,MAAME,QAAA,GAAWF,GAAA,CAAI;IACrB,MAAMG,OAAA,GAAUH,GAAA,CAAI;IACpB,MAAM;MAAEI,UAAA;MAAYC,EAAA;MAAIC,IAAA;MAAMC,OAAA;MAASC,OAAA;MAASC,MAAA;MAAQC,MAAA;MAAQC;IAAA,IAC9DC,MAAA,CAAOC,qBAAA,EAAuB;IAChC,MAAMC,aAAA,GAAgBC,QAAA,CAAS,MAAM;MAGnC,IAAIC,OAAA,CAAQC,GAAA,CAAIC,QAAA,KAAa,QAAQ;QACnC,OAAO;MAAA;MAET,OAAOtB,KAAA,CAAMuB,UAAA;IAAA;IAGf,MAAMC,YAAA,GAAeL,QAAA,CAAS,MAAM;MAClC,OAAOM,KAAA,CAAMP,aAAA,IAAiB,OAAOO,KAAA,CAAMf,IAAA;IAAA;IAG7C,MAAMgB,UAAA,GAAaP,QAAA,CAAS,MAAM;MAChC,OAAOnB,KAAA,CAAM2B,QAAA,GAAW,QAAQF,KAAA,CAAMf,IAAA;IAAA;IAGxC,MAAMkB,YAAA,GAAeT,QAAA,CAAS,MAAO;MAErC,IAAMU,EAAA;MAEN,QAAAA,EAAA,GAAA7B,KAAA,CAAA8B,KAAA,YAAAD,EAAA;IAEA;IACE,MAAAE,UAAA,GAAAZ,QAAA,QAAAM,KAAA,CAAAf,IAAA;IAAAsB,gBAAA,CAAApB,OAAA;IAGF,MAAMqB,iBAAA,GAAAA,CAAA;MACJlB,MAAA;IAAuB;IAAO,MAAAmB,kBAAA,GAAAA,CAAA;MAGhC,IAAMT,KAAA,CAAAjB,UAAA,CAAiB,EACrB;IACE;IAAA,MAAA2B,cAAA,GAAAC,oBAAA,CAAAF,kBAAA;MAAA,IAAAlC,KAAA,CAAAqC,SAAA,IAAAZ,KAAA,CAAAd,OAAA;QAIJE,MAAA;MACE;IACE;IAAA,MAAAyB,cAAA,GAAAF,oBAAA,CAAAF,kBAAA;MAAA,IAAAT,KAAA,CAAAd,OAAA;QAIJC,OAAA;MACE;IAAkB;IAGpB,MAAM2B,aAAA,GAAAA,CAAA;MACJ,IAAAV,EAAA,EAAAW,EAAA;MAAA,CAAAA,EAAA,IAAAX,EAAA,GAAA1B,UAAA,CAAAsC,KAAA,qBAAAZ,EAAA,CAAAa,YAAA,qBAAAF,EAAA,CAAAG,IAAA,CAAAd,EAAA;IAGF;IAEA,MACEe,WAAA,GAAAA,CAAA,KACC;MACC9B,MAAA;IACE;IAEI,IAAA+B,UAAA;IAAyBC,KAAA,OAAArB,KAAA,CAAAf,IAAA,GAAAqC,GAAA;MAGzB,IAAAA,GAAA;QAAuBF,UAAA,GAAAG,cAAA,CAAA7B,QAAA;UACvB,IAAAU,EAAM;UACN,QAAAA,EAAA,GAAA1B,UAAA,CAAAsC,KAAA,qBAAAZ,EAAA,CAAAoB,gBAAA;QACE;UAAA,IAAAxB,KAAA,CAAAjB,UAAA;UAAA,MAAA0C,QAAA,GAAAzB,KAAA,CAAAd,OAAA;UAKN,IAAAuC,QAAA;YAAAtC,OAAA;UAAA;QAGJ;MACS;QAIXiC,UAAA,oBAAAA,UAAA;MAAO;IACL;MAEAM,KAAA;IAAA,EACA;IAAA;MAEApB,UAAA;MACAzB,QAAA;MACAC,OAAA;MACAE,EAAA;MACAJ,gBAAA;MACAuB,YAAA;MACAzB,UAAA;MACAqB,YAAA;MACAE,UAAA;MACAhB,IAAA;MAAAkC,WAAA;MAAAL,aAAA;MAAAJ,cAAA;;;;;;AA9JmC,SAAAiB,YAAAC,IAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,QAAA;;EACrC,MAAAC,4BAAA,GAAAC,gBAAA;EACmB,OAAAC,SAAA,IAAAC,WAAA,CAAAC,QAAA;IAChBpC,QAAA,GAAA0B,IAAA,CACYW,UAAA;IAAEC,EACd,EAAAZ,IAAA,CAAAa;EAAa,I;;IAGMC,YAAA,EAAAd,IAAA,CAAApB,iBAAA;;IAEdmC,YAAA,EAAAf,IAAA,CAAAT;EACI;IACIyB,OAAA,EAAAC,OAAA,OACO,CAAAjB,IAAA,CAAA7B,YAAA,GAAA+C,cAAA,EAAAV,SAAA,IAAAC,WAAA,CAAAH,4BAAA,EAAAa,UAAA;MAElBC,GAAA;MACArE,GAAA;IAAc,GAAAiD,IAAA,CAAAqB,MAAA;MAEd,eAAArB,IAAA,CAAAtB,UAAA;MACA,sBAAAsB,IAAA,CAAAsB,iBAAA;MACA,uBAAAtB,IAAA,CAAAuB,kBAAA;MACA,oBAAAvB,IAAA,CAAAwB,eAAA;MACAC,MAAA,EAAAzB,IAAA,CAAAyB,MAAA;MACAC,SAAA,EAAA1B,IAAA,CAAA0B,SAAA;MACA,gBAAY,EAAA1B,IAAA,CAAA2B,aAAA;MACZC,QAAA,EAAA5B,IAAA,CAAA4B,QAAA;MACAC,MAAA,EAAA7B,IAAA,CAAA6B,MAAA;MACA7C,SAAA,EAAAgB,IAAA,CAAYhB,SAAA;MACZ8C,IAAA,EAAA9B,IAAA,CAAA8B,IAAA;MAAY,gBAAA9B,IAAA,CAAA+B,WAAA;;;MAEL,WAAA/B,IAAA,CAAAgC,MAAA;MAGaC,YAAA,EAAAjC,IAAA,CAAAlB,cAAA;MAFMoD,YAAA,EAAAlC,IAAA,CAAAf;IAAO;;;;;oFAtB1B;QAAUkD,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}