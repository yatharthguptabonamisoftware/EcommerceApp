{"ast":null,"code":"import { defineComponent, ref, unref, computed, resolveComponent, openBlock, createBlock, mergeProps, withCtx, createElementVNode, normalizeClass, normalizeStyle, resolveDynamicComponent, createCommentVNode, createTextVNode, toDisplayString, createVNode, renderSlot } from 'vue';\nimport { TwButton } from '../../button/index.mjs';\nimport { TwIcon } from '../../icon/index.mjs';\nimport { TwTooltip } from '../../tooltip/index.mjs';\nimport '../../popper/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { popconfirmProps } from './popconfirm2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useDeprecateAppendToBody } from '../../popper/src/deprecation.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst COMPONENT_NAME = \"TwPopconfirm\";\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    TwButton,\n    ElTooltip: TwTooltip,\n    TwIcon\n  },\n  props: popconfirmProps,\n  setup(props) {\n    const {\n      compatTeleported\n    } = useDeprecateAppendToBody(COMPONENT_NAME, \"appendToBody\");\n    const {\n      t\n    } = useLocale();\n    const ns = useNamespace(\"popconfirm\");\n    const tooltipRef = ref();\n    const hidePopper = () => {\n      var _a, _b;\n      (_b = (_a = unref(tooltipRef)) == null ? void 0 : _a.onClose) == null ? void 0 : _b.call(_a);\n    };\n    const handleCallback = () => {\n      hidePopper();\n    };\n    const confirm = e => {\n      var _a;\n      (_a = props.onConfirm) == null ? void 0 : _a.call(props, e);\n      handleCallback();\n    };\n    const cancel = e => {\n      var _a;\n      (_a = props.onCancel) == null ? void 0 : _a.call(props, e);\n      handleCallback();\n    };\n    const finalConfirmButtonText = computed(() => props.confirmButtonText || t(\"el.popconfirm.confirmButtonText\"));\n    const finalCancTwButtonText = computed(() => props.cancTwButtonText || t(\"el.popconfirm.cancTwButtonText\"));\n    return {\n      finalConfirmButtonText,\n      finalCancTwButtonText,\n      tooltipRef,\n      ns,\n      compatTeleported,\n      confirm,\n      cancel\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_button = resolveComponent(\"el-button\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  return openBlock(), createBlock(_component_el_tooltip, mergeProps({\n    ref: \"tooltipRef\"\n  }, _ctx.$attrs, {\n    trigger: \"click\",\n    effect: \"light\",\n    \"popper-class\": `${_ctx.ns.namespace.value}-popover`,\n    teleported: _ctx.compatTeleported,\n    \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n    \"hide-after\": _ctx.hideAfter,\n    persistent: \"\"\n  }), {\n    content: withCtx(() => [createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.b())\n    }, [createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.e(\"main\"))\n    }, [!_ctx.hideIcon && _ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      class: normalizeClass(_ctx.ns.e(\"icon\")),\n      style: normalizeStyle({\n        color: _ctx.iconColor\n      })\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))]),\n      _: 1\n    }, 8, [\"class\", \"style\"])) : createCommentVNode(\"v-if\", true), createTextVNode(\" \" + toDisplayString(_ctx.title), 1)], 2), createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.e(\"action\"))\n    }, [createVNode(_component_el_button, {\n      size: \"small\",\n      type: _ctx.cancTwButtonType,\n      onClick: _ctx.cancel\n    }, {\n      default: withCtx(() => [createTextVNode(toDisplayString(_ctx.finalCancTwButtonText), 1)]),\n      _: 1\n    }, 8, [\"type\", \"onClick\"]), createVNode(_component_el_button, {\n      size: \"small\",\n      type: _ctx.confirmButtonType,\n      onClick: _ctx.confirm\n    }, {\n      default: withCtx(() => [createTextVNode(toDisplayString(_ctx.finalConfirmButtonText), 1)]),\n      _: 1\n    }, 8, [\"type\", \"onClick\"])], 2)], 2)]),\n    default: withCtx(() => [_ctx.$slots.reference ? renderSlot(_ctx.$slots, \"reference\", {\n      key: 0\n    }) : createCommentVNode(\"v-if\", true)]),\n    _: 3\n  }, 16, [\"popper-class\", \"teleported\", \"hide-after\"]);\n}\nvar Popconfirm = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Popconfirm as default };","map":{"version":3,"names":["COMPONENT_NAME","_sfc_main","defineComponent","name","components","TwButton","ElTooltip","TwTooltip","TwIcon","props","popconfirmProps","setup","compatTeleported","useDeprecateAppendToBody","t","useLocale","ns","useNamespace","tooltipRef","ref","hidePopper","_a","_b","unref","onClose","call","handleCallback","confirm","e","onConfirm","cancel","onCancel","finalConfirmButtonText","computed","confirmButtonText","finalCancTwButtonText","cancTwButtonText","_component_el_button","resolveComponent","_component_el_tooltip","openBlock","createBlock","mergeProps","_ctx","$attrs","trigger","effect","namespace","value","teleported","hideAfter","persistent","createElementVNode","class","normalizeClass","b","hideIcon","icon","_component_el_icon","style","normalizeStyle","color","iconColor","createCommentVNode","createTextVNode","toDisplayString","title","createVNode","_"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/popconfirm/src/popconfirm.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    v-bind=\"$attrs\"\n    trigger=\"click\"\n    effect=\"light\"\n    :popper-class=\"`${ns.namespace.value}-popover`\"\n    :teleported=\"compatTeleported\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :hide-after=\"hideAfter\"\n    persistent\n  >\n    <template #content>\n      <div :class=\"ns.b()\">\n        <div :class=\"ns.e('main')\">\n          <el-icon\n            v-if=\"!hideIcon && icon\"\n            :class=\"ns.e('icon')\"\n            :style=\"{ color: iconColor }\"\n          >\n            <component :is=\"icon\" />\n          </el-icon>\n          {{ title }}\n        </div>\n        <div :class=\"ns.e('action')\">\n          <el-button size=\"small\" :type=\"cancTwButtonType\" @click=\"cancel\">\n            {{ finalCancTwButtonText }}\n          </el-button>\n          <el-button size=\"small\" :type=\"confirmButtonType\" @click=\"confirm\">\n            {{ finalConfirmButtonText }}\n          </el-button>\n        </div>\n      </div>\n    </template>\n    <template v-if=\"$slots.reference\">\n      <slot name=\"reference\" />\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, unref } from 'vue'\nimport TwButton from '@tw-element/components/button'\nimport TwIcon from '@tw-element/components/icon'\nimport ElTooltip from '@tw-element/components/tooltip'\nimport { useDeprecateAppendToBody } from '@tw-element/components/popper'\nimport { useLocale, useNamespace } from '@tw-element/hooks'\nimport { popconfirmProps } from './popconfirm'\n\nconst COMPONENT_NAME = 'TwPopconfirm'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  components: {\n    TwButton,\n    ElTooltip,\n    TwIcon,\n  },\n\n  props: popconfirmProps,\n\n  setup(props) {\n    const { compatTeleported } = useDeprecateAppendToBody(\n      COMPONENT_NAME,\n      'appendToBody'\n    )\n    const { t } = useLocale()\n    const ns = useNamespace('popconfirm')\n    const tooltipRef = ref<{ onClose: () => void }>()\n\n    const hidePopper = () => {\n      unref(tooltipRef)?.onClose?.()\n    }\n\n    const handleCallback = () => {\n      hidePopper()\n    }\n\n    const confirm = (e: Event) => {\n      props.onConfirm?.(e)\n      handleCallback()\n    }\n    const cancel = (e: Event) => {\n      props.onCancel?.(e)\n      handleCallback()\n    }\n\n    const finalConfirmButtonText = computed(\n      () => props.confirmButtonText || t('el.popconfirm.confirmButtonText')\n    )\n    const finalCancTwButtonText = computed(\n      () => props.cancTwButtonText || t('el.popconfirm.cancTwButtonText')\n    )\n\n    return {\n      finalConfirmButtonText,\n      finalCancTwButtonText,\n      tooltipRef,\n      ns,\n\n      // Deprecation in 2.1.0\n      compatTeleported,\n\n      confirm,\n      cancel,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;AAiDA,MAAMA,cAAA,GAAiB;AACvB,MAAKC,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAMH,cAAA;EAENI,UAAA,EAAY;IACVC,QAAA;IAAAC,SAAA,EACAC,SAAA;IACAC;EAAA;EAGFC,KAAA,EAAOC,eAAA;EAEPC,MAAMF,KAAA,EAAO;IACX,MAAM;MAAEG;IAAA,IAAqBC,wBAAA,CAC3Bb,cAAA,EACA;IAEF,MAAM;MAAEc;IAAA,IAAMC,SAAA;IACd,MAAMC,EAAA,GAAKC,YAAA,CAAa;IACxB,MAAMC,UAAA,GAAaC,GAAA;IAEnB,MAAMC,UAAA,GAAaA,CAAA,KAAM;MACvB,IAAAC,EAAM,EAAAC,EAAA;MAAa,CAAAA,EAAA,IAAAD,EAAA,GAAAE,KAAA,CAAAL,UAAA,sBAAAG,EAAA,CAAAG,OAAA,qBAAAF,EAAA,CAAAG,IAAA,CAAAJ,EAAA;IAGrB;IACE,MAAAK,cAAA,GAAAA,CAAA;MAAAN,UAAA;IAGF;IACE,MAAAO,OAAA,GAAAC,CAAA;MACA,IAAAP,EAAA;MAAA,CAAAA,EAAA,GAAAZ,KAAA,CAAAoB,SAAA,qBAAAR,EAAA,CAAAI,IAAA,CAAAhB,KAAA,EAAAmB,CAAA;MAEFF,cAAgB;IACd;IACA,MAAAI,MAAA,GAAAF,CAAA;MAAA,IAAAP,EAAA;MAGF,CAAAA,EAAA,GAAAZ,KAAA,CAAAsB,QAAA,SAA+B,SAC7B,GAAAV,EAAA,CAAMI,IAAA,CAAAhB,KAAA,EAAAmB,CAAA;MAERF,cAAA;IAIA;IAAO,MAAAM,sBAAA,GAAAC,QAAA,OAAAxB,KAAA,CAAAyB,iBAAA,IAAApB,CAAA;IACL,MAAAqB,qBAAA,GAAAF,QAAA,OAAAxB,KAAA,CAAA2B,gBAAA,IAAAtB,CAAA;IACA;MAEAkB,sBAAA;MAGAG,qBAAA;MAEAjB,UAAA;MACAF,EAAA;MAAAJ,gBAAA;MAAAe,OAAA;MAAAG;;;;;;EApGa,MAAAO,oBAAA,GAAAC,gBAAA;EACR,MAAAC,qBAAA,GAAAD,gBAAA;EACN,OAAAE,SAAA,IAAAC,WAAA,CAAAF,qBAAA,EAAAG,UAAA;IAAAvB,GAAA;EAAA,GAAAwB,IAAA,CAAAC,MAAA;IAEAC,OAAA;IACAC,MAAA;IACD,cAAU,KAAAH,IAAA,CAAA3B,EAAA,CAAA+B,SAAA,CAAAC,KAAA;IAAAC,UAAA,EAAAN,IAAA,CAAA/B,gBAAA;;IAEC,cAAA+B,IAAA,CAAAO,SAAA;IAoBHC,UAAA;EAnBO;4BACXC,kBAAA;MAAaC,KAAA,EAAAC,cAAA,CAAAX,IAAA,CAAA3B,EAAA,CAAAuC,CAAA;2BACX;aAEQD,cAAA,CAAAX,IAAA,CAAA3B,EAAA,CAAAY,CAAA;IAAA,IACW,CAAAe,IAAA,CAAAa,QAAA,IAAAb,IAAA,CAAAc,IAAA,IAAAjB,SAAA,IAAAC,WAAA,CAAAiB,kBAAA;;;MAEjBC,KAAA,EAAAC,cAAA;QAAAC,KAAA,EAAAlB,IAAA,CAAAmB;MAAA;;6FAEF;;IAEF,yBAAa,IAAAC,kBAAA,gBAAAC,eAAA,OAAAC,eAAA,CAAAtB,IAAA,CAAAuB,KAAA,M,EACX,IAAAd,kBAAA;MAAuBC,KAAA,EAAAC,cAAA,CAAAX,IAAA,CAAA3B,EAAA,CAAAY,CAAA;IAAQ,IAA0BuC,WAAA,CAAA9B,oBAAA;;;;;8FAK7C;MAFa+B,CAAA;IAAM,aAA2B,eAAAD,WAAA,CAAA9B,oBAAA;;;;;;;mCAMhD,CAAgB,IAC9B,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}