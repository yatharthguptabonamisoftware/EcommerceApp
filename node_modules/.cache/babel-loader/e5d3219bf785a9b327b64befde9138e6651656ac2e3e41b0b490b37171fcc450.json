{"ast":null,"code":"import { defineComponent, ref, inject, watch, nextTick, onMounted, onUpdated, onBeforeUnmount, h, Fragment } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { twFormKey, twFormItemKey } from '../../../tokens/form.mjs';\nimport { addResizeListener, removeResizeListener } from '../../../utils/dom/resize-event.mjs';\nvar LabelWrap = defineComponent({\n  name: \"ElLabelWrap\",\n  props: {\n    isAutoWidth: Boolean,\n    updateAll: Boolean\n  },\n  setup(props, {\n    slots\n  }) {\n    const el = ref(null);\n    const TwForm = inject(twFormKey);\n    const TwFormItem = inject(twFormItemKey);\n    const computedWidth = ref(0);\n    watch(computedWidth, (val, oldVal) => {\n      if (props.updateAll) {\n        TwForm.registerLabelWidth(val, oldVal);\n        TwFormItem.updateComputedLabelWidth(val);\n      }\n    });\n    const getLabelWidth = () => {\n      var _a;\n      if ((_a = el.value) == null ? void 0 : _a.firstElementChild) {\n        const width = window.getComputedStyle(el.value.firstElementChild).width;\n        return Math.ceil(parseFloat(width));\n      } else {\n        return 0;\n      }\n    };\n    const updateLabelWidth = (action = \"update\") => {\n      nextTick(() => {\n        if (slots.default && props.isAutoWidth) {\n          if (action === \"update\") {\n            computedWidth.value = getLabelWidth();\n          } else if (action === \"remove\") {\n            TwForm.deregisterLabelWidth(computedWidth.value);\n          }\n        }\n      });\n    };\n    const updateLabelWidthFn = () => updateLabelWidth(\"update\");\n    onMounted(() => {\n      addResizeListener(el.value.firstElementChild, updateLabelWidthFn);\n      updateLabelWidthFn();\n    });\n    onUpdated(updateLabelWidthFn);\n    onBeforeUnmount(() => {\n      var _a;\n      updateLabelWidth(\"remove\");\n      removeResizeListener((_a = el.value) == null ? void 0 : _a.firstElementChild, updateLabelWidthFn);\n    });\n    function render() {\n      var _a, _b;\n      if (!slots) return null;\n      if (props.isAutoWidth) {\n        const autoLabelWidth = TwForm.autoLabelWidth;\n        const style = {};\n        if (autoLabelWidth && autoLabelWidth !== \"auto\") {\n          const marginWidth = Math.max(0, parseInt(autoLabelWidth, 10) - computedWidth.value);\n          const marginPosition = TwForm.labelPosition === \"left\" ? \"marginRight\" : \"marginLeft\";\n          if (marginWidth) {\n            style[marginPosition] = `${marginWidth}px`;\n          }\n        }\n        return h(\"div\", {\n          ref: el,\n          class: [\"el-form-item__label-wrap\"],\n          style\n        }, (_a = slots.default) == null ? void 0 : _a.call(slots));\n      } else {\n        return h(Fragment, {\n          ref: el\n        }, (_b = slots.default) == null ? void 0 : _b.call(slots));\n      }\n    }\n    return render;\n  }\n});\nexport { LabelWrap as default };","map":{"version":3,"names":["LabelWrap","defineComponent","name","props","isAutoWidth","Boolean","updateAll","setup","slots","el","ref","TwForm","inject","twFormKey","TwFormItem","twFormItemKey","computedWidth","watch","val","oldVal","registerLabelWidth","updateComputedLabelWidth","getLabelWidth","_a","value","firstElementChild","width","window","getComputedStyle","Math","ceil","parseFloat","updateLabelWidth","action","nextTick","default","deregisterLabelWidth","updateLabelWidthFn","onMounted","addResizeListener","onUpdated","onBeforeUnmount","removeResizeListener","render","_b","autoLabelWidth","style","marginWidth","max","parseInt","marginPosition","labelPosition","h","class","call","Fragment"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/form/src/label-wrap.ts"],"sourcesContent":["import {\n  defineComponent,\n  Fragment,\n  h,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  onUpdated,\n  ref,\n  watch,\n} from 'vue'\nimport { addResizeListener, removeResizeListener } from '@tw-element/utils'\nimport { twFormItemKey, twFormKey } from '@tw-element/tokens'\nimport type { ResizableElement, Nullable } from '@tw-element/utils'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElLabelWrap',\n  props: {\n    isAutoWidth: Boolean,\n    updateAll: Boolean,\n  },\n  setup(props, { slots }) {\n    const el = ref<Nullable<HTMLElement>>(null)\n    const TwForm = inject(twFormKey)\n    const TwFormItem = inject(twFormItemKey)\n\n    const computedWidth = ref(0)\n    watch(computedWidth, (val, oldVal) => {\n      if (props.updateAll) {\n        TwForm.registerLabelWidth(val, oldVal)\n        TwFormItem.updateComputedLabelWidth(val)\n      }\n    })\n\n    const getLabelWidth = () => {\n      if (el.value?.firstElementChild) {\n        const width = window.getComputedStyle(el.value.firstElementChild).width\n        return Math.ceil(parseFloat(width))\n      } else {\n        return 0\n      }\n    }\n    const updateLabelWidth = (action = 'update') => {\n      nextTick(() => {\n        if (slots.default && props.isAutoWidth) {\n          if (action === 'update') {\n            computedWidth.value = getLabelWidth()\n          } else if (action === 'remove') {\n            TwForm.deregisterLabelWidth(computedWidth.value)\n          }\n        }\n      })\n    }\n    const updateLabelWidthFn = () => updateLabelWidth('update')\n\n    onMounted(() => {\n      addResizeListener(\n        el.value.firstElementChild as ResizableElement,\n        updateLabelWidthFn\n      )\n      updateLabelWidthFn()\n    })\n\n    onUpdated(updateLabelWidthFn)\n\n    onBeforeUnmount(() => {\n      updateLabelWidth('remove')\n      removeResizeListener(\n        el.value?.firstElementChild as ResizableElement,\n        updateLabelWidthFn\n      )\n    })\n\n    function render() {\n      if (!slots) return null\n      if (props.isAutoWidth) {\n        const autoLabelWidth = TwForm.autoLabelWidth\n        const style = {} as CSSProperties\n        if (autoLabelWidth && autoLabelWidth !== 'auto') {\n          const marginWidth = Math.max(\n            0,\n            parseInt(autoLabelWidth, 10) - computedWidth.value\n          )\n          const marginPosition =\n            TwForm.labelPosition === 'left' ? 'marginRight' : 'marginLeft'\n          if (marginWidth) {\n            style[marginPosition] = `${marginWidth}px`\n          }\n        }\n        return h(\n          'div',\n          {\n            ref: el,\n            class: ['el-form-item__label-wrap'],\n            style,\n          },\n          slots.default?.()\n        )\n      } else {\n        return h(Fragment, { ref: el }, slots.default?.())\n      }\n    }\n\n    return render\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}