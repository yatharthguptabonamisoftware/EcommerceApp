{"ast":null,"code":"import { defineComponent, inject, ref, computed, h, withCtx, renderSlot, withKeys, withModifiers } from 'vue';\nimport { get } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport '../../virtual-list/index.mjs';\nimport '../../../hooks/index.mjs';\nimport GroupItem from './group-item.mjs';\nimport OptionItem from './option-item.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nimport { isObject } from '@vue/shared';\nimport FixedSizeList from '../../virtual-list/src/components/fixed-size-list.mjs';\nimport DynamicSizeList from '../../virtual-list/src/components/dynamic-size-list.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwSelectDropdown\",\n  props: {\n    data: Array,\n    hoveringIndex: Number,\n    width: Number\n  },\n  setup(props) {\n    const select = inject(selectV2InjectionKey);\n    const ns = useNamespace(\"select\");\n    const cachedHeights = ref([]);\n    const listRef = ref(null);\n    const isSized = computed(() => isUndefined(select.props.estimatedOptionHeight));\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight\n        };\n      }\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: idx => cachedHeights.value[idx]\n      };\n    });\n    const contains = (arr = [], target) => {\n      const {\n        props: {\n          valueKey\n        }\n      } = select;\n      if (!isObject(target)) {\n        return arr.includes(target);\n      }\n      return arr && arr.some(item => {\n        return get(item, valueKey) === get(target, valueKey);\n      });\n    };\n    const isEqual = (selected, target) => {\n      if (!isObject(target)) {\n        return selected === target;\n      } else {\n        const {\n          valueKey\n        } = select.props;\n        return get(selected, valueKey) === get(target, valueKey);\n      }\n    };\n    const isItemSelected = (modelValue, target) => {\n      if (select.props.multiple) {\n        return contains(modelValue, target.value);\n      }\n      return isEqual(modelValue, target.value);\n    };\n    const isItemDisabled = (modelValue, selected) => {\n      const {\n        disabled,\n        multiple,\n        multipleLimit\n      } = select.props;\n      return disabled || !selected && (multiple ? multipleLimit > 0 && modelValue.length >= multipleLimit : false);\n    };\n    const isItemHovering = target => props.hoveringIndex === target;\n    const scrollToItem = index => {\n      const list = listRef.value;\n      if (list) {\n        list.scrollToItem(index);\n      }\n    };\n    const resetScrollTop = () => {\n      const list = listRef.value;\n      if (list) {\n        list.resetScrollTop();\n      }\n    };\n    return {\n      ns,\n      select,\n      listProps,\n      listRef,\n      isSized,\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n      scrollToItem,\n      resetScrollTop\n    };\n  },\n  render(_ctx, _cache) {\n    var _a;\n    const {\n      $slots,\n      data,\n      listProps,\n      select,\n      isSized,\n      width,\n      ns,\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected\n    } = _ctx;\n    const Comp = isSized ? FixedSizeList : DynamicSizeList;\n    const {\n      props: selectProps,\n      onSelect,\n      onHover,\n      onKeyboardNavigate,\n      onKeyboardSelect\n    } = select;\n    const {\n      height,\n      modelValue,\n      multiple\n    } = selectProps;\n    if (data.length === 0) {\n      return h(\"div\", {\n        class: ns.b(\"dropdown\"),\n        style: {\n          width: `${width}px`\n        }\n      }, (_a = $slots.empty) == null ? void 0 : _a.call($slots));\n    }\n    const ListItem = withCtx(scoped => {\n      const {\n        index,\n        data: data2\n      } = scoped;\n      const item = data2[index];\n      if (data2[index].type === \"Group\") {\n        return h(GroupItem, {\n          item,\n          style: scoped.style,\n          height: isSized ? listProps.itemSize : listProps.estimatedSize\n        });\n      }\n      const selected = isItemSelected(modelValue, item);\n      const itemDisabled = isItemDisabled(modelValue, selected);\n      return h(OptionItem, {\n        ...scoped,\n        selected,\n        disabled: item.disabled || itemDisabled,\n        created: !!item.created,\n        hovering: isItemHovering(index),\n        item,\n        onSelect,\n        onHover\n      }, {\n        default: withCtx(props => {\n          return renderSlot($slots, \"default\", props, () => [h(\"span\", item.label)]);\n        })\n      });\n    });\n    const List = h(Comp, {\n      ref: \"listRef\",\n      className: ns.be(\"dropdown\", \"list\"),\n      data,\n      height,\n      width,\n      total: data.length,\n      scrollbarAlwaysOn: selectProps.scrollbarAlwaysOn,\n      onKeydown: [_cache[1] || (_cache[1] = withKeys(withModifiers(() => onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[2] || (_cache[2] = withKeys(withModifiers(() => onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[3] || (_cache[3] = withKeys(withModifiers(onKeyboardSelect, [\"stop\", \"prevent\"]), [\"enter\"])), _cache[4] || (_cache[4] = withKeys(withModifiers(() => select.expanded = false, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[5] || (_cache[5] = withKeys(() => select.expanded = false, [\"tab\"]))],\n      ...listProps\n    }, {\n      default: ListItem\n    });\n    return h(\"div\", {\n      class: [ns.b(\"dropdown\"), ns.is(\"multiple\", multiple)]\n    }, [List]);\n  }\n});\nexport { _sfc_main as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","data","Array","hoveringIndex","Number","width","setup","select","inject","selectV2InjectionKey","ns","useNamespace","cachedHeights","ref","listRef","isSized","computed","isUndefined","estimatedOptionHeight","listProps","value","itemSize","itemHeight","estimatedSize","idx","contains","arr","target","valueKey","isObject","includes","some","item","get","isEqual","selected","isItemSelected","modelValue","multiple","isItemDisabled","disabled","multipleLimit","length","isItemHovering","scrollToItem","index","list","resetScrollTop","render","_ctx","_cache","_a","$slots","Comp","FixedSizeList","DynamicSizeList","selectProps","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","height","h","class","b","style","empty","call","ListItem","withCtx","scoped","data2","type","GroupItem","itemDisabled","OptionItem","created","hovering","default","renderSlot","label","List","className","be","total","scrollbarAlwaysOn","onKeydown","withKeys","withModifiers","expanded","is"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/select-v2/src/select-dropdown.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  inject,\n  ref,\n  renderSlot,\n  h,\n  withCtx,\n  withKeys,\n  withModifiers,\n} from 'vue'\nimport { get } from 'lodash-unified'\nimport { isUndefined, isObject } from '@tw-element/utils'\nimport {\n  FixedSizeList,\n  DynamicSizeList,\n} from '@tw-element/components/virtual-list'\nimport { useNamespace } from '@tw-element/hooks'\nimport GroupItem from './group-item.vue'\nimport OptionItem from './option-item.vue'\n\nimport { selectV2InjectionKey } from './token'\n\nimport type { ItemProps } from '@tw-element/components/virtual-list'\nimport type { OptionItemProps, Option } from './select.types'\n\nexport default defineComponent({\n  name: 'TwSelectDropdown',\n\n  props: {\n    data: Array,\n    hoveringIndex: Number,\n    width: Number,\n  },\n  setup(props) {\n    const select = inject(selectV2InjectionKey) as any\n    const ns = useNamespace('select')\n    const cachedHeights = ref<Array<number>>([])\n\n    const listRef = ref(null)\n\n    const isSized = computed(() =>\n      isUndefined(select.props.estimatedOptionHeight)\n    )\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight,\n        }\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: (idx: number) => cachedHeights.value[idx],\n      }\n    })\n\n    const contains = (arr: Array<any> = [], target: any) => {\n      const {\n        props: { valueKey },\n      } = select\n\n      if (!isObject(target)) {\n        return arr.includes(target)\n      }\n\n      return (\n        arr &&\n        arr.some((item) => {\n          return get(item, valueKey) === get(target, valueKey)\n        })\n      )\n    }\n    const isEqual = (selected: unknown, target: unknown) => {\n      if (!isObject(target)) {\n        return selected === target\n      } else {\n        const { valueKey } = select.props\n        return get(selected, valueKey) === get(target, valueKey)\n      }\n    }\n\n    const isItemSelected = (modelValue: any[] | any, target: Option) => {\n      if (select.props.multiple) {\n        return contains(modelValue, target.value)\n      }\n      return isEqual(modelValue, target.value)\n    }\n\n    const isItemDisabled = (modelValue: any[] | any, selected: boolean) => {\n      const { disabled, multiple, multipleLimit } = select.props\n      return (\n        disabled ||\n        (!selected &&\n          (multiple\n            ? multipleLimit > 0 && modelValue.length >= multipleLimit\n            : false))\n      )\n    }\n\n    const isItemHovering = (target: number) => props.hoveringIndex === target\n\n    const scrollToItem = (index: number) => {\n      const list = listRef.value as any\n      if (list) {\n        list.scrollToItem(index)\n      }\n    }\n\n    const resetScrollTop = () => {\n      const list = listRef.value as any\n      if (list) {\n        list.resetScrollTop()\n      }\n    }\n\n    // computed\n    return {\n      ns,\n      select,\n      listProps,\n      listRef,\n      isSized,\n\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n\n      scrollToItem,\n      resetScrollTop,\n    }\n  },\n\n  render(_ctx, _cache) {\n    const {\n      $slots,\n\n      data,\n      listProps,\n      select,\n      isSized,\n      width,\n      ns,\n      // methods\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n    } = _ctx\n\n    const Comp = isSized ? FixedSizeList : DynamicSizeList\n\n    const {\n      props: selectProps,\n      onSelect,\n      onHover,\n      onKeyboardNavigate,\n      onKeyboardSelect,\n    } = select\n    const { height, modelValue, multiple } = selectProps\n\n    if (data.length === 0) {\n      return h(\n        'div',\n        {\n          class: ns.b('dropdown'),\n          style: {\n            width: `${width}px`,\n          },\n        },\n        $slots.empty?.()\n      )\n    }\n\n    const ListItem = withCtx((scoped: ItemProps<any>) => {\n      const { index, data } = scoped\n      const item = data[index]\n      // render group item which is not selectable.\n      if (data[index].type === 'Group') {\n        return h(GroupItem, {\n          item,\n          style: scoped.style,\n          height: isSized ? listProps.itemSize : listProps.estimatedSize,\n        })\n      }\n\n      const selected = isItemSelected(modelValue, item)\n      const itemDisabled = isItemDisabled(modelValue, selected)\n      // render option item which is selectable\n      return h(\n        OptionItem,\n        {\n          ...scoped,\n          selected,\n          disabled: item.disabled || itemDisabled,\n          created: !!item.created,\n          hovering: isItemHovering(index),\n          item,\n          onSelect,\n          onHover,\n        },\n        {\n          default: withCtx((props: OptionItemProps) => {\n            return renderSlot($slots, 'default', props, () => [\n              h('span', item.label),\n            ])\n          }),\n        }\n      )\n    })\n\n    const List = h(\n      Comp,\n      {\n        ref: 'listRef', // forwarded ref so that select can access the list directly\n        className: ns.be('dropdown', 'list'),\n        data,\n        height,\n        width,\n        total: data.length,\n        scrollbarAlwaysOn: selectProps.scrollbarAlwaysOn,\n        onKeydown: [\n          _cache[1] ||\n            (_cache[1] = withKeys(\n              withModifiers(\n                () => onKeyboardNavigate('forward'),\n                ['stop', 'prevent']\n              ),\n              ['down']\n            )),\n          _cache[2] ||\n            (_cache[2] = withKeys(\n              withModifiers(\n                () => onKeyboardNavigate('backward'),\n                ['stop', 'prevent']\n              ),\n              ['up']\n            )),\n          _cache[3] ||\n            (_cache[3] = withKeys(\n              withModifiers(onKeyboardSelect, ['stop', 'prevent']),\n              ['enter']\n            )),\n\n          _cache[4] ||\n            (_cache[4] = withKeys(\n              withModifiers(\n                () => (select.expanded = false),\n                ['stop', 'prevent']\n              ),\n              ['esc']\n            )),\n          _cache[5] ||\n            (_cache[5] = withKeys(() => (select.expanded = false), ['tab'])),\n          // _cache[6] || (_cache[6] = () => {\n          //   console.log(11)\n          // }),\n        ],\n        ...listProps,\n      },\n      {\n        default: ListItem,\n      }\n    )\n    return h(\n      'div',\n      {\n        class: [ns.b('dropdown'), ns.is('multiple', multiple)],\n      },\n      [List]\n    )\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}