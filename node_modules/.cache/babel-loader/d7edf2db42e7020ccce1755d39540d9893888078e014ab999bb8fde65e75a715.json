{"ast":null,"code":"import { ref, unref, provide, inject, onMounted, onBeforeUnmount } from 'vue';\nimport Collection from './collection2.mjs';\nimport CollectionItem from './collection-item.mjs';\nconst COLLECTION_ITEM_SIGN = `data-el-collection-item`;\nconst createCollectionWithScope = name => {\n  const COLLECTION_NAME = `El${name}Collection`;\n  const COLLECTION_ITEM_NAME = `${COLLECTION_NAME}Item`;\n  const COLLECTION_INJECTION_KEY = Symbol(COLLECTION_NAME);\n  const COLLECTION_ITEM_INJECTION_KEY = Symbol(COLLECTION_ITEM_NAME);\n  const TwCollection = {\n    ...Collection,\n    name: COLLECTION_NAME,\n    setup() {\n      const collectionRef = ref(null);\n      const itemMap = /* @__PURE__ */new Map();\n      const getItems = () => {\n        const collectionEl = unref(collectionRef);\n        if (!collectionEl) return [];\n        const orderedNodes = Array.from(collectionEl.querySelectorAll(`[${COLLECTION_ITEM_SIGN}]`));\n        const items = [...itemMap.values()];\n        const orderedItems = items.sort((a, b) => orderedNodes.indexOf(a.ref) - orderedNodes.indexOf(b.ref));\n        return orderedItems;\n      };\n      provide(COLLECTION_INJECTION_KEY, {\n        itemMap,\n        getItems,\n        collectionRef\n      });\n    }\n  };\n  const TwCollectionItem = {\n    ...CollectionItem,\n    name: COLLECTION_ITEM_NAME,\n    setup(_, {\n      attrs\n    }) {\n      const collectionItemRef = ref(null);\n      const collectionInjection = inject(COLLECTION_INJECTION_KEY, void 0);\n      provide(COLLECTION_ITEM_INJECTION_KEY, {\n        collectionItemRef\n      });\n      onMounted(() => {\n        const collectionItemEl = unref(collectionItemRef);\n        if (collectionItemEl) {\n          collectionInjection.itemMap.set(collectionItemEl, {\n            ref: collectionItemEl,\n            ...attrs\n          });\n        }\n      });\n      onBeforeUnmount(() => {\n        const collectionItemEl = unref(collectionItemRef);\n        collectionInjection.itemMap.delete(collectionItemEl);\n      });\n    }\n  };\n  return {\n    COLLECTION_INJECTION_KEY,\n    COLLECTION_ITEM_INJECTION_KEY,\n    TwCollection,\n    TwCollectionItem\n  };\n};\nexport { COLLECTION_ITEM_SIGN, createCollectionWithScope };","map":{"version":3,"names":["COLLECTION_ITEM_SIGN","createCollectionWithScope","name","COLLECTION_NAME","COLLECTION_ITEM_NAME","COLLECTION_INJECTION_KEY","Symbol","COLLECTION_ITEM_INJECTION_KEY","TwCollection","Collection","setup","collectionRef","ref","itemMap","Map","getItems","collectionEl","unref","orderedNodes","Array","from","querySelectorAll","items","values","orderedItems","sort","a","b","indexOf","provide","TwCollectionItem","CollectionItem","_","attrs","collectionItemRef","collectionInjection","inject","onMounted","collectionItemEl","set","onBeforeUnmount","delete"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/collection/src/collection.ts"],"sourcesContent":["import { ref, inject, onMounted, onBeforeUnmount, provide, unref } from 'vue'\nimport Collection from './collection.vue'\nimport CollectionItem from './collection-item.vue'\n\nimport type { InjectionKey } from 'vue'\nimport type {\n  TwCollectionInjectionContext,\n  TwCollectionItemInjectionContext,\n} from './tokens'\n\nexport const COLLECTION_ITEM_SIGN = `data-el-collection-item`\n\n// Make sure the first letter of name is capitalized\nexport const createCollectionWithScope = (name: string) => {\n  const COLLECTION_NAME = `El${name}Collection`\n  const COLLECTION_ITEM_NAME = `${COLLECTION_NAME}Item`\n  const COLLECTION_INJECTION_KEY: InjectionKey<TwCollectionInjectionContext> =\n    Symbol(COLLECTION_NAME)\n  const COLLECTION_ITEM_INJECTION_KEY: InjectionKey<TwCollectionItemInjectionContext> =\n    Symbol(COLLECTION_ITEM_NAME)\n\n  const TwCollection = {\n    ...Collection,\n    name: COLLECTION_NAME,\n    setup() {\n      const collectionRef = ref<HTMLElement | null>(null)\n      const itemMap: TwCollectionInjectionContext['itemMap'] = new Map()\n      const getItems = () => {\n        const collectionEl = unref(collectionRef)\n\n        if (!collectionEl) return []\n        const orderedNodes = Array.from(\n          collectionEl.querySelectorAll(`[${COLLECTION_ITEM_SIGN}]`)\n        )\n\n        const items = [...itemMap.values()]\n\n        const orderedItems = items.sort(\n          (a, b) => orderedNodes.indexOf(a.ref!) - orderedNodes.indexOf(b.ref!)\n        )\n        return orderedItems\n      }\n\n      provide(COLLECTION_INJECTION_KEY, {\n        itemMap,\n        getItems,\n        collectionRef,\n      })\n    },\n  }\n\n  const TwCollectionItem = {\n    ...CollectionItem,\n    name: COLLECTION_ITEM_NAME,\n    setup(_, { attrs }) {\n      const collectionItemRef = ref<HTMLElement | null>(null)\n      const collectionInjection = inject(COLLECTION_INJECTION_KEY, undefined)!\n\n      provide(COLLECTION_ITEM_INJECTION_KEY, {\n        collectionItemRef,\n      })\n\n      onMounted(() => {\n        const collectionItemEl = unref(collectionItemRef)\n        if (collectionItemEl) {\n          collectionInjection.itemMap.set(collectionItemEl, {\n            ref: collectionItemEl,\n            ...attrs,\n          })\n        }\n      })\n\n      onBeforeUnmount(() => {\n        const collectionItemEl = unref(collectionItemRef)!\n        collectionInjection.itemMap.delete(collectionItemEl)\n      })\n    },\n  }\n\n  return {\n    COLLECTION_INJECTION_KEY,\n    COLLECTION_ITEM_INJECTION_KEY,\n    TwCollection,\n    TwCollectionItem,\n  }\n}\n"],"mappings":";;;AAGY,MAACA,oBAAoB,GAAI,yBAAuB;AAChD,MAACC,yBAAyB,GAAIC,IAAI,IAAK;EACjD,MAAMC,eAAe,GAAI,KAAID,IAAK,YAAW;EAC7C,MAAME,oBAAoB,GAAI,GAAED,eAAgB,MAAK;EACrD,MAAME,wBAAwB,GAAGC,MAAM,CAACH,eAAe,CAAC;EACxD,MAAMI,6BAA6B,GAAGD,MAAM,CAACF,oBAAoB,CAAC;EAClE,MAAMI,YAAY,GAAG;IACnB,GAAGC,UAAU;IACbP,IAAI,EAAEC,eAAe;IACrBO,KAAKA,CAAA,EAAG;MACN,MAAMC,aAAa,GAAGC,GAAG,CAAC,IAAI,CAAC;MAC/B,MAAMC,OAAO,kBAAmB,IAAIC,GAAG,EAAE;MACzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;QACrB,MAAMC,YAAY,GAAGC,KAAK,CAACN,aAAa,CAAC;QACzC,IAAI,CAACK,YAAY,EACf,OAAO,EAAE;QACX,MAAME,YAAY,GAAGC,KAAK,CAACC,IAAI,CAACJ,YAAY,CAACK,gBAAgB,CAAE,IAAGrB,oBAAqB,GAAE,CAAC,CAAC;QAC3F,MAAMsB,KAAK,GAAG,CAAC,GAAGT,OAAO,CAACU,MAAM,EAAE,CAAC;QACnC,MAAMC,YAAY,GAAGF,KAAK,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKT,YAAY,CAACU,OAAO,CAACF,CAAC,CAACd,GAAG,CAAC,GAAGM,YAAY,CAACU,OAAO,CAACD,CAAC,CAACf,GAAG,CAAC,CAAC;QACpG,OAAOY,YAAY;MAC3B,CAAO;MACDK,OAAO,CAACxB,wBAAwB,EAAE;QAChCQ,OAAO;QACPE,QAAQ;QACRJ;MACR,CAAO,CAAC;IACR;EACA,CAAG;EACD,MAAMmB,gBAAgB,GAAG;IACvB,GAAGC,cAAc;IACjB7B,IAAI,EAAEE,oBAAoB;IAC1BM,KAAKA,CAACsB,CAAC,EAAE;MAAEC;IAAK,CAAE,EAAE;MAClB,MAAMC,iBAAiB,GAAGtB,GAAG,CAAC,IAAI,CAAC;MACnC,MAAMuB,mBAAmB,GAAGC,MAAM,CAAC/B,wBAAwB,EAAE,KAAK,CAAC,CAAC;MACpEwB,OAAO,CAACtB,6BAA6B,EAAE;QACrC2B;MACR,CAAO,CAAC;MACFG,SAAS,CAAC,MAAM;QACd,MAAMC,gBAAgB,GAAGrB,KAAK,CAACiB,iBAAiB,CAAC;QACjD,IAAII,gBAAgB,EAAE;UACpBH,mBAAmB,CAACtB,OAAO,CAAC0B,GAAG,CAACD,gBAAgB,EAAE;YAChD1B,GAAG,EAAE0B,gBAAgB;YACrB,GAAGL;UACf,CAAW,CAAC;QACZ;MACA,CAAO,CAAC;MACFO,eAAe,CAAC,MAAM;QACpB,MAAMF,gBAAgB,GAAGrB,KAAK,CAACiB,iBAAiB,CAAC;QACjDC,mBAAmB,CAACtB,OAAO,CAAC4B,MAAM,CAACH,gBAAgB,CAAC;MAC5D,CAAO,CAAC;IACR;EACA,CAAG;EACD,OAAO;IACLjC,wBAAwB;IACxBE,6BAA6B;IAC7BC,YAAY;IACZsB;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}