{"ast":null,"code":"import { ref, computed, defineComponent, watch, reactive, toRefs, provide, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport '../../../tokens/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { twFormKey } from '../../../tokens/form.mjs';\nfunction useFormLabelWidth() {\n  const potentialLabelWidthArr = ref([]);\n  const autoLabelWidth = computed(() => {\n    if (!potentialLabelWidthArr.value.length) return \"0\";\n    const max = Math.max(...potentialLabelWidthArr.value);\n    return max ? `${max}px` : \"\";\n  });\n  function getLabelWidthIndex(width) {\n    const index = potentialLabelWidthArr.value.indexOf(width);\n    if (index === -1) {\n      debugWarn(\"Form\", `unexpected width ${width}`);\n    }\n    return index;\n  }\n  function registerLabelWidth(val, oldVal) {\n    if (val && oldVal) {\n      const index = getLabelWidthIndex(oldVal);\n      potentialLabelWidthArr.value.splice(index, 1, val);\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val);\n    }\n  }\n  function deregisterLabelWidth(val) {\n    const index = getLabelWidthIndex(val);\n    index > -1 && potentialLabelWidthArr.value.splice(index, 1);\n  }\n  return {\n    autoLabelWidth,\n    registerLabelWidth,\n    deregisterLabelWidth\n  };\n}\nconst _sfc_main = defineComponent({\n  name: \"TwForm\",\n  props: {\n    model: Object,\n    rules: Object,\n    labelPosition: String,\n    labelWidth: {\n      type: [String, Number],\n      default: \"\"\n    },\n    labelSuffix: {\n      type: String,\n      default: \"\"\n    },\n    inline: Boolean,\n    inlineMessage: Boolean,\n    statusIcon: Boolean,\n    showMessage: {\n      type: Boolean,\n      default: true\n    },\n    size: String,\n    disabled: Boolean,\n    validateOnRuleChange: {\n      type: Boolean,\n      default: true\n    },\n    hideRequiredAsterisk: {\n      type: Boolean,\n      default: false\n    },\n    scrollToError: Boolean\n  },\n  emits: [\"validate\"],\n  setup(props, {\n    emit\n  }) {\n    const fields = [];\n    watch(() => props.rules, () => {\n      fields.forEach(field => {\n        field.evaluateValidationEnabled();\n      });\n      if (props.validateOnRuleChange) {\n        validate(() => ({}));\n      }\n    });\n    const formSize = useSize();\n    const prefix = \"el-form\";\n    const formKls = computed(() => {\n      const {\n        labelPosition,\n        inline\n      } = props;\n      return [prefix, `${prefix}--${formSize.value}`, labelPosition ? `${prefix}--label-${labelPosition}` : \"\", inline ? `${prefix}--inline` : \"\"];\n    });\n    const addField = field => {\n      if (field) {\n        fields.push(field);\n      }\n    };\n    const removeField = field => {\n      if (field.prop) {\n        fields.splice(fields.indexOf(field), 1);\n      }\n    };\n    const resetFields = () => {\n      if (!props.model) {\n        debugWarn(\"Form\", \"model is required for resetFields to work.\");\n        return;\n      }\n      fields.forEach(field => {\n        field.resetField();\n      });\n    };\n    const clearValidate = (props2 = []) => {\n      const fds = props2.length ? typeof props2 === \"string\" ? fields.filter(field => props2 === field.prop) : fields.filter(field => props2.indexOf(field.prop) > -1) : fields;\n      fds.forEach(field => {\n        field.clearValidate();\n      });\n    };\n    const validate = callback => {\n      if (!props.model) {\n        debugWarn(\"Form\", \"model is required for validate to work!\");\n        return;\n      }\n      let promise;\n      if (typeof callback !== \"function\") {\n        promise = new Promise((resolve, reject) => {\n          callback = function (valid2, invalidFields2) {\n            if (valid2) {\n              resolve(true);\n            } else {\n              reject(invalidFields2);\n            }\n          };\n        });\n      }\n      if (fields.length === 0) {\n        callback(true);\n      }\n      let valid = true;\n      let count = 0;\n      let invalidFields = {};\n      let firstInvalidFields;\n      for (const field of fields) {\n        field.validate(\"\", (message, field2) => {\n          if (message) {\n            valid = false;\n            firstInvalidFields || (firstInvalidFields = field2);\n          }\n          invalidFields = {\n            ...invalidFields,\n            ...field2\n          };\n          if (++count === fields.length) {\n            callback(valid, invalidFields);\n          }\n        });\n      }\n      if (!valid && props.scrollToError) {\n        scrollToField(Object.keys(firstInvalidFields)[0]);\n      }\n      return promise;\n    };\n    const validateField = (props2, cb) => {\n      props2 = [].concat(props2);\n      const fds = fields.filter(field => props2.indexOf(field.prop) !== -1);\n      if (!fields.length) {\n        debugWarn(\"Form\", \"please pass correct props!\");\n        return;\n      }\n      fds.forEach(field => {\n        field.validate(\"\", cb);\n      });\n    };\n    const scrollToField = prop => {\n      fields.forEach(item => {\n        var _a, _b;\n        if (item.prop === prop) {\n          (_b = (_a = item.$el).scrollIntoView) == null ? void 0 : _b.call(_a);\n        }\n      });\n    };\n    const TwForm = reactive({\n      ...toRefs(props),\n      resetFields,\n      clearValidate,\n      validateField,\n      emit,\n      addField,\n      removeField,\n      ...useFormLabelWidth()\n    });\n    provide(twFormKey, TwForm);\n    return {\n      formKls,\n      validate,\n      resetFields,\n      clearValidate,\n      validateField,\n      scrollToField\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"form\", {\n    class: normalizeClass(_ctx.formKls)\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\nvar Form = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Form as default };","map":{"version":3,"names":["useFormLabelWidth","potentialLabelWidthArr","ref","autoLabelWidth","computed","value","length","max","Math","getLabelWidthIndex","width","index","indexOf","debugWarn","registerLabelWidth","val","oldVal","splice","push","deregisterLabelWidth","_sfc_main","defineComponent","name","props","model","Object","rules","labelPosition","String","labelWidth","type","Number","default","labelSuffix","inline","Boolean","inlineMessage","statusIcon","showMessage","size","disabled","validateOnRuleChange","hideRequiredAsterisk","scrollToError","emits","setup","emit","fields","watch","forEach","field","evaluateValidationEnabled","validate","formSize","useSize","prefix","formKls","addField","removeField","prop","resetFields","resetField","clearValidate","props2","fds","filter","callback","promise","Promise","resolve","reject","valid2","invalidFields2","valid","count","invalidFields","firstInvalidFields","message","field2","scrollToField","keys","validateField","cb","concat","item","_a","_b","$el","scrollIntoView","call","TwForm","reactive","toRefs","provide","twFormKey","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/form/src/form.vue"],"sourcesContent":["<template>\n  <form :class=\"formKls\">\n    <slot></slot>\n  </form>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport { twFormKey } from '@tw-element/tokens'\nimport { debugWarn } from '@tw-element/utils'\nimport { useSize } from '@tw-element/hooks'\nimport type { ValidateFieldsError } from 'async-validator'\n\nimport type { PropType } from 'vue'\nimport type { ComponentSize } from '@tw-element/constants'\nimport type { FormRulesMap } from './form.type'\nimport type {\n  TwFormItemContext as FormItemCtx,\n  ValidateFieldCallback,\n} from '@tw-element/tokens'\n\nfunction useFormLabelWidth() {\n  const potentialLabelWidthArr = ref([])\n  const autoLabelWidth = computed(() => {\n    if (!potentialLabelWidthArr.value.length) return '0'\n    const max = Math.max(...potentialLabelWidthArr.value)\n    return max ? `${max}px` : ''\n  })\n\n  function getLabelWidthIndex(width: number) {\n    const index = potentialLabelWidthArr.value.indexOf(width)\n    if (index === -1) {\n      debugWarn('Form', `unexpected width ${width}`)\n    }\n    return index\n  }\n\n  function registerLabelWidth(val: number, oldVal: number) {\n    if (val && oldVal) {\n      const index = getLabelWidthIndex(oldVal)\n      potentialLabelWidthArr.value.splice(index, 1, val)\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val)\n    }\n  }\n\n  function deregisterLabelWidth(val: number) {\n    const index = getLabelWidthIndex(val)\n    index > -1 && potentialLabelWidthArr.value.splice(index, 1)\n  }\n\n  return {\n    autoLabelWidth,\n    registerLabelWidth,\n    deregisterLabelWidth,\n  }\n}\n\nexport interface Callback {\n  (isValid?: boolean, invalidFields?: ValidateFieldsError): void\n}\n\nexport default defineComponent({\n  name: 'TwForm',\n  props: {\n    model: Object,\n    rules: Object as PropType<FormRulesMap>,\n    labelPosition: String,\n    labelWidth: {\n      type: [String, Number],\n      default: '',\n    },\n    labelSuffix: {\n      type: String,\n      default: '',\n    },\n    inline: Boolean,\n    inlineMessage: Boolean,\n    statusIcon: Boolean,\n    showMessage: {\n      type: Boolean,\n      default: true,\n    },\n    size: String as PropType<ComponentSize>,\n    disabled: Boolean,\n    validateOnRuleChange: {\n      type: Boolean,\n      default: true,\n    },\n    hideRequiredAsterisk: {\n      type: Boolean,\n      default: false,\n    },\n    scrollToError: Boolean,\n  },\n  emits: ['validate'],\n  setup(props, { emit }) {\n    const fields: FormItemCtx[] = []\n\n    watch(\n      () => props.rules,\n      () => {\n        fields.forEach((field) => {\n          field.evaluateValidationEnabled()\n        })\n\n        if (props.validateOnRuleChange) {\n          validate(() => ({}))\n        }\n      }\n    )\n\n    const formSize = useSize()\n    const prefix = 'el-form'\n    const formKls = computed(() => {\n      const { labelPosition, inline } = props\n      return [\n        prefix,\n        `${prefix}--${formSize.value}`,\n        labelPosition ? `${prefix}--label-${labelPosition}` : '',\n        inline ? `${prefix}--inline` : '',\n      ]\n    })\n\n    const addField = (field: FormItemCtx) => {\n      if (field) {\n        fields.push(field)\n      }\n    }\n\n    const removeField = (field: FormItemCtx) => {\n      if (field.prop) {\n        fields.splice(fields.indexOf(field), 1)\n      }\n    }\n\n    const resetFields = () => {\n      if (!props.model) {\n        debugWarn('Form', 'model is required for resetFields to work.')\n        return\n      }\n      fields.forEach((field) => {\n        field.resetField()\n      })\n    }\n\n    const clearValidate = (props: string | string[] = []) => {\n      const fds = props.length\n        ? typeof props === 'string'\n          ? fields.filter((field) => props === field.prop)\n          : fields.filter((field) => props.indexOf(field.prop) > -1)\n        : fields\n      fds.forEach((field) => {\n        field.clearValidate()\n      })\n    }\n\n    const validate = (callback?: Callback) => {\n      if (!props.model) {\n        debugWarn('Form', 'model is required for validate to work!')\n        return\n      }\n\n      let promise: Promise<boolean> | undefined\n      // if no callback, return promise\n      if (typeof callback !== 'function') {\n        promise = new Promise((resolve, reject) => {\n          callback = function (valid, invalidFields) {\n            if (valid) {\n              resolve(true)\n            } else {\n              reject(invalidFields)\n            }\n          }\n        })\n      }\n\n      if (fields.length === 0) {\n        callback(true)\n      }\n      let valid = true\n      let count = 0\n      let invalidFields = {}\n      let firstInvalidFields\n      for (const field of fields) {\n        field.validate('', (message, field) => {\n          if (message) {\n            valid = false\n            firstInvalidFields || (firstInvalidFields = field)\n          }\n          invalidFields = { ...invalidFields, ...field }\n          if (++count === fields.length) {\n            callback(valid, invalidFields)\n          }\n        })\n      }\n      if (!valid && props.scrollToError) {\n        scrollToField(Object.keys(firstInvalidFields)[0])\n      }\n      return promise\n    }\n\n    const validateField = (\n      props: string | string[],\n      cb: ValidateFieldCallback\n    ) => {\n      props = [].concat(props)\n      const fds = fields.filter((field) => props.indexOf(field.prop) !== -1)\n      if (!fields.length) {\n        debugWarn('Form', 'please pass correct props!')\n        return\n      }\n\n      fds.forEach((field) => {\n        field.validate('', cb)\n      })\n    }\n\n    const scrollToField = (prop: string) => {\n      fields.forEach((item) => {\n        if (item.prop === prop) {\n          item.$el.scrollIntoView?.()\n        }\n      })\n    }\n\n    const TwForm = reactive({\n      ...toRefs(props),\n      resetFields,\n      clearValidate,\n      validateField,\n      emit,\n      addField,\n      removeField,\n      ...useFormLabelWidth(),\n    })\n\n    provide(twFormKey, TwForm)\n\n    return {\n      formKls,\n      validate, // export\n      resetFields,\n      clearValidate,\n      validateField,\n      scrollToField,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}