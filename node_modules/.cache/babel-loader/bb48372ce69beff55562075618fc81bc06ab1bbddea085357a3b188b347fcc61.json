{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, ref, computed, watch, reactive, markRaw, withDirectives, openBlock, createElementBlock, renderSlot, vShow, createCommentVNode } from 'vue';\nimport { eagerComputed } from '@vueuse/core';\nimport '../../../tokens/index.mjs';\nimport '../../../utils/index.mjs';\nimport { tabPaneProps } from './tab-pane.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { tabsRootContextKey } from '../../../tokens/tabs.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nconst COMPONENT_NAME = \"TwTabPane\";\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  props: tabPaneProps,\n  setup(props) {\n    const instance = getCurrentInstance();\n    const tabsRoot = inject(tabsRootContextKey);\n    if (!tabsRoot) throwError(COMPONENT_NAME, `must use with TwTabs`);\n    const index = ref();\n    const loaded = ref(false);\n    const isClosable = computed(() => props.closable || tabsRoot.props.closable);\n    const active = eagerComputed(() => tabsRoot.currentName.value === (props.name || index.value));\n    const paneName = computed(() => props.name || index.value);\n    const shouldBeRender = eagerComputed(() => !props.lazy || loaded.value || active.value);\n    watch(active, val => {\n      if (val) loaded.value = true;\n    });\n    tabsRoot.updatePaneState(reactive({\n      uid: instance.uid,\n      instance: markRaw(instance),\n      props,\n      paneName,\n      active,\n      index,\n      isClosable\n    }));\n    return {\n      active,\n      paneName,\n      shouldBeRender\n    };\n  }\n});\nconst _hoisted_1 = [\"id\", \"aria-hidden\", \"aria-labelledby\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.shouldBeRender ? withDirectives((openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    id: `pane-${_ctx.paneName}`,\n    class: \"el-tab-pane\",\n    role: \"tabpanel\",\n    \"aria-hidden\": !_ctx.active,\n    \"aria-labelledby\": `tab-${_ctx.paneName}`\n  }, [renderSlot(_ctx.$slots, \"default\")], 8, _hoisted_1)), [[vShow, _ctx.active]]) : createCommentVNode(\"v-if\", true);\n}\nvar TabPane = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { TabPane as default };","map":{"version":3,"names":["COMPONENT_NAME","_sfc_main","defineComponent","name","props","tabPaneProps","setup","instance","getCurrentInstance","tabsRoot","inject","tabsRootContextKey","throwError","index","ref","loaded","isClosable","computed","closable","active","eagerComputed","currentName","value","paneName","shouldBeRender","lazy","watch","val","updatePaneState","reactive","uid","markRaw","_ctx","_cache","$props","$setup","$data","$options","key","id","class","role","renderSlot","$slots","_hoisted_1","vShow"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/tabs/src/tab-pane.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"shouldBeRender\"\n    v-show=\"active\"\n    :id=\"`pane-${paneName}`\"\n    class=\"el-tab-pane\"\n    role=\"tabpanel\"\n    :aria-hidden=\"!active\"\n    :aria-labelledby=\"`tab-${paneName}`\"\n  >\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  ref,\n  computed,\n  inject,\n  getCurrentInstance,\n  watch,\n  markRaw,\n  reactive,\n} from 'vue'\nimport { eagerComputed } from '@vueuse/core'\nimport { tabsRootContextKey } from '@tw-element/tokens'\nimport { throwError } from '@tw-element/utils'\nimport { tabPaneProps } from './tab-pane'\n\nconst COMPONENT_NAME = 'TwTabPane'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: tabPaneProps,\n  setup(props) {\n    const instance = getCurrentInstance()!\n    const tabsRoot = inject(tabsRootContextKey)\n    if (!tabsRoot) throwError(COMPONENT_NAME, `must use with TwTabs`)\n\n    const index = ref<string>()\n    const loaded = ref(false)\n    const isClosable = computed(() => props.closable || tabsRoot.props.closable)\n    const active = eagerComputed(\n      () => tabsRoot.currentName.value === (props.name || index.value)\n    )\n    const paneName = computed(() => props.name || index.value)\n    const shouldBeRender = eagerComputed(\n      () => !props.lazy || loaded.value || active.value\n    )\n\n    watch(active, (val) => {\n      if (val) loaded.value = true\n    })\n\n    tabsRoot.updatePaneState(\n      reactive({\n        uid: instance.uid,\n        instance: markRaw(instance),\n        props,\n        paneName,\n        active,\n        index,\n        isClosable,\n      })\n    )\n\n    return {\n      active,\n      paneName,\n      shouldBeRender,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;AA6BA,MAAMA,cAAA,GAAiB;AAEvB,MAAKC,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAMH,cAAA;EACNI,KAAA,EAAOC,YAAA;EACPC,MAAMF,KAAA,EAAO;IACX,MAAMG,QAAA,GAAWC,kBAAA;IACjB,MAAMC,QAAA,GAAWC,MAAA,CAAOC,kBAAA;IACxB,IAAI,CAACF,QAAA,EAAUG,UAAA,CAAWZ,cAAA,EAAgB;IAE1C,MAAMa,KAAA,GAAQC,GAAA;IACd,MAAMC,MAAA,GAASD,GAAA,CAAI;IACnB,MAAME,UAAA,GAAaC,QAAA,CAAS,MAAMb,KAAA,CAAMc,QAAA,IAAYT,QAAA,CAASL,KAAA,CAAMc,QAAA;IACnE,MAAMC,MAAA,GAASC,aAAA,CACb,MAAMX,QAAA,CAASY,WAAA,CAAYC,KAAA,MAAAlB,KAAA,CAAiBD,IAAA,IAAQU,KAAA,CAAMS,KAAA;IAE5D,MAAMC,QAAA,GAAWN,QAAA,CAAS,MAAMb,KAAA,CAAMD,IAAA,IAAQU,KAAA,CAAMS,KAAA;IACpD,MAAME,cAAA,GAAiBJ,aAAA,CACrB,MAAM,CAAChB,KAAA,CAAMqB,IAAA,IAAQV,MAAA,CAAOO,KAAA,IAASH,MAAA,CAAOG,KAAA;IAG9CI,KAAA,CAAMP,MAAA,EAASQ,GAAA,IAAQ;MACrB,IAAIA,GAAA,EAAKZ,MAAA,CAAOO,KAAA,GAAQ;IAAA;IAG1Bb,QAAA,CAASmB,eAAA,CACPC,QAAA,CAAS;MACPC,GAAA,EAAKvB,QAAA,CAASuB,GAAA;MACdvB,QAAA,EAAUwB,OAAA,CAAQxB,QAAA;MAClBH,KAAA;MACAmB,QAAA;MACAJ,MAAA;MACAN,KAAA;MACAG;IAAA;IAIJ,OAAO;MACLG,MAAA;MACAI,QAAA;MACAC;IAAA;EAAA;AAAA;;qBAnEIQ,IAAA,EAAAC,MAAA,EAAcC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,QAAA;;IAEnBC,GAAA,EAAE;IACHC,EAAA,UAAMP,IAAA,CAAAT,QAAA;IACNiB,KAAA,EAAK;IACJC,IAAA;IACA,gBAAAT,IAAA,CAAeb,MAAA;IAAA,0BAAAa,IAAA,CAAAT,QAAA;KAEhB,CAAAmB,UAAA,CAAAV,IAAA,CAAAW,MAAA,a,KAPQC,UAAA,IAAM,EAAAC,KAAA,EAAAb,IAAA,CAAAb,MAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}