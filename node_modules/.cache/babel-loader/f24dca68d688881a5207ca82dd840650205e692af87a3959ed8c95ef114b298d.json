{"ast":null,"code":"import { isRef, watch, onScopeDispose } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../utils/index.mjs';\nimport { throwError } from '../../utils/error.mjs';\nimport { hasClass, removeClass, getStyle, addClass } from '../../utils/dom/style.mjs';\nimport { getScrollBarWidth } from '../../utils/dom/scroll.mjs';\nconst useLockscreen = trigger => {\n  if (!isRef(trigger)) {\n    throwError(\"[useLockscreen]\", \"You need to pass a ref param to this function\");\n  }\n  if (!isClient || hasClass(document.body, \"tw-popup-parent--hidden\")) {\n    return;\n  }\n  let scrollBarWidth = 0;\n  let withoutHiddenClass = false;\n  let bodyPaddingRight = \"0\";\n  let computedBodyPaddingRight = 0;\n  const cleanup = () => {\n    removeClass(document.body, \"tw-popup-parent--hidden\");\n    if (withoutHiddenClass) {\n      document.body.style.paddingRight = bodyPaddingRight;\n    }\n  };\n  watch(trigger, val => {\n    if (!val) {\n      cleanup();\n      return;\n    }\n    withoutHiddenClass = !hasClass(document.body, \"tw-popup-parent--hidden\");\n    if (withoutHiddenClass) {\n      bodyPaddingRight = document.body.style.paddingRight;\n      computedBodyPaddingRight = parseInt(getStyle(document.body, \"paddingRight\"), 10);\n    }\n    scrollBarWidth = getScrollBarWidth();\n    const bodyHasOverflow = document.documentElement.clientHeight < document.body.scrollHeight;\n    const bodyOverflowY = getStyle(document.body, \"overflowY\");\n    if (scrollBarWidth > 0 && (bodyHasOverflow || bodyOverflowY === \"scroll\") && withoutHiddenClass) {\n      document.body.style.paddingRight = `${computedBodyPaddingRight + scrollBarWidth}px`;\n    }\n    addClass(document.body, \"tw-popup-parent--hidden\");\n  });\n  onScopeDispose(() => cleanup());\n};\nexport { useLockscreen };","map":{"version":3,"names":["useLockscreen","trigger","isRef","throwError","isClient","hasClass","document","body","scrollBarWidth","withoutHiddenClass","bodyPaddingRight","computedBodyPaddingRight","cleanup","removeClass","style","paddingRight","watch","val","parseInt","getStyle","getScrollBarWidth","bodyHasOverflow","documentElement","clientHeight","scrollHeight","bodyOverflowY","addClass","onScopeDispose"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/hooks/use-lockscreen/index.ts"],"sourcesContent":["import { watch, isRef, onScopeDispose } from 'vue'\n\nimport { isClient } from '@vueuse/core'\nimport {\n  throwError,\n  addClass,\n  removeClass,\n  hasClass,\n  getStyle,\n  getScrollBarWidth,\n} from '@tw-element/utils'\n\nimport type { Ref } from 'vue'\n\n/**\n * Hook that monitoring the ref value to lock or unlock the screen.\n * When the trigger became true, it assumes modal is now opened and vice versa.\n * @param trigger {Ref<boolean>}\n */\nexport const useLockscreen = (trigger: Ref<boolean>) => {\n  if (!isRef(trigger)) {\n    throwError(\n      '[useLockscreen]',\n      'You need to pass a ref param to this function'\n    )\n  }\n  if (!isClient || hasClass(document.body, 'tw-popup-parent--hidden')) {\n    return\n  }\n\n  let scrollBarWidth = 0\n  let withoutHiddenClass = false\n  let bodyPaddingRight = '0'\n  let computedBodyPaddingRight = 0\n\n  const cleanup = () => {\n    removeClass(document.body, 'tw-popup-parent--hidden')\n    if (withoutHiddenClass) {\n      document.body.style.paddingRight = bodyPaddingRight\n    }\n  }\n  watch(trigger, (val) => {\n    if (!val) {\n      cleanup()\n      return\n    }\n\n    withoutHiddenClass = !hasClass(document.body, 'tw-popup-parent--hidden')\n    if (withoutHiddenClass) {\n      bodyPaddingRight = document.body.style.paddingRight\n      computedBodyPaddingRight = parseInt(\n        getStyle(document.body, 'paddingRight'),\n        10\n      )\n    }\n    scrollBarWidth = getScrollBarWidth()\n    const bodyHasOverflow =\n      document.documentElement.clientHeight < document.body.scrollHeight\n    const bodyOverflowY = getStyle(document.body, 'overflowY')\n    if (\n      scrollBarWidth > 0 &&\n      (bodyHasOverflow || bodyOverflowY === 'scroll') &&\n      withoutHiddenClass\n    ) {\n      document.body.style.paddingRight = `${\n        computedBodyPaddingRight + scrollBarWidth\n      }px`\n    }\n    addClass(document.body, 'tw-popup-parent--hidden')\n  })\n  onScopeDispose(() => cleanup())\n}\n"],"mappings":";;;;;;AAUY,MAACA,aAAa,GAAIC,OAAO,IAAK;EACxC,IAAI,CAACC,KAAK,CAACD,OAAO,CAAC,EAAE;IACnBE,UAAU,CAAC,iBAAiB,EAAE,+CAA+C,CAAC;EAClF;EACE,IAAI,CAACC,QAAQ,IAAIC,QAAQ,CAACC,QAAQ,CAACC,IAAI,EAAE,yBAAyB,CAAC,EAAE;IACnE;EACJ;EACE,IAAIC,cAAc,GAAG,CAAC;EACtB,IAAIC,kBAAkB,GAAG,KAAK;EAC9B,IAAIC,gBAAgB,GAAG,GAAG;EAC1B,IAAIC,wBAAwB,GAAG,CAAC;EAChC,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBC,WAAW,CAACP,QAAQ,CAACC,IAAI,EAAE,yBAAyB,CAAC;IACrD,IAAIE,kBAAkB,EAAE;MACtBH,QAAQ,CAACC,IAAI,CAACO,KAAK,CAACC,YAAY,GAAGL,gBAAgB;IACzD;EACA,CAAG;EACDM,KAAK,CAACf,OAAO,EAAGgB,GAAG,IAAK;IACtB,IAAI,CAACA,GAAG,EAAE;MACRL,OAAO,EAAE;MACT;IACN;IACIH,kBAAkB,GAAG,CAACJ,QAAQ,CAACC,QAAQ,CAACC,IAAI,EAAE,yBAAyB,CAAC;IACxE,IAAIE,kBAAkB,EAAE;MACtBC,gBAAgB,GAAGJ,QAAQ,CAACC,IAAI,CAACO,KAAK,CAACC,YAAY;MACnDJ,wBAAwB,GAAGO,QAAQ,CAACC,QAAQ,CAACb,QAAQ,CAACC,IAAI,EAAE,cAAc,CAAC,EAAE,EAAE,CAAC;IACtF;IACIC,cAAc,GAAGY,iBAAiB,EAAE;IACpC,MAAMC,eAAe,GAAGf,QAAQ,CAACgB,eAAe,CAACC,YAAY,GAAGjB,QAAQ,CAACC,IAAI,CAACiB,YAAY;IAC1F,MAAMC,aAAa,GAAGN,QAAQ,CAACb,QAAQ,CAACC,IAAI,EAAE,WAAW,CAAC;IAC1D,IAAIC,cAAc,GAAG,CAAC,KAAKa,eAAe,IAAII,aAAa,KAAK,QAAQ,CAAC,IAAIhB,kBAAkB,EAAE;MAC/FH,QAAQ,CAACC,IAAI,CAACO,KAAK,CAACC,YAAY,GAAI,GAAEJ,wBAAwB,GAAGH,cAAe,IAAG;IACzF;IACIkB,QAAQ,CAACpB,QAAQ,CAACC,IAAI,EAAE,yBAAyB,CAAC;EACtD,CAAG,CAAC;EACFoB,cAAc,CAAC,MAAMf,OAAO,EAAE,CAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}