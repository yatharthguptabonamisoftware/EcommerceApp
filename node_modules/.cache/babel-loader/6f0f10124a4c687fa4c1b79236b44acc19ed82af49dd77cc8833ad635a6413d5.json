{"ast":null,"code":"import { defineComponent, inject, ref, unref, nextTick, computed, provide, resolveComponent, openBlock, createBlock, withCtx, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { TwCollectionItem, ROVING_FOCUS_COLLECTION_INJECTION_KEY as COLLECTION_INJECTION_KEY } from './roving-focus-group2.mjs';\nimport { ROVING_FOCUS_GROUP_INJECTION_KEY, ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY } from './tokens.mjs';\nimport { getFocusIntent, reorderArray, focusFirst } from './utils.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nconst _sfc_main = defineComponent({\n  components: {\n    ElRovingFocusCollectionItem: TwCollectionItem\n  },\n  props: {\n    focusable: {\n      type: Boolean,\n      default: true\n    },\n    active: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"mousedown\", \"focus\", \"keydown\"],\n  setup(props, {\n    emit\n  }) {\n    const {\n      currentTabbedId,\n      loop,\n      onItemFocus,\n      onItemShiftTab\n    } = inject(ROVING_FOCUS_GROUP_INJECTION_KEY, void 0);\n    const {\n      getItems\n    } = inject(COLLECTION_INJECTION_KEY, void 0);\n    const id = useId();\n    const rovingFocusGroupItemRef = ref(null);\n    const handleMousedown = composeEventHandlers(e => {\n      emit(\"mousedown\", e);\n    }, e => {\n      if (!props.focusable) {\n        e.preventDefault();\n      } else {\n        onItemFocus(unref(id));\n      }\n    });\n    const handleFocus = composeEventHandlers(e => {\n      emit(\"focus\", e);\n    }, () => {\n      onItemFocus(unref(id));\n    });\n    const handleKeydown = composeEventHandlers(e => {\n      emit(\"keydown\", e);\n    }, e => {\n      const {\n        key,\n        shiftKey,\n        target,\n        currentTarget\n      } = e;\n      if (key === EVENT_CODE.tab && shiftKey) {\n        onItemShiftTab();\n        return;\n      }\n      if (target !== currentTarget) return;\n      const focusIntent = getFocusIntent(e);\n      if (focusIntent) {\n        e.preventDefault();\n        const items = getItems().filter(item => item.focusable);\n        let elements = items.map(item => item.ref);\n        switch (focusIntent) {\n          case \"last\":\n            {\n              elements.reverse();\n              break;\n            }\n          case \"prev\":\n          case \"next\":\n            {\n              if (focusIntent === \"prev\") {\n                elements.reverse();\n              }\n              const currentIdx = elements.indexOf(currentTarget);\n              elements = loop.value ? reorderArray(elements, currentIdx + 1) : elements.slice(currentIdx + 1);\n              break;\n            }\n          default:\n            {\n              break;\n            }\n        }\n        nextTick(() => {\n          focusFirst(elements);\n        });\n      }\n    });\n    const isCurrentTab = computed(() => currentTabbedId.value === unref(id));\n    provide(ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, {\n      rovingFocusGroupItemRef,\n      tabIndex: computed(() => unref(isCurrentTab) ? 0 : -1),\n      handleMousedown,\n      handleFocus,\n      handleKeydown\n    });\n    return {\n      id,\n      handleKeydown,\n      handleFocus,\n      handleMousedown\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_roving_focus_collection_item = resolveComponent(\"el-roving-focus-collection-item\");\n  return openBlock(), createBlock(_component_el_roving_focus_collection_item, {\n    id: _ctx.id,\n    focusable: _ctx.focusable,\n    active: _ctx.active\n  }, {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 8, [\"id\", \"focusable\", \"active\"]);\n}\nvar ElRovingFocusItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { ElRovingFocusItem as default };","map":{"version":3,"names":["_sfc_main","defineComponent","components","ElRovingFocusCollectionItem","TwCollectionItem","props","focusable","type","Boolean","default","active","emits","setup","emit","currentTabbedId","loop","onItemFocus","onItemShiftTab","inject","ROVING_FOCUS_GROUP_INJECTION_KEY","getItems","COLLECTION_INJECTION_KEY","id","useId","rovingFocusGroupItemRef","ref","handleMousedown","composeEventHandlers","e","preventDefault","unref","handleFocus","handleKeydown","key","shiftKey","target","currentTarget","EVENT_CODE","tab","focusIntent","getFocusIntent","items","filter","item","elements","map","reverse","currentIdx","indexOf","value","reorderArray","slice","nextTick","focusFirst","isCurrentTab","computed","provide","ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY","tabIndex","openBlock","createBlock","_component_el_roving_focus_collection_item","_ctx","withCtx","renderSlot","$slots"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/roving-focus-group/src/roving-focus-item.vue"],"sourcesContent":["<template>\n  <el-roving-focus-collection-item\n    :id=\"id\"\n    :focusable=\"focusable\"\n    :active=\"active\"\n  >\n    <slot />\n  </el-roving-focus-collection-item>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  ref,\n  unref,\n  nextTick,\n  provide,\n} from 'vue'\nimport { useId } from '@tw-element/hooks'\nimport { composeEventHandlers } from '@tw-element/utils'\nimport { EVENT_CODE } from '@tw-element/constants'\nimport {\n  ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n  TwCollectionItem as ElRovingFocusCollectionItem,\n} from './roving-focus-group'\nimport {\n  ROVING_FOCUS_GROUP_INJECTION_KEY,\n  ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY,\n} from './tokens'\nimport { getFocusIntent, reorderArray, focusFirst } from './utils'\n\nexport default defineComponent({\n  components: {\n    ElRovingFocusCollectionItem,\n  },\n  props: {\n    focusable: {\n      type: Boolean,\n      default: true,\n    },\n    active: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['mousedown', 'focus', 'keydown'],\n  setup(props, { emit }) {\n    const { currentTabbedId, loop, onItemFocus, onItemShiftTab } = inject(\n      ROVING_FOCUS_GROUP_INJECTION_KEY,\n      undefined\n    )!\n\n    const { getItems } = inject(\n      ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const id = useId()\n    const rovingFocusGroupItemRef = ref<HTMLElement | null>(null)\n\n    const handleMousedown = composeEventHandlers(\n      (e: Event) => {\n        emit('mousedown', e)\n      },\n      (e) => {\n        if (!props.focusable) {\n          e.preventDefault()\n        } else {\n          onItemFocus(unref(id))\n        }\n      }\n    )\n\n    const handleFocus = composeEventHandlers(\n      (e: Event) => {\n        emit('focus', e)\n      },\n      () => {\n        onItemFocus(unref(id))\n      }\n    )\n\n    const handleKeydown = composeEventHandlers(\n      (e: Event) => {\n        emit('keydown', e)\n      },\n      (e) => {\n        const { key, shiftKey, target, currentTarget } = e as KeyboardEvent\n        if (key === EVENT_CODE.tab && shiftKey) {\n          onItemShiftTab()\n          return\n        }\n        if (target !== currentTarget) return\n        const focusIntent = getFocusIntent(e as KeyboardEvent)\n\n        if (focusIntent) {\n          e.preventDefault()\n          const items = getItems<typeof props>().filter(\n            (item) => item.focusable\n          )\n\n          let elements = items.map((item) => item.ref!)\n\n          switch (focusIntent) {\n            case 'last': {\n              elements.reverse()\n              break\n            }\n            case 'prev':\n            case 'next': {\n              if (focusIntent === 'prev') {\n                elements.reverse()\n              }\n              const currentIdx = elements.indexOf(currentTarget as HTMLElement)\n              elements = loop.value\n                ? reorderArray(elements, currentIdx + 1)\n                : elements.slice(currentIdx + 1)\n              break\n            }\n            default: {\n              break\n            }\n          }\n\n          nextTick(() => {\n            focusFirst(elements)\n          })\n        }\n      }\n    )\n\n    const isCurrentTab = computed(() => currentTabbedId.value === unref(id))\n\n    provide(ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, {\n      rovingFocusGroupItemRef,\n      tabIndex: computed(() => (unref(isCurrentTab) ? 0 : -1)),\n      handleMousedown,\n      handleFocus,\n      handleKeydown,\n    })\n\n    return {\n      id,\n      handleKeydown,\n      handleFocus,\n      handleMousedown,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}