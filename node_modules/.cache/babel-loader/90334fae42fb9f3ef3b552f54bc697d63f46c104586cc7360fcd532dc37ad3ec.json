{"ast":null,"code":"import { isString } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { useSizeProp } from '../../../hooks/use-common-props/index.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nconst inputProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: definePropType(void 0),\n    default: \"\"\n  },\n  type: {\n    type: String,\n    default: \"text\"\n  },\n  resize: {\n    type: String,\n    values: [\"none\", \"both\", \"horizontal\", \"vertical\"]\n  },\n  autosize: {\n    type: definePropType([Boolean, Object]),\n    default: false\n  },\n  autocomplete: {\n    type: String,\n    default: \"off\"\n  },\n  placeholder: {\n    type: String\n  },\n  form: {\n    type: String,\n    default: \"\"\n  },\n  readonly: {\n    type: Boolean,\n    default: false\n  },\n  clearable: {\n    type: Boolean,\n    default: false\n  },\n  showPassword: {\n    type: Boolean,\n    default: false\n  },\n  showWordLimit: {\n    type: Boolean,\n    default: false\n  },\n  suffixIcon: {\n    type: iconPropType,\n    default: \"\"\n  },\n  prefixIcon: {\n    type: iconPropType,\n    default: \"\"\n  },\n  label: {\n    type: String\n  },\n  tabindex: {\n    type: [Number, String]\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  },\n  inputStyle: {\n    type: definePropType([Object, Array, String]),\n    default: () => mutable({})\n  }\n});\nconst inputEmits = {\n  [UPDATE_MODEL_EVENT]: value => isString(value),\n  input: value => isString(value),\n  change: value => isString(value),\n  focus: evt => evt instanceof FocusEvent,\n  blur: evt => evt instanceof FocusEvent,\n  clear: () => true,\n  mouseleave: evt => evt instanceof MouseEvent,\n  mouseenter: evt => evt instanceof MouseEvent,\n  keydown: evt => evt instanceof KeyboardEvent,\n  compositionstart: evt => evt instanceof CompositionEvent,\n  compositionupdate: evt => evt instanceof CompositionEvent,\n  compositionend: evt => evt instanceof CompositionEvent\n};\nexport { inputEmits, inputProps };","map":{"version":3,"names":["inputProps","buildProps","size","useSizeProp","disabled","Boolean","modelValue","type","definePropType","default","String","resize","values","autosize","Object","autocomplete","placeholder","form","readonly","clearable","showPassword","showWordLimit","suffixIcon","iconPropType","prefixIcon","label","tabindex","Number","validateEvent","inputStyle","Array","mutable","inputEmits","UPDATE_MODEL_EVENT","value","isString","input","change","focus","evt","FocusEvent","blur","clear","mouseleave","MouseEvent","mouseenter","keydown","KeyboardEvent","compositionstart","CompositionEvent","compositionupdate","compositionend"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/input/src/input.ts"],"sourcesContent":["import { isString } from '@vue/shared'\nimport {\n  buildProps,\n  definePropType,\n  iconPropType,\n  mutable,\n} from '@tw-element/utils'\nimport { UPDATE_MODEL_EVENT } from '@tw-element/constants'\nimport { useSizeProp } from '@tw-element/hooks'\nimport type { StyleValue, ExtractPropTypes } from 'vue'\n\ntype AutoSize = { minRows?: number; maxRows?: number } | boolean\n\nexport const inputProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: definePropType<string | number | null | undefined>(undefined),\n    default: '',\n  },\n  type: {\n    type: String,\n    default: 'text',\n  },\n  resize: {\n    type: String,\n    values: ['none', 'both', 'horizontal', 'vertical'],\n  },\n  autosize: {\n    type: definePropType<AutoSize>([Boolean, Object]),\n    default: false,\n  },\n  autocomplete: {\n    type: String,\n    default: 'off',\n  },\n  placeholder: {\n    type: String,\n  },\n  form: {\n    type: String,\n    default: '',\n  },\n  readonly: {\n    type: Boolean,\n    default: false,\n  },\n  clearable: {\n    type: Boolean,\n    default: false,\n  },\n  showPassword: {\n    type: Boolean,\n    default: false,\n  },\n  showWordLimit: {\n    type: Boolean,\n    default: false,\n  },\n  suffixIcon: {\n    type: iconPropType,\n    default: '',\n  },\n  prefixIcon: {\n    type: iconPropType,\n    default: '',\n  },\n  label: {\n    type: String,\n  },\n  tabindex: {\n    type: [Number, String],\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  inputStyle: {\n    type: definePropType<StyleValue>([Object, Array, String]),\n    default: () => mutable({} as const),\n  },\n} as const)\nexport type InputProps = ExtractPropTypes<typeof inputProps>\n\nexport const inputEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string) => isString(value),\n  input: (value: string) => isString(value),\n  change: (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n  mouseleave: (evt: MouseEvent) => evt instanceof MouseEvent,\n  mouseenter: (evt: MouseEvent) => evt instanceof MouseEvent,\n  keydown: (evt: KeyboardEvent) => evt instanceof KeyboardEvent,\n  compositionstart: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionupdate: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionend: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n}\nexport type InputEmits = typeof inputEmits\n"],"mappings":";;;;;;;;;AASY,MAACA,UAAU,GAAGC,UAAU,CAAC;EACnCC,IAAI,EAAEC,WAAW;EACjBC,QAAQ,EAAEC,OAAO;EACjBC,UAAU,EAAE;IACVC,IAAI,EAAEC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC5BC,OAAO,EAAE;EACb,CAAG;EACDF,IAAI,EAAE;IACJA,IAAI,EAAEG,MAAM;IACZD,OAAO,EAAE;EACb,CAAG;EACDE,MAAM,EAAE;IACNJ,IAAI,EAAEG,MAAM;IACZE,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU;EACrD,CAAG;EACDC,QAAQ,EAAE;IACRN,IAAI,EAAEC,cAAc,CAAC,CAACH,OAAO,EAAES,MAAM,CAAC,CAAC;IACvCL,OAAO,EAAE;EACb,CAAG;EACDM,YAAY,EAAE;IACZR,IAAI,EAAEG,MAAM;IACZD,OAAO,EAAE;EACb,CAAG;EACDO,WAAW,EAAE;IACXT,IAAI,EAAEG;EACV,CAAG;EACDO,IAAI,EAAE;IACJV,IAAI,EAAEG,MAAM;IACZD,OAAO,EAAE;EACb,CAAG;EACDS,QAAQ,EAAE;IACRX,IAAI,EAAEF,OAAO;IACbI,OAAO,EAAE;EACb,CAAG;EACDU,SAAS,EAAE;IACTZ,IAAI,EAAEF,OAAO;IACbI,OAAO,EAAE;EACb,CAAG;EACDW,YAAY,EAAE;IACZb,IAAI,EAAEF,OAAO;IACbI,OAAO,EAAE;EACb,CAAG;EACDY,aAAa,EAAE;IACbd,IAAI,EAAEF,OAAO;IACbI,OAAO,EAAE;EACb,CAAG;EACDa,UAAU,EAAE;IACVf,IAAI,EAAEgB,YAAY;IAClBd,OAAO,EAAE;EACb,CAAG;EACDe,UAAU,EAAE;IACVjB,IAAI,EAAEgB,YAAY;IAClBd,OAAO,EAAE;EACb,CAAG;EACDgB,KAAK,EAAE;IACLlB,IAAI,EAAEG;EACV,CAAG;EACDgB,QAAQ,EAAE;IACRnB,IAAI,EAAE,CAACoB,MAAM,EAAEjB,MAAM;EACzB,CAAG;EACDkB,aAAa,EAAE;IACbrB,IAAI,EAAEF,OAAO;IACbI,OAAO,EAAE;EACb,CAAG;EACDoB,UAAU,EAAE;IACVtB,IAAI,EAAEC,cAAc,CAAC,CAACM,MAAM,EAAEgB,KAAK,EAAEpB,MAAM,CAAC,CAAC;IAC7CD,OAAO,EAAEA,CAAA,KAAMsB,OAAO,CAAC,EAAE;EAC7B;AACA,CAAC;AACW,MAACC,UAAU,GAAG;EACxB,CAACC,kBAAkB,GAAIC,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAAC;EAChDE,KAAK,EAAGF,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAAC;EACjCG,MAAM,EAAGH,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAAC;EAClCI,KAAK,EAAGC,GAAG,IAAKA,GAAG,YAAYC,UAAU;EACzCC,IAAI,EAAGF,GAAG,IAAKA,GAAG,YAAYC,UAAU;EACxCE,KAAK,EAAEA,CAAA,KAAM,IAAI;EACjBC,UAAU,EAAGJ,GAAG,IAAKA,GAAG,YAAYK,UAAU;EAC9CC,UAAU,EAAGN,GAAG,IAAKA,GAAG,YAAYK,UAAU;EAC9CE,OAAO,EAAGP,GAAG,IAAKA,GAAG,YAAYQ,aAAa;EAC9CC,gBAAgB,EAAGT,GAAG,IAAKA,GAAG,YAAYU,gBAAgB;EAC1DC,iBAAiB,EAAGX,GAAG,IAAKA,GAAG,YAAYU,gBAAgB;EAC3DE,cAAc,EAAGZ,GAAG,IAAKA,GAAG,YAAYU;AAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}