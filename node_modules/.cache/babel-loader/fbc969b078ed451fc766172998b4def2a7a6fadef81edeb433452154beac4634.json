{"ast":null,"code":"import { defineComponent, ref, inject, watch, onMounted, unref, onBeforeUnmount, openBlock, createElementBlock, normalizeClass } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { usePopperArrowProps } from './popper.mjs';\nimport { POPPER_CONTENT_INJECTION_KEY } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwPopperArrow\",\n  props: usePopperArrowProps,\n  setup(props) {\n    const ns = useNamespace(\"popper\");\n    const arrowRef = ref(null);\n    const popperContentInjection = inject(POPPER_CONTENT_INJECTION_KEY, void 0);\n    watch(() => props.arrowOffset, val => {\n      popperContentInjection.arrowOffset.value = val;\n    });\n    onMounted(() => {\n      popperContentInjection.arrowRef.value = unref(arrowRef);\n    });\n    onBeforeUnmount(() => {\n      popperContentInjection.arrowRef.value = null;\n    });\n    return {\n      ns,\n      arrowRef\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"span\", {\n    ref: \"arrowRef\",\n    class: normalizeClass(_ctx.ns.e(\"arrow\")),\n    \"data-popper-arrow\": \"\"\n  }, null, 2);\n}\nvar TwPopperArrow = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { TwPopperArrow as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","usePopperArrowProps","setup","ns","useNamespace","arrowRef","ref","popperContentInjection","inject","POPPER_CONTENT_INJECTION_KEY","watch","arrowOffset","val","value","onMounted","unref","onBeforeUnmount","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","class","normalizeClass","_ctx","e"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/popper/src/arrow.vue"],"sourcesContent":["<template>\n  <span ref=\"arrowRef\" :class=\"ns.e('arrow')\" data-popper-arrow=\"\" />\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  inject,\n  ref,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  unref,\n} from 'vue'\nimport { useNamespace } from '@tw-element/hooks'\nimport { usePopperArrowProps } from './popper'\nimport { POPPER_CONTENT_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'TwPopperArrow',\n  props: usePopperArrowProps,\n  setup(props) {\n    const ns = useNamespace('popper')\n    const arrowRef = ref<HTMLSpanElement | null>(null)\n    const popperContentInjection = inject(\n      POPPER_CONTENT_INJECTION_KEY,\n      undefined\n    )!\n\n    watch(\n      () => props.arrowOffset,\n      (val) => {\n        popperContentInjection.arrowOffset.value = val\n      }\n    )\n\n    onMounted(() => {\n      popperContentInjection.arrowRef.value = unref(arrowRef)\n    })\n\n    onBeforeUnmount(() => {\n      popperContentInjection.arrowRef.value = null\n    })\n\n    return {\n      ns,\n      arrowRef,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;AAkBA,MAAKA,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAOC,mBAAA;EACPC,MAAMF,KAAA,EAAO;IACX,MAAMG,EAAA,GAAKC,YAAA,CAAa;IACxB,MAAMC,QAAA,GAAWC,GAAA,CAA4B;IAC7C,MAAMC,sBAAA,GAAyBC,MAAA,CAC7BC,4BAAA,EACA;IAGFC,KAAA,CACE,MAAMV,KAAA,CAAMW,WAAA,EACXC,GAAA,IAAQ;MACPL,sBAAA,CAAuBI,WAAA,CAAYE,KAAA,GAAQD,GAAA;IAAA;IAI/CE,SAAA,CAAU,MAAM;MACdP,sBAAA,CAAuBF,QAAA,CAASQ,KAAA,GAAQE,KAAA,CAAMV,QAAA;IAAA;IAGhDW,eAAA,CAAgB,MAAM;MACpBT,sBAAA,CAAuBF,QAAA,CAASQ,KAAA,GAAQ;IAAA;IAG1C,OAAO;MACLV,EAAA;MACAE;IAAA;EAAA;AAAA;2BA7CJY,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAmEC,KAAA,EAAAC,QAAA;SAAzDC,SAAA,IAAUC,kBAAA;IAAEjB,GAAA,EAAK;IAAiBkB,KAAA,EAAAC,cAAA,CAAoBC,IAAA,CAAAvB,EAAA,CAAAwB,CAAA;IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}