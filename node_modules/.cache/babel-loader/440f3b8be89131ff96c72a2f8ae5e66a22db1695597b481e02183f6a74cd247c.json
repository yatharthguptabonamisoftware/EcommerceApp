{"ast":null,"code":"import { defineComponent, inject, withDirectives, cloneVNode, Fragment, Text, h, Comment } from 'vue';\nimport { NOOP, isObject } from '@vue/shared';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { FORWARD_REF_INJECTION_KEY, useForwardRefDirective } from '../../../hooks/use-forward-ref/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nconst NAME = \"ElOnlyChild\";\nconst OnlyChild = defineComponent({\n  name: NAME,\n  setup(_, {\n    slots,\n    attrs\n  }) {\n    var _a;\n    const forwardRefInjection = inject(FORWARD_REF_INJECTION_KEY, void 0);\n    const forwardRefDirective = useForwardRefDirective((_a = forwardRefInjection.setForwardRef) != null ? _a : NOOP);\n    return () => {\n      var _a2;\n      const defaultSlot = (_a2 = slots.default) == null ? void 0 : _a2.call(slots, attrs);\n      if (!defaultSlot) return null;\n      if (defaultSlot.length > 1) {\n        debugWarn(NAME, \"ElOnlyChild requires exact only one valid child.\");\n        return null;\n      }\n      const firstLegitNode = findFirstLegitChild(defaultSlot);\n      if (!firstLegitNode) {\n        debugWarn(NAME, \"no valid child node found\");\n        return null;\n      }\n      return withDirectives(cloneVNode(firstLegitNode, attrs), [[forwardRefDirective]]);\n    };\n  }\n});\nfunction findFirstLegitChild(node) {\n  if (!node) return null;\n  const children = node;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (isObject(child)) {\n      switch (child.type) {\n        case Comment:\n          continue;\n        case Text:\n          return wrapTextContent(child);\n        case Fragment:\n          return findFirstLegitChild(child.children);\n        default:\n          return child;\n      }\n    }\n    return wrapTextContent(child);\n  }\n  return null;\n}\nfunction wrapTextContent(s) {\n  return h(\"span\", {\n    class: \"el-only-child__content\"\n  }, [s]);\n}\nexport { OnlyChild as default };","map":{"version":3,"names":["NAME","OnlyChild","defineComponent","name","setup","_","slots","attrs","_a","forwardRefInjection","inject","FORWARD_REF_INJECTION_KEY","forwardRefDirective","useForwardRefDirective","setForwardRef","NOOP","_a2","defaultSlot","default","call","length","debugWarn","firstLegitNode","findFirstLegitChild","withDirectives","cloneVNode","node","children","i","child","isObject","type","Comment","Text","wrapTextContent","Fragment","s","h","class"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/slot/src/only-child.ts"],"sourcesContent":["import {\n  cloneVNode,\n  Comment,\n  defineComponent,\n  Fragment,\n  h,\n  Text,\n  withDirectives,\n  inject,\n} from 'vue'\nimport { NOOP, isObject } from '@vue/shared'\nimport {\n  FORWARD_REF_INJECTION_KEY,\n  useForwardRefDirective,\n} from '@tw-element/hooks'\nimport { debugWarn } from '@tw-element/utils'\n\nimport type { VNode } from 'vue'\n\nconst NAME = 'ElOnlyChild'\n\nconst OnlyChild = defineComponent({\n  name: NAME,\n  setup(_, { slots, attrs }) {\n    const forwardRefInjection = inject(FORWARD_REF_INJECTION_KEY, undefined)!\n    const forwardRefDirective = useForwardRefDirective(\n      forwardRefInjection.setForwardRef ?? NOOP\n    )\n    return () => {\n      const defaultSlot = slots.default?.(attrs)\n      if (!defaultSlot) return null\n\n      if (defaultSlot.length > 1) {\n        debugWarn(NAME, 'ElOnlyChild requires exact only one valid child.')\n        return null\n      }\n\n      const firstLegitNode = findFirstLegitChild(defaultSlot)\n      if (!firstLegitNode) {\n        debugWarn(NAME, 'no valid child node found')\n        return null\n      }\n\n      return withDirectives(cloneVNode(firstLegitNode, attrs), [\n        [forwardRefDirective],\n      ])\n    }\n  },\n})\n\nfunction findFirstLegitChild(node: VNode[] | undefined) {\n  if (!node) return null\n  const children = node as VNode[]\n  for (let i = 0; i < children.length; i++) {\n    /**\n     * when user uses h(Fragment, [text]) to render plain string,\n     * this switch case just cannot handle, when the value is primitives\n     * we should just return the wrapped string\n     */\n    const child = children[i]\n    if (isObject(child)) {\n      switch (child.type) {\n        case Comment:\n          continue\n        case Text:\n          return wrapTextContent(child)\n        case Fragment:\n          return findFirstLegitChild(child.children as VNode[])\n        default:\n          return child\n      }\n    }\n    return wrapTextContent(child)\n  }\n  return null\n}\n\nfunction wrapTextContent(s: string | VNode) {\n  return h('span', { class: 'el-only-child__content' }, [s])\n}\n\nexport default OnlyChild\n"],"mappings":";;;;;;AAgBA,MAAMA,IAAI,GAAG,aAAa;AACrB,MAACC,SAAS,GAAGC,eAAe,CAAC;EAChCC,IAAI,EAAEH,IAAI;EACVI,KAAKA,CAACC,CAAC,EAAE;IAAEC,KAAK;IAAEC;EAAK,CAAE,EAAE;IACzB,IAAIC,EAAE;IACN,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,yBAAyB,EAAE,KAAK,CAAC,CAAC;IACrE,MAAMC,mBAAmB,GAAGC,sBAAsB,CAAC,CAACL,EAAE,GAAGC,mBAAmB,CAACK,aAAa,KAAK,IAAI,GAAGN,EAAE,GAAGO,IAAI,CAAC;IAChH,OAAO,MAAM;MACX,IAAIC,GAAG;MACP,MAAMC,WAAW,GAAG,CAACD,GAAG,GAAGV,KAAK,CAACY,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGF,GAAG,CAACG,IAAI,CAACb,KAAK,EAAEC,KAAK,CAAC;MACnF,IAAI,CAACU,WAAW,EACd,OAAO,IAAI;MACb,IAAIA,WAAW,CAACG,MAAM,GAAG,CAAC,EAAE;QAC1BC,SAAS,CAACrB,IAAI,EAAE,kDAAkD,CAAC;QACnE,OAAO,IAAI;MACnB;MACM,MAAMsB,cAAc,GAAGC,mBAAmB,CAACN,WAAW,CAAC;MACvD,IAAI,CAACK,cAAc,EAAE;QACnBD,SAAS,CAACrB,IAAI,EAAE,2BAA2B,CAAC;QAC5C,OAAO,IAAI;MACnB;MACM,OAAOwB,cAAc,CAACC,UAAU,CAACH,cAAc,EAAEf,KAAK,CAAC,EAAE,CACvD,CAACK,mBAAmB,CAAC,CACtB,CAAC;IACR,CAAK;EACL;AACA,CAAC;AACD,SAASW,mBAAmBA,CAACG,IAAI,EAAE;EACjC,IAAI,CAACA,IAAI,EACP,OAAO,IAAI;EACb,MAAMC,QAAQ,GAAGD,IAAI;EACrB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACP,MAAM,EAAEQ,CAAC,EAAE,EAAE;IACxC,MAAMC,KAAK,GAAGF,QAAQ,CAACC,CAAC,CAAC;IACzB,IAAIE,QAAQ,CAACD,KAAK,CAAC,EAAE;MACnB,QAAQA,KAAK,CAACE,IAAI;QAChB,KAAKC,OAAO;UACV;QACF,KAAKC,IAAI;UACP,OAAOC,eAAe,CAACL,KAAK,CAAC;QAC/B,KAAKM,QAAQ;UACX,OAAOZ,mBAAmB,CAACM,KAAK,CAACF,QAAQ,CAAC;QAC5C;UACE,OAAOE,KAAK;MACtB;IACA;IACI,OAAOK,eAAe,CAACL,KAAK,CAAC;EACjC;EACE,OAAO,IAAI;AACb;AACA,SAASK,eAAeA,CAACE,CAAC,EAAE;EAC1B,OAAOC,CAAC,CAAC,MAAM,EAAE;IAAEC,KAAK,EAAE;EAAwB,CAAE,EAAE,CAACF,CAAC,CAAC,CAAC;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}