{"ast":null,"code":"import { defineComponent, inject, ref, provide, computed, unref, onMounted, watch, openBlock, createElementBlock, normalizeStyle, normalizeClass, renderSlot } from 'vue';\nimport { createPopper } from '@popperjs/core';\nimport '../../../hooks/index.mjs';\nimport { POPPER_INJECTION_KEY, POPPER_CONTENT_INJECTION_KEY } from './tokens.mjs';\nimport { usePopperContentProps } from './popper.mjs';\nimport { buildPopperOptions, unwrapMeasurableEl } from './utils.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwPopperContent\",\n  props: usePopperContentProps,\n  emits: [\"mouseenter\", \"mouseleave\"],\n  setup(props) {\n    const {\n      triggerRef,\n      popperInstanceRef,\n      contentRef\n    } = inject(POPPER_INJECTION_KEY, void 0);\n    const {\n      nextZIndex\n    } = useZIndex();\n    const ns = useNamespace(\"popper\");\n    const popperContentRef = ref(null);\n    const arrowRef = ref(null);\n    const arrowOffset = ref();\n    provide(POPPER_CONTENT_INJECTION_KEY, {\n      arrowRef,\n      arrowOffset\n    });\n    const contentZIndex = ref(props.zIndex || nextZIndex());\n    const contentStyle = computed(() => [{\n      zIndex: unref(contentZIndex)\n    }, props.popperStyle]);\n    const contentClass = computed(() => [ns.b(), ns.is(\"pure\", props.pure), ns.is(props.effect), props.popperClass]);\n    const createPopperInstance = ({\n      referenceEl,\n      popperContentEl,\n      arrowEl\n    }) => {\n      const options = buildPopperOptions(props, {\n        arrowEl,\n        arrowOffset: unref(arrowOffset)\n      });\n      return createPopper(referenceEl, popperContentEl, options);\n    };\n    const updatePopper = () => {\n      var _a;\n      (_a = unref(popperInstanceRef)) == null ? void 0 : _a.update();\n      contentZIndex.value = props.zIndex || nextZIndex();\n    };\n    onMounted(() => {\n      let updateHandle;\n      watch(() => unwrapMeasurableEl(props.referenceEl) || unref(triggerRef), val => {\n        var _a;\n        updateHandle == null ? void 0 : updateHandle();\n        if (val) {\n          (_a = popperInstanceRef.value) == null ? void 0 : _a.destroy();\n          const popperContentEl = unref(popperContentRef);\n          contentRef.value = popperContentEl;\n          const arrowEl = unref(arrowRef);\n          const newInstance = createPopperInstance({\n            referenceEl: val,\n            popperContentEl: unref(popperContentRef),\n            arrowEl\n          });\n          popperInstanceRef.value = newInstance;\n          updateHandle = watch(() => val.getBoundingClientRect(), () => {\n            updatePopper();\n          }, {\n            immediate: true\n          });\n        } else {\n          popperInstanceRef.value = null;\n        }\n      }, {\n        immediate: true\n      });\n      watch(() => buildPopperOptions(props, {\n        arrowEl: unref(arrowRef),\n        arrowOffset: unref(arrowOffset)\n      }), option => {\n        var _a;\n        return (_a = popperInstanceRef.value) == null ? void 0 : _a.setOptions(option);\n      });\n    });\n    return {\n      ns,\n      popperContentRef,\n      popperInstanceRef,\n      contentStyle,\n      contentClass,\n      updatePopper\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"popperContentRef\",\n    style: normalizeStyle(_ctx.contentStyle),\n    class: normalizeClass(_ctx.contentClass),\n    role: \"tooltip\",\n    onMouseenter: _cache[0] || (_cache[0] = e => _ctx.$emit(\"mouseenter\", e)),\n    onMouseleave: _cache[1] || (_cache[1] = e => _ctx.$emit(\"mouseleave\", e))\n  }, [renderSlot(_ctx.$slots, \"default\")], 38);\n}\nvar TwPopperContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { TwPopperContent as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","usePopperContentProps","emits","setup","triggerRef","popperInstanceRef","contentRef","inject","POPPER_INJECTION_KEY","nextZIndex","useZIndex","ns","useNamespace","popperContentRef","ref","arrowRef","arrowOffset","provide","POPPER_CONTENT_INJECTION_KEY","contentZIndex","zIndex","contentStyle","computed","unref","popperStyle","contentClass","b","is","pure","effect","popperClass","createPopperInstance","referenceEl","popperContentEl","arrowEl","options","buildPopperOptions","createPopper","updatePopper","_a","update","value","onMounted","updateHandle","watch","unwrapMeasurableEl","val","destroy","newInstance","getBoundingClientRect","immediate","option","setOptions","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","class","normalizeClass"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/popper/src/content.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"popperContentRef\"\n    :style=\"contentStyle\"\n    :class=\"contentClass\"\n    role=\"tooltip\"\n    @mouseenter=\"(e) => $emit('mouseenter', e)\"\n    @mouseleave=\"(e) => $emit('mouseleave', e)\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  ref,\n  inject,\n  provide,\n  unref,\n  onMounted,\n  watch,\n} from 'vue'\nimport { createPopper } from '@popperjs/core'\nimport { useZIndex, useNamespace } from '@tw-element/hooks'\nimport { POPPER_INJECTION_KEY, POPPER_CONTENT_INJECTION_KEY } from './tokens'\nimport { usePopperContentProps } from './popper'\nimport { buildPopperOptions, unwrapMeasurableEl } from './utils'\n\nexport default defineComponent({\n  name: 'TwPopperContent',\n  props: usePopperContentProps,\n  emits: ['mouseenter', 'mouseleave'],\n  setup(props) {\n    const { triggerRef, popperInstanceRef, contentRef } = inject(\n      POPPER_INJECTION_KEY,\n      undefined\n    )!\n    const { nextZIndex } = useZIndex()\n    const ns = useNamespace('popper')\n    const popperContentRef = ref<HTMLElement | null>(null)\n    const arrowRef = ref<HTMLElement | null>(null)\n    const arrowOffset = ref<number>()\n    provide(POPPER_CONTENT_INJECTION_KEY, {\n      arrowRef,\n      arrowOffset,\n    })\n    const contentZIndex = ref(props.zIndex || nextZIndex())\n\n    const contentStyle = computed(\n      () => [{ zIndex: unref(contentZIndex) }, props.popperStyle] as any\n    )\n\n    const contentClass = computed(() => [\n      ns.b(),\n      ns.is('pure', props.pure),\n      ns.is(props.effect),\n      props.popperClass,\n    ])\n\n    const createPopperInstance = ({\n      referenceEl,\n      popperContentEl,\n      arrowEl,\n    }) => {\n      const options = buildPopperOptions(props, {\n        arrowEl,\n        arrowOffset: unref(arrowOffset),\n      })\n\n      return createPopper(referenceEl, popperContentEl, options)\n    }\n\n    const updatePopper = () => {\n      unref(popperInstanceRef)?.update()\n      contentZIndex.value = props.zIndex || nextZIndex()\n    }\n\n    onMounted(() => {\n      let updateHandle: ReturnType<typeof watch>\n      watch(\n        () => unwrapMeasurableEl(props.referenceEl) || unref(triggerRef),\n        (val) => {\n          updateHandle?.()\n          if (val) {\n            popperInstanceRef.value?.destroy()\n            const popperContentEl = unref(popperContentRef)!\n            contentRef.value = popperContentEl\n            const arrowEl = unref(arrowRef)\n\n            const newInstance = createPopperInstance({\n              referenceEl: val,\n              popperContentEl: unref(popperContentRef)!,\n              arrowEl,\n            })\n            popperInstanceRef.value = newInstance\n\n            updateHandle = watch(\n              () => val!.getBoundingClientRect(),\n              () => {\n                updatePopper()\n              },\n              {\n                immediate: true,\n              }\n            )\n          } else {\n            popperInstanceRef.value = null\n          }\n        },\n        {\n          immediate: true,\n        }\n      )\n\n      watch(\n        () =>\n          buildPopperOptions(props, {\n            arrowEl: unref(arrowRef),\n            arrowOffset: unref(arrowOffset),\n          }),\n        (option) => popperInstanceRef.value?.setOptions(option)\n      )\n    })\n\n    return {\n      ns,\n      popperContentRef,\n      popperInstanceRef,\n      contentStyle,\n      contentClass,\n      updatePopper,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}