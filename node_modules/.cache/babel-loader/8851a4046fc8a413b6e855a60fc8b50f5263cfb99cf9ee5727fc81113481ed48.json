{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, withDirectives, vModelCheckbox, normalizeStyle, renderSlot, createTextVNode, toDisplayString, createCommentVNode } from 'vue';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { useCheckboxProps, useCheckbox, useCheckboxGroup } from './useCheckbox.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwCheckboxButton\",\n  props: useCheckboxProps,\n  emits: [UPDATE_MODEL_EVENT, \"change\"],\n  setup(props) {\n    const {\n      focus,\n      isChecked,\n      isDisabled,\n      size,\n      model,\n      handleChange\n    } = useCheckbox(props);\n    const {\n      checkboxGroup\n    } = useCheckboxGroup();\n    const ns = useNamespace(\"checkbox\");\n    const activeStyle = computed(() => {\n      var _a, _b, _c, _d;\n      const fillValue = (_b = (_a = checkboxGroup == null ? void 0 : checkboxGroup.fill) == null ? void 0 : _a.value) != null ? _b : \"\";\n      return {\n        backgroundColor: fillValue,\n        borderColor: fillValue,\n        color: (_d = (_c = checkboxGroup == null ? void 0 : checkboxGroup.textColor) == null ? void 0 : _c.value) != null ? _d : \"\",\n        boxShadow: fillValue ? `-1px 0 0 0 ${fillValue}` : null\n      };\n    });\n    return {\n      focus,\n      isChecked,\n      isDisabled,\n      model,\n      handleChange,\n      activeStyle,\n      size,\n      ns\n    };\n  }\n});\nconst _hoisted_1 = [\"aria-checked\", \"aria-disabled\"];\nconst _hoisted_2 = [\"name\", \"tabindex\", \"disabled\", \"true-value\", \"false-value\"];\nconst _hoisted_3 = [\"name\", \"tabindex\", \"disabled\", \"value\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"label\", {\n    class: normalizeClass([_ctx.ns.b(\"button\"), _ctx.ns.bm(\"button\", _ctx.size), _ctx.ns.is(\"disabled\", _ctx.isDisabled), _ctx.ns.is(\"checked\", _ctx.isChecked), _ctx.ns.is(\"focus\", _ctx.focus)]),\n    role: \"checkbox\",\n    \"aria-checked\": _ctx.isChecked,\n    \"aria-disabled\": _ctx.isDisabled\n  }, [_ctx.trueLabel || _ctx.falseLabel ? withDirectives((openBlock(), createElementBlock(\"input\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.model = $event),\n    class: normalizeClass(_ctx.ns.be(\"button\", \"original\")),\n    type: \"checkbox\",\n    name: _ctx.name,\n    tabindex: _ctx.tabindex,\n    disabled: _ctx.isDisabled,\n    \"true-value\": _ctx.trueLabel,\n    \"false-value\": _ctx.falseLabel,\n    onChange: _cache[1] || (_cache[1] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n    onFocus: _cache[2] || (_cache[2] = $event => _ctx.focus = true),\n    onBlur: _cache[3] || (_cache[3] = $event => _ctx.focus = false)\n  }, null, 42, _hoisted_2)), [[vModelCheckbox, _ctx.model]]) : withDirectives((openBlock(), createElementBlock(\"input\", {\n    key: 1,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.model = $event),\n    class: normalizeClass(_ctx.ns.be(\"button\", \"original\")),\n    type: \"checkbox\",\n    name: _ctx.name,\n    tabindex: _ctx.tabindex,\n    disabled: _ctx.isDisabled,\n    value: _ctx.label,\n    onChange: _cache[5] || (_cache[5] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n    onFocus: _cache[6] || (_cache[6] = $event => _ctx.focus = true),\n    onBlur: _cache[7] || (_cache[7] = $event => _ctx.focus = false)\n  }, null, 42, _hoisted_3)), [[vModelCheckbox, _ctx.model]]), _ctx.$slots.default || _ctx.label ? (openBlock(), createElementBlock(\"span\", {\n    key: 2,\n    class: normalizeClass(_ctx.ns.be(\"button\", \"inner\")),\n    style: normalizeStyle(_ctx.isChecked ? _ctx.activeStyle : null)\n  }, [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(_ctx.label), 1)])], 6)) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\nvar CheckboxButton = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { CheckboxButton as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","useCheckboxProps","emits","UPDATE_MODEL_EVENT","setup","focus","isChecked","isDisabled","size","model","handleChange","useCheckbox","checkboxGroup","useCheckboxGroup","ns","useNamespace","activeStyle","computed","_a","_b","_c","_d","fillValue","fill","value","backgroundColor","borderColor","color","textColor","boxShadow","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","class","normalizeClass","b","bm","is","role","key","$event","be","type","tabindex","disabled","trueLabel","falseLabel","onChange","args","onFocus","_hoisted_2","label","_hoisted_3","renderSlot","$slots"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/checkbox/src/checkbox-button.vue"],"sourcesContent":["<template>\n  <label\n    :class=\"[\n      ns.b('button'),\n      ns.bm('button', size),\n      ns.is('disabled', isDisabled),\n      ns.is('checked', isChecked),\n      ns.is('focus', focus),\n    ]\"\n    role=\"checkbox\"\n    :aria-checked=\"isChecked\"\n    :aria-disabled=\"isDisabled\"\n  >\n    <input\n      v-if=\"trueLabel || falseLabel\"\n      v-model=\"model\"\n      :class=\"ns.be('button', 'original')\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :tabindex=\"tabindex\"\n      :disabled=\"isDisabled\"\n      :true-value=\"trueLabel\"\n      :false-value=\"falseLabel\"\n      @change=\"handleChange\"\n      @focus=\"focus = true\"\n      @blur=\"focus = false\"\n    />\n    <input\n      v-else\n      v-model=\"model\"\n      :class=\"ns.be('button', 'original')\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :tabindex=\"tabindex\"\n      :disabled=\"isDisabled\"\n      :value=\"label\"\n      @change=\"handleChange\"\n      @focus=\"focus = true\"\n      @blur=\"focus = false\"\n    />\n\n    <span\n      v-if=\"$slots.default || label\"\n      :class=\"ns.be('button', 'inner')\"\n      :style=\"isChecked ? activeStyle : null\"\n    >\n      <slot>{{ label }}</slot>\n    </span>\n  </label>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { UPDATE_MODEL_EVENT } from '@tw-element/constants'\nimport { useNamespace } from '@tw-element/hooks'\nimport { useCheckbox, useCheckboxGroup, useCheckboxProps } from './useCheckbox'\n\nexport default defineComponent({\n  name: 'TwCheckboxButton',\n  props: useCheckboxProps,\n  emits: [UPDATE_MODEL_EVENT, 'change'],\n  setup(props) {\n    const { focus, isChecked, isDisabled, size, model, handleChange } =\n      useCheckbox(props)\n    const { checkboxGroup } = useCheckboxGroup()\n    const ns = useNamespace('checkbox')\n\n    const activeStyle = computed(() => {\n      const fillValue = checkboxGroup?.fill?.value ?? ''\n      return {\n        backgroundColor: fillValue,\n        borderColor: fillValue,\n        color: checkboxGroup?.textColor?.value ?? '',\n        boxShadow: fillValue ? `-1px 0 0 0 ${fillValue}` : null,\n      }\n    })\n\n    return {\n      focus,\n      isChecked,\n      isDisabled,\n      model,\n      handleChange,\n      activeStyle,\n      size,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}