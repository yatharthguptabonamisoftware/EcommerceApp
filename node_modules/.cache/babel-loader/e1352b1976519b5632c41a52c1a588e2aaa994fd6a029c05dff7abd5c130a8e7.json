{"ast":null,"code":"import { defineComponent, inject, ref, computed, nextTick, watch, onMounted, onBeforeUnmount, resolveComponent, resolveDirective, openBlock, createBlock, withCtx, withDirectives, createElementBlock, normalizeClass, normalizeStyle, createVNode, withModifiers, Fragment, renderList, createElementVNode, toDisplayString, withKeys, vModelText, createCommentVNode, vShow, renderSlot } from 'vue';\nimport { isPromise } from '@vue/shared';\nimport { debounce } from 'lodash-unified';\nimport { isClient } from '@vueuse/core';\nimport _CascaderPanel from '../../cascader-panel/index.mjs';\nimport { TwInput } from '../../input/index.mjs';\nimport { TwTooltip } from '../../tooltip/index.mjs';\nimport '../../popper/index.mjs';\nimport { TwScrollbar } from '../../scrollbar/index.mjs';\nimport { TwTag } from '../../tag/index.mjs';\nimport { TwIcon } from '../../icon/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { CircleClose, Check, ArrowDown } from '@element-plus/icons-vue';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { CommonProps } from '../../cascader-panel/src/config.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useDeprecateAppendToBody } from '../../popper/src/deprecation.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { twFormKey, twFormItemKey } from '../../../tokens/form.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { isKorean } from '../../../utils/i18n.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { focusNode, getSibling } from '../../../utils/dom/aria.mjs';\nimport { addResizeListener, removeResizeListener } from '../../../utils/dom/resize-event.mjs';\nconst DEFAULT_INPUT_HEIGHT = 40;\nconst INPUT_HEIGHT_MAP = {\n  large: 36,\n  default: 32,\n  small: 28\n};\nconst popperOptions = {\n  modifiers: [{\n    name: \"arrowPosition\",\n    enabled: true,\n    phase: \"main\",\n    fn: ({\n      state\n    }) => {\n      const {\n        modifiersData,\n        placement\n      } = state;\n      if ([\"right\", \"left\", \"bottom\", \"top\"].includes(placement)) return;\n      modifiersData.arrow.x = 35;\n    },\n    requires: [\"arrow\"]\n  }]\n};\nconst COMPONENT_NAME = \"TwCascader\";\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    TwCascaderPanel: _CascaderPanel,\n    TwInput,\n    ElTooltip: TwTooltip,\n    TwScrollbar,\n    TwTag,\n    TwIcon,\n    CircleClose,\n    Check,\n    ArrowDown\n  },\n  directives: {\n    Clickoutside: ClickOutside\n  },\n  props: {\n    ...CommonProps,\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    placeholder: {\n      type: String\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    filterMethod: {\n      type: Function,\n      default: (node, keyword) => node.text.includes(keyword)\n    },\n    separator: {\n      type: String,\n      default: \" / \"\n    },\n    showAllLevels: {\n      type: Boolean,\n      default: true\n    },\n    collapseTags: Boolean,\n    debounce: {\n      type: Number,\n      default: 300\n    },\n    beforeFilter: {\n      type: Function,\n      default: () => true\n    },\n    popperClass: {\n      type: String,\n      default: \"\"\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: void 0\n    },\n    teleported: useTooltipContentProps.teleported\n  },\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"focus\", \"blur\", \"visible-change\", \"expand-change\", \"remove-tag\"],\n  setup(props, {\n    emit\n  }) {\n    let inputInitialHeight = 0;\n    let pressDeleteCount = 0;\n    const {\n      compatTeleported\n    } = useDeprecateAppendToBody(COMPONENT_NAME, \"popperAppendToBody\");\n    const {\n      t\n    } = useLocale();\n    const TwForm = inject(twFormKey, {});\n    const TwFormItem = inject(twFormItemKey, {});\n    const tooltipRef = ref(null);\n    const input = ref(null);\n    const tagWrapper = ref(null);\n    const panel = ref(null);\n    const suggestionPanel = ref(null);\n    const popperVisible = ref(false);\n    const inputHover = ref(false);\n    const filtering = ref(false);\n    const inputValue = ref(\"\");\n    const searchInputValue = ref(\"\");\n    const presentTags = ref([]);\n    const suggestions = ref([]);\n    const isOnComposition = ref(false);\n    const isDisabled = computed(() => props.disabled || TwForm.disabled);\n    const inputPlaceholder = computed(() => props.placeholder || t(\"el.cascader.placeholder\"));\n    const realSize = useSize();\n    const tagSize = computed(() => [\"small\"].includes(realSize.value) ? \"small\" : \"default\");\n    const multiple = computed(() => !!props.props.multiple);\n    const readonly = computed(() => !props.filterable || multiple.value);\n    const searchKeyword = computed(() => multiple.value ? searchInputValue.value : inputValue.value);\n    const checkedNodes = computed(() => {\n      var _a;\n      return ((_a = panel.value) == null ? void 0 : _a.checkedNodes) || [];\n    });\n    const clearBtnVisible = computed(() => {\n      if (!props.clearable || isDisabled.value || filtering.value || !inputHover.value) return false;\n      return !!checkedNodes.value.length;\n    });\n    const presentText = computed(() => {\n      const {\n        showAllLevels,\n        separator\n      } = props;\n      const nodes = checkedNodes.value;\n      return nodes.length ? multiple.value ? \" \" : nodes[0].calcText(showAllLevels, separator) : \"\";\n    });\n    const checkedValue = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(val) {\n        var _a;\n        emit(UPDATE_MODEL_EVENT, val);\n        emit(CHANGE_EVENT, val);\n        (_a = TwFormItem.validate) == null ? void 0 : _a.call(TwFormItem, \"change\");\n      }\n    });\n    const popperPaneRef = computed(() => {\n      var _a, _b;\n      return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const togglePopperVisible = visible => {\n      var _a, _b, _c;\n      if (isDisabled.value) return;\n      visible = visible != null ? visible : !popperVisible.value;\n      if (visible !== popperVisible.value) {\n        popperVisible.value = visible;\n        (_b = (_a = input.value) == null ? void 0 : _a.input) == null ? void 0 : _b.setAttribute(\"aria-expanded\", `${visible}`);\n        if (visible) {\n          updatePopperPosition();\n          nextTick((_c = panel.value) == null ? void 0 : _c.scrollToExpandingNode);\n        } else if (props.filterable) {\n          const {\n            value\n          } = presentText;\n          inputValue.value = value;\n          searchInputValue.value = value;\n        }\n        emit(\"visible-change\", visible);\n      }\n    };\n    const updatePopperPosition = () => {\n      nextTick(() => {\n        var _a;\n        (_a = tooltipRef.value) == null ? void 0 : _a.updatePopper();\n      });\n    };\n    const hideSuggestionPanel = () => {\n      filtering.value = false;\n    };\n    const genTag = node => {\n      const {\n        showAllLevels,\n        separator\n      } = props;\n      return {\n        node,\n        key: node.uid,\n        text: node.calcText(showAllLevels, separator),\n        hitState: false,\n        closable: !isDisabled.value && !node.isDisabled\n      };\n    };\n    const deleteTag = tag => {\n      var _a;\n      const node = tag.node;\n      node.doCheck(false);\n      (_a = panel.value) == null ? void 0 : _a.calculateCheckedValue();\n      emit(\"remove-tag\", node.valueByOption);\n    };\n    const calculatePresentTags = () => {\n      if (!multiple.value) return;\n      const nodes = checkedNodes.value;\n      const tags = [];\n      if (nodes.length) {\n        const [first, ...rest] = nodes;\n        const restCount = rest.length;\n        tags.push(genTag(first));\n        if (restCount) {\n          if (props.collapseTags) {\n            tags.push({\n              key: -1,\n              text: `+ ${restCount}`,\n              closable: false\n            });\n          } else {\n            rest.forEach(node => tags.push(genTag(node)));\n          }\n        }\n      }\n      presentTags.value = tags;\n    };\n    const calculateSuggestions = () => {\n      var _a, _b;\n      const {\n        filterMethod,\n        showAllLevels,\n        separator\n      } = props;\n      const res = (_b = (_a = panel.value) == null ? void 0 : _a.getFlattedNodes(!props.props.checkStrictly)) == null ? void 0 : _b.filter(node => {\n        if (node.isDisabled) return false;\n        node.calcText(showAllLevels, separator);\n        return filterMethod(node, searchKeyword.value);\n      });\n      if (multiple.value) {\n        presentTags.value.forEach(tag => {\n          tag.hitState = false;\n        });\n      }\n      filtering.value = true;\n      suggestions.value = res;\n      updatePopperPosition();\n    };\n    const focusFirstNode = () => {\n      var _a;\n      let firstNode;\n      if (filtering.value && suggestionPanel.value) {\n        firstNode = suggestionPanel.value.$el.querySelector(\".el-cascader__suggestion-item\");\n      } else {\n        firstNode = (_a = panel.value) == null ? void 0 : _a.$el.querySelector('.el-cascader-node[tabindex=\"-1\"]');\n      }\n      if (firstNode) {\n        firstNode.focus();\n        !filtering.value && firstNode.click();\n      }\n    };\n    const updateStyle = () => {\n      var _a, _b;\n      const inputInner = (_a = input.value) == null ? void 0 : _a.input;\n      const tagWrapperEl = tagWrapper.value;\n      const suggestionPanelEl = (_b = suggestionPanel.value) == null ? void 0 : _b.$el;\n      if (!isClient || !inputInner) return;\n      if (suggestionPanelEl) {\n        const suggestionList = suggestionPanelEl.querySelector(\".el-cascader__suggestion-list\");\n        suggestionList.style.minWidth = `${inputInner.offsetWidth}px`;\n      }\n      if (tagWrapperEl) {\n        const {\n          offsetHeight\n        } = tagWrapperEl;\n        const height = presentTags.value.length > 0 ? `${Math.max(offsetHeight + 6, inputInitialHeight)}px` : `${inputInitialHeight}px`;\n        inputInner.style.height = height;\n        updatePopperPosition();\n      }\n    };\n    const getCheckedNodes = leafOnly => {\n      var _a;\n      return (_a = panel.value) == null ? void 0 : _a.getCheckedNodes(leafOnly);\n    };\n    const handleExpandChange = value => {\n      updatePopperPosition();\n      emit(\"expand-change\", value);\n    };\n    const handleComposition = event => {\n      var _a;\n      const text = (_a = event.target) == null ? void 0 : _a.value;\n      if (event.type === \"compositionend\") {\n        isOnComposition.value = false;\n        nextTick(() => handleInput(text));\n      } else {\n        const lastCharacter = text[text.length - 1] || \"\";\n        isOnComposition.value = !isKorean(lastCharacter);\n      }\n    };\n    const handleKeyDown = e => {\n      if (isOnComposition.value) return;\n      switch (e.code) {\n        case EVENT_CODE.enter:\n          togglePopperVisible();\n          break;\n        case EVENT_CODE.down:\n          togglePopperVisible(true);\n          nextTick(focusFirstNode);\n          e.preventDefault();\n          break;\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false);\n          break;\n      }\n    };\n    const handleClear = () => {\n      var _a;\n      (_a = panel.value) == null ? void 0 : _a.clearCheckedNodes();\n      togglePopperVisible(false);\n    };\n    const handleSuggestionClick = node => {\n      var _a, _b;\n      const {\n        checked\n      } = node;\n      if (multiple.value) {\n        (_a = panel.value) == null ? void 0 : _a.handleCheckChange(node, !checked, false);\n      } else {\n        !checked && ((_b = panel.value) == null ? void 0 : _b.handleCheckChange(node, true, false));\n        togglePopperVisible(false);\n      }\n    };\n    const handleSuggestionKeyDown = e => {\n      const target = e.target;\n      const {\n        code\n      } = e;\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down:\n          {\n            const distance = code === EVENT_CODE.up ? -1 : 1;\n            focusNode(getSibling(target, distance, '.el-cascader__suggestion-item[tabindex=\"-1\"]'));\n            break;\n          }\n        case EVENT_CODE.enter:\n          target.click();\n          break;\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false);\n          break;\n      }\n    };\n    const handleDelete = () => {\n      const tags = presentTags.value;\n      const lastTag = tags[tags.length - 1];\n      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1;\n      if (!lastTag || !pressDeleteCount) return;\n      if (lastTag.hitState) {\n        deleteTag(lastTag);\n      } else {\n        lastTag.hitState = true;\n      }\n    };\n    const handleFilter = debounce(() => {\n      const {\n        value\n      } = searchKeyword;\n      if (!value) return;\n      const passed = props.beforeFilter(value);\n      if (isPromise(passed)) {\n        passed.then(calculateSuggestions).catch(() => {});\n      } else if (passed !== false) {\n        calculateSuggestions();\n      } else {\n        hideSuggestionPanel();\n      }\n    }, props.debounce);\n    const handleInput = (val, e) => {\n      !popperVisible.value && togglePopperVisible(true);\n      if (e == null ? void 0 : e.isComposing) return;\n      val ? handleFilter() : hideSuggestionPanel();\n    };\n    watch(filtering, updatePopperPosition);\n    watch([checkedNodes, isDisabled], calculatePresentTags);\n    watch(presentTags, () => {\n      nextTick(() => updateStyle());\n    });\n    watch(presentText, val => inputValue.value = val, {\n      immediate: true\n    });\n    onMounted(() => {\n      var _a;\n      const inputEl = (_a = input.value) == null ? void 0 : _a.$el;\n      inputInitialHeight = (inputEl == null ? void 0 : inputEl.offsetHeight) || INPUT_HEIGHT_MAP[realSize.value] || DEFAULT_INPUT_HEIGHT;\n      addResizeListener(inputEl, updateStyle);\n    });\n    onBeforeUnmount(() => {\n      var _a;\n      removeResizeListener((_a = input.value) == null ? void 0 : _a.$el, updateStyle);\n    });\n    return {\n      popperOptions,\n      tooltipRef,\n      popperPaneRef,\n      input,\n      tagWrapper,\n      panel,\n      suggestionPanel,\n      popperVisible,\n      inputHover,\n      inputPlaceholder,\n      filtering,\n      presentText,\n      checkedValue,\n      inputValue,\n      searchInputValue,\n      presentTags,\n      suggestions,\n      isDisabled,\n      isOnComposition,\n      realSize,\n      tagSize,\n      multiple,\n      readonly,\n      clearBtnVisible,\n      compatTeleported,\n      t,\n      togglePopperVisible,\n      hideSuggestionPanel,\n      deleteTag,\n      focusFirstNode,\n      getCheckedNodes,\n      handleExpandChange,\n      handleKeyDown,\n      handleComposition,\n      handleClear,\n      handleSuggestionClick,\n      handleSuggestionKeyDown,\n      handleDelete,\n      handleInput\n    };\n  }\n});\nconst _hoisted_1 = {\n  key: 0,\n  ref: \"tagWrapper\",\n  class: \"el-cascader__tags\"\n};\nconst _hoisted_2 = [\"placeholder\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"el-cascader__empty-text\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_circle_close = resolveComponent(\"circle-close\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_arrow_down = resolveComponent(\"arrow-down\");\n  const _component_el_input = resolveComponent(\"el-input\");\n  const _component_el_tag = resolveComponent(\"el-tag\");\n  const _component_el_cascader_panel = resolveComponent(\"el-cascader-panel\");\n  const _component_check = resolveComponent(\"check\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  const _directive_clickoutside = resolveDirective(\"clickoutside\");\n  return openBlock(), createBlock(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.popperVisible,\n    \"onUpdate:visible\": _cache[17] || (_cache[17] = $event => _ctx.popperVisible = $event),\n    teleported: _ctx.compatTeleported,\n    \"popper-class\": `el-cascader__dropdown ${_ctx.popperClass}`,\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"bottom\", \"top-start\", \"top\", \"right\", \"left\"],\n    \"stop-popper-mouse-event\": false,\n    \"gpu-acceleration\": false,\n    placement: \"bottom-start\",\n    transition: \"el-zoom-in-top\",\n    effect: \"light\",\n    pure: \"\",\n    persistent: \"\",\n    onHide: _ctx.hideSuggestionPanel\n  }, {\n    default: withCtx(() => [withDirectives((openBlock(), createElementBlock(\"div\", {\n      class: normalizeClass([\"el-cascader\", _ctx.realSize && `el-cascader--${_ctx.realSize}`, {\n        \"is-disabled\": _ctx.isDisabled\n      }, _ctx.$attrs.class]),\n      style: normalizeStyle(_ctx.$attrs.style),\n      onClick: _cache[11] || (_cache[11] = () => _ctx.togglePopperVisible(_ctx.readonly ? void 0 : true)),\n      onKeydown: _cache[12] || (_cache[12] = (...args) => _ctx.handleKeyDown && _ctx.handleKeyDown(...args)),\n      onMouseenter: _cache[13] || (_cache[13] = $event => _ctx.inputHover = true),\n      onMouseleave: _cache[14] || (_cache[14] = $event => _ctx.inputHover = false)\n    }, [createVNode(_component_el_input, {\n      ref: \"input\",\n      modelValue: _ctx.inputValue,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.inputValue = $event),\n      placeholder: _ctx.inputPlaceholder,\n      readonly: _ctx.readonly,\n      disabled: _ctx.isDisabled,\n      \"validate-event\": false,\n      size: _ctx.realSize,\n      class: normalizeClass({\n        \"is-focus\": _ctx.popperVisible\n      }),\n      onCompositionstart: _ctx.handleComposition,\n      onCompositionupdate: _ctx.handleComposition,\n      onCompositionend: _ctx.handleComposition,\n      onFocus: _cache[2] || (_cache[2] = e => _ctx.$emit(\"focus\", e)),\n      onBlur: _cache[3] || (_cache[3] = e => _ctx.$emit(\"blur\", e)),\n      onInput: _ctx.handleInput\n    }, {\n      suffix: withCtx(() => [_ctx.clearBtnVisible ? (openBlock(), createBlock(_component_el_icon, {\n        key: \"clear\",\n        class: \"el-input__icon icon-circle-close\",\n        onClick: withModifiers(_ctx.handleClear, [\"stop\"])\n      }, {\n        default: withCtx(() => [createVNode(_component_circle_close)]),\n        _: 1\n      }, 8, [\"onClick\"])) : (openBlock(), createBlock(_component_el_icon, {\n        key: \"arrow-down\",\n        class: normalizeClass([\"el-input__icon\", \"icon-arrow-down\", _ctx.popperVisible && \"is-reverse\"]),\n        onClick: _cache[0] || (_cache[0] = withModifiers($event => _ctx.togglePopperVisible(), [\"stop\"]))\n      }, {\n        default: withCtx(() => [createVNode(_component_arrow_down)]),\n        _: 1\n      }, 8, [\"class\"]))]),\n      _: 1\n    }, 8, [\"modelValue\", \"placeholder\", \"readonly\", \"disabled\", \"size\", \"class\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onInput\"]), _ctx.multiple ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.presentTags, tag => {\n      return openBlock(), createBlock(_component_el_tag, {\n        key: tag.key,\n        type: \"info\",\n        size: _ctx.tagSize,\n        hit: tag.hitState,\n        closable: tag.closable,\n        \"disable-transitions\": \"\",\n        onClose: $event => _ctx.deleteTag(tag)\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", null, toDisplayString(tag.text), 1)]),\n        _: 2\n      }, 1032, [\"size\", \"hit\", \"closable\", \"onClose\"]);\n    }), 128)), _ctx.filterable && !_ctx.isDisabled ? withDirectives((openBlock(), createElementBlock(\"input\", {\n      key: 0,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.searchInputValue = $event),\n      type: \"text\",\n      class: \"el-cascader__search-input\",\n      placeholder: _ctx.presentText ? \"\" : _ctx.inputPlaceholder,\n      onInput: _cache[5] || (_cache[5] = e => _ctx.handleInput(_ctx.searchInputValue, e)),\n      onClick: _cache[6] || (_cache[6] = withModifiers($event => _ctx.togglePopperVisible(true), [\"stop\"])),\n      onKeydown: _cache[7] || (_cache[7] = withKeys((...args) => _ctx.handleDelete && _ctx.handleDelete(...args), [\"delete\"])),\n      onCompositionstart: _cache[8] || (_cache[8] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onCompositionupdate: _cache[9] || (_cache[9] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onCompositionend: _cache[10] || (_cache[10] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args))\n    }, null, 40, _hoisted_2)), [[vModelText, _ctx.searchInputValue]]) : createCommentVNode(\"v-if\", true)], 512)) : createCommentVNode(\"v-if\", true)], 38)), [[_directive_clickoutside, () => _ctx.togglePopperVisible(false), _ctx.popperPaneRef]])]),\n    content: withCtx(() => [withDirectives(createVNode(_component_el_cascader_panel, {\n      ref: \"panel\",\n      modelValue: _ctx.checkedValue,\n      \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => _ctx.checkedValue = $event),\n      options: _ctx.options,\n      props: _ctx.props,\n      border: false,\n      \"render-label\": _ctx.$slots.default,\n      onExpandChange: _ctx.handleExpandChange,\n      onClose: _cache[16] || (_cache[16] = $event => _ctx.$nextTick(() => _ctx.togglePopperVisible(false)))\n    }, null, 8, [\"modelValue\", \"options\", \"props\", \"render-label\", \"onExpandChange\"]), [[vShow, !_ctx.filtering]]), _ctx.filterable ? withDirectives((openBlock(), createBlock(_component_el_scrollbar, {\n      key: 0,\n      ref: \"suggestionPanel\",\n      tag: \"ul\",\n      class: \"el-cascader__suggestion-panel\",\n      \"view-class\": \"el-cascader__suggestion-list\",\n      onKeydown: _ctx.handleSuggestionKeyDown\n    }, {\n      default: withCtx(() => [_ctx.suggestions.length ? (openBlock(true), createElementBlock(Fragment, {\n        key: 0\n      }, renderList(_ctx.suggestions, item => {\n        return openBlock(), createElementBlock(\"li\", {\n          key: item.uid,\n          class: normalizeClass([\"el-cascader__suggestion-item\", item.checked && \"is-checked\"]),\n          tabindex: -1,\n          onClick: $event => _ctx.handleSuggestionClick(item)\n        }, [createElementVNode(\"span\", null, toDisplayString(item.text), 1), item.checked ? (openBlock(), createBlock(_component_el_icon, {\n          key: 0\n        }, {\n          default: withCtx(() => [createVNode(_component_check)]),\n          _: 1\n        })) : createCommentVNode(\"v-if\", true)], 10, _hoisted_3);\n      }), 128)) : renderSlot(_ctx.$slots, \"empty\", {\n        key: 1\n      }, () => [createElementVNode(\"li\", _hoisted_4, toDisplayString(_ctx.t(\"el.cascader.noMatch\")), 1)])]),\n      _: 3\n    }, 8, [\"onKeydown\"])), [[vShow, _ctx.filtering]]) : createCommentVNode(\"v-if\", true)]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-options\", \"onHide\"]);\n}\nvar Cascader = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Cascader as default };","map":{"version":3,"names":["DEFAULT_INPUT_HEIGHT","INPUT_HEIGHT_MAP","large","default","small","popperOptions","modifiers","name","enabled","phase","fn","state","modifiersData","placement","includes","arrow","x","requires","COMPONENT_NAME","_sfc_main","defineComponent","components","TwCascaderPanel","_CascaderPanel","TwInput","ElTooltip","TwTooltip","TwScrollbar","TwTag","TwIcon","CircleClose","Check","ArrowDown","directives","Clickoutside","ClickOutside","props","CommonProps","size","type","String","validator","isValidComponentSize","placeholder","disabled","Boolean","clearable","filterable","filterMethod","Function","node","keyword","text","separator","showAllLevels","collapseTags","debounce","Number","beforeFilter","popperClass","popperAppendToBody","teleported","useTooltipContentProps","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","inputInitialHeight","pressDeleteCount","compatTeleported","useDeprecateAppendToBody","t","useLocale","TwForm","inject","twFormKey","TwFormItem","twFormItemKey","tooltipRef","ref","input","tagWrapper","panel","suggestionPanel","popperVisible","inputHover","filtering","inputValue","searchInputValue","presentTags","suggestions","isOnComposition","isDisabled","computed","inputPlaceholder","realSize","useSize","tagSize","value","multiple","readonly","searchKeyword","checkedNodes","_a","clearBtnVisible","length","presentText","nodes","calcText","checkedValue","get","modelValue","set","val","validate","call","popperPaneRef","_b","popperRef","contentRef","togglePopperVisible","visible","_c","setAttribute","updatePopperPosition","nextTick","scrollToExpandingNode","updatePopper","hideSuggestionPanel","genTag","key","uid","hitState","closable","deleteTag","tag","doCheck","calculateCheckedValue","valueByOption","calculatePresentTags","tags","first","rest","restCount","push","forEach","calculateSuggestions","res","getFlattedNodes","checkStrictly","filter","focusFirstNode","firstNode","$el","querySelector","focus","click","updateStyle","inputInner","tagWrapperEl","suggestionPanelEl","isClient","suggestionList","style","minWidth","offsetWidth","offsetHeight","height","Math","max","getCheckedNodes","leafOnly","handleExpandChange","handleComposition","event","target","handleInput","lastCharacter","isKorean","handleKeyDown","e","code","EVENT_CODE","enter","down","preventDefault","esc","tab","handleClear","clearCheckedNodes","handleSuggestionClick","checked","handleCheckChange","handleSuggestionKeyDown","up","distance","focusNode","getSibling","handleDelete","lastTag","handleFilter","passed","isPromise","then","catch","isComposing","watch","immediate","onMounted","inputEl","addResizeListener","onBeforeUnmount","removeResizeListener","class","_hoisted_3","_hoisted_4","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_circle_close","resolveComponent","_component_el_scrollbar","_component_el_tooltip","_directive_clickoutside","resolveDirective","openBlock","createBlock","$event","transition","effect","persistent","onHide","withDirectives","createElementBlock","normalizeClass","$attrs","normalizeStyle","onClick","onKeydown","args","onMouseenter","onMouseleave","createVNode","_component_el_input","onCompositionupdate","onCompositionend","$emit","onInput","_","_component_el_icon","withModifiers","withCtx","_hoisted_1","_component_el_tag","hit","onClose","withKeys","onCompositionstart","_hoisted_2","vModelText","createCommentVNode","content","_component_el_cascader_panel","options","$slots","onExpandChange","item","tabindex"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/cascader/src/index.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    v-model:visible=\"popperVisible\"\n    :teleported=\"compatTeleported\"\n    :popper-class=\"`el-cascader__dropdown ${popperClass}`\"\n    :popper-options=\"popperOptions\"\n    :fallback-placements=\"[\n      'bottom-start',\n      'bottom',\n      'top-start',\n      'top',\n      'right',\n      'left',\n    ]\"\n    :stop-popper-mouse-event=\"false\"\n    :gpu-acceleration=\"false\"\n    placement=\"bottom-start\"\n    transition=\"el-zoom-in-top\"\n    effect=\"light\"\n    pure\n    persistent\n    @hide=\"hideSuggestionPanel\"\n  >\n    <template #default>\n      <div\n        v-clickoutside:[popperPaneRef]=\"() => togglePopperVisible(false)\"\n        :class=\"[\n          'el-cascader',\n          realSize && `el-cascader--${realSize}`,\n          { 'is-disabled': isDisabled },\n          $attrs.class,\n        ]\"\n        :style=\"$attrs.style\"\n        @click=\"() => togglePopperVisible(readonly ? undefined : true)\"\n        @keydown=\"handleKeyDown\"\n        @mouseenter=\"inputHover = true\"\n        @mouseleave=\"inputHover = false\"\n      >\n        <el-input\n          ref=\"input\"\n          v-model=\"inputValue\"\n          :placeholder=\"inputPlaceholder\"\n          :readonly=\"readonly\"\n          :disabled=\"isDisabled\"\n          :validate-event=\"false\"\n          :size=\"realSize\"\n          :class=\"{ 'is-focus': popperVisible }\"\n          @compositionstart=\"handleComposition\"\n          @compositionupdate=\"handleComposition\"\n          @compositionend=\"handleComposition\"\n          @focus=\"(e) => $emit('focus', e)\"\n          @blur=\"(e) => $emit('blur', e)\"\n          @input=\"handleInput\"\n        >\n          <template #suffix>\n            <el-icon\n              v-if=\"clearBtnVisible\"\n              key=\"clear\"\n              class=\"el-input__icon icon-circle-close\"\n              @click.stop=\"handleClear\"\n            >\n              <circle-close />\n            </el-icon>\n            <el-icon\n              v-else\n              key=\"arrow-down\"\n              :class=\"[\n                'el-input__icon',\n                'icon-arrow-down',\n                popperVisible && 'is-reverse',\n              ]\"\n              @click.stop=\"togglePopperVisible()\"\n            >\n              <arrow-down />\n            </el-icon>\n          </template>\n        </el-input>\n\n        <div v-if=\"multiple\" ref=\"tagWrapper\" class=\"el-cascader__tags\">\n          <el-tag\n            v-for=\"tag in presentTags\"\n            :key=\"tag.key\"\n            type=\"info\"\n            :size=\"tagSize\"\n            :hit=\"tag.hitState\"\n            :closable=\"tag.closable\"\n            disable-transitions\n            @close=\"deleteTag(tag)\"\n          >\n            <span>{{ tag.text }}</span>\n          </el-tag>\n          <input\n            v-if=\"filterable && !isDisabled\"\n            v-model=\"searchInputValue\"\n            type=\"text\"\n            class=\"el-cascader__search-input\"\n            :placeholder=\"presentText ? '' : inputPlaceholder\"\n            @input=\"(e) => handleInput(searchInputValue, e)\"\n            @click.stop=\"togglePopperVisible(true)\"\n            @keydown.delete=\"handleDelete\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <template #content>\n      <el-cascader-panel\n        v-show=\"!filtering\"\n        ref=\"panel\"\n        v-model=\"checkedValue\"\n        :options=\"options\"\n        :props=\"props\"\n        :border=\"false\"\n        :render-label=\"$slots.default\"\n        @expand-change=\"handleExpandChange\"\n        @close=\"$nextTick(() => togglePopperVisible(false))\"\n      />\n      <el-scrollbar\n        v-if=\"filterable\"\n        v-show=\"filtering\"\n        ref=\"suggestionPanel\"\n        tag=\"ul\"\n        class=\"el-cascader__suggestion-panel\"\n        view-class=\"el-cascader__suggestion-list\"\n        @keydown=\"handleSuggestionKeyDown\"\n      >\n        <template v-if=\"suggestions.length\">\n          <li\n            v-for=\"item in suggestions\"\n            :key=\"item.uid\"\n            :class=\"[\n              'el-cascader__suggestion-item',\n              item.checked && 'is-checked',\n            ]\"\n            :tabindex=\"-1\"\n            @click=\"handleSuggestionClick(item)\"\n          >\n            <span>{{ item.text }}</span>\n            <el-icon v-if=\"item.checked\"><check /></el-icon>\n          </li>\n        </template>\n        <slot v-else name=\"empty\">\n          <li class=\"el-cascader__empty-text\">\n            {{ t('el.cascader.noMatch') }}\n          </li>\n        </slot>\n      </el-scrollbar>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  onMounted,\n  onBeforeUnmount,\n  ref,\n  watch,\n} from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { debounce } from 'lodash-unified'\n\nimport { isClient } from '@vueuse/core'\nimport TwCascaderPanel, {\n  CommonProps,\n} from '@tw-element/components/cascader-panel'\nimport TwInput from '@tw-element/components/input'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@tw-element/components/tooltip'\nimport { useDeprecateAppendToBody } from '@tw-element/components/popper'\nimport TwScrollbar from '@tw-element/components/scrollbar'\nimport TwTag from '@tw-element/components/tag'\nimport TwIcon from '@tw-element/components/icon'\n\nimport { twFormKey, twFormItemKey } from '@tw-element/tokens'\nimport { ClickOutside as Clickoutside } from '@tw-element/directives'\nimport { useLocale, useSize } from '@tw-element/hooks'\n\nimport {\n  focusNode,\n  getSibling,\n  addResizeListener,\n  removeResizeListener,\n  isValidComponentSize,\n  isKorean,\n} from '@tw-element/utils'\nimport {\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n  CHANGE_EVENT,\n} from '@tw-element/constants'\nimport { CircleClose, Check, ArrowDown } from '@element-plus/icons-vue'\n\nimport type { Options } from '@tw-element/components/popper'\nimport type { ComputedRef, PropType, Ref } from 'vue'\nimport type { TwFormContext, TwFormItemContext } from '@tw-element/tokens'\nimport type {\n  CascaderValue,\n  CascaderNode,\n  Tag,\n} from '@tw-element/components/cascader-panel'\nimport type { ComponentSize } from '@tw-element/constants'\n\ntype cascaderPanelType = InstanceType<typeof TwCascaderPanel>\ntype tooltipType = InstanceType<typeof ElTooltip>\ntype inputType = InstanceType<typeof TwInput>\ntype suggestionPanelType = InstanceType<typeof TwScrollbar>\n\nconst DEFAULT_INPUT_HEIGHT = 40\n\nconst INPUT_HEIGHT_MAP = {\n  large: 36,\n  default: 32,\n  small: 28,\n}\n\nconst popperOptions: Partial<Options> = {\n  modifiers: [\n    {\n      name: 'arrowPosition',\n      enabled: true,\n      phase: 'main',\n      fn: ({ state }) => {\n        const { modifiersData, placement } = state as any\n        if (['right', 'left', 'bottom', 'top'].includes(placement)) return\n        modifiersData.arrow.x = 35\n      },\n      requires: ['arrow'],\n    },\n  ],\n}\nconst COMPONENT_NAME = 'TwCascader'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  components: {\n    TwCascaderPanel,\n    TwInput,\n    ElTooltip,\n    TwScrollbar,\n    TwTag,\n    TwIcon,\n    CircleClose,\n    Check,\n    ArrowDown,\n  },\n\n  directives: {\n    Clickoutside,\n  },\n\n  props: {\n    ...CommonProps,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    placeholder: {\n      type: String,\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    filterMethod: {\n      type: Function as PropType<\n        (node: CascaderNode, keyword: string) => boolean\n      >,\n      default: (node: CascaderNode, keyword: string) =>\n        node.text.includes(keyword),\n    },\n    separator: {\n      type: String,\n      default: ' / ',\n    },\n    showAllLevels: {\n      type: Boolean,\n      default: true,\n    },\n    collapseTags: Boolean,\n    debounce: {\n      type: Number,\n      default: 300,\n    },\n    beforeFilter: {\n      type: Function as PropType<(value: string) => boolean | Promise<any>>,\n      default: () => true,\n    },\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: undefined,\n    },\n    teleported: useTooltipContentProps.teleported,\n  },\n\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'focus',\n    'blur',\n    'visible-change',\n    'expand-change',\n    'remove-tag',\n  ],\n\n  setup(props, { emit }) {\n    let inputInitialHeight = 0\n    let pressDeleteCount = 0\n\n    const { compatTeleported } = useDeprecateAppendToBody(\n      COMPONENT_NAME,\n      'popperAppendToBody'\n    )\n    const { t } = useLocale()\n    const TwForm = inject(twFormKey, {} as TwFormContext)\n    const TwFormItem = inject(twFormItemKey, {} as TwFormItemContext)\n\n    const tooltipRef: Ref<tooltipType | null> = ref(null)\n    const input: Ref<inputType | null> = ref(null)\n    const tagWrapper = ref(null)\n    const panel: Ref<cascaderPanelType | null> = ref(null)\n    const suggestionPanel: Ref<suggestionPanelType | null> = ref(null)\n    const popperVisible = ref(false)\n    const inputHover = ref(false)\n    const filtering = ref(false)\n    const inputValue = ref('')\n    const searchInputValue = ref('')\n    const presentTags: Ref<Tag[]> = ref([])\n    const suggestions: Ref<CascaderNode[]> = ref([])\n    const isOnComposition = ref(false)\n\n    const isDisabled = computed(() => props.disabled || TwForm.disabled)\n    const inputPlaceholder = computed(\n      () => props.placeholder || t('el.cascader.placeholder')\n    )\n    const realSize = useSize()\n    const tagSize = computed(() =>\n      ['small'].includes(realSize.value) ? 'small' : 'default'\n    )\n    const multiple = computed(() => !!props.props.multiple)\n    const readonly = computed(() => !props.filterable || multiple.value)\n    const searchKeyword = computed(() =>\n      multiple.value ? searchInputValue.value : inputValue.value\n    )\n    const checkedNodes: ComputedRef<CascaderNode[]> = computed(\n      () => panel.value?.checkedNodes || []\n    )\n    const clearBtnVisible = computed(() => {\n      if (\n        !props.clearable ||\n        isDisabled.value ||\n        filtering.value ||\n        !inputHover.value\n      )\n        return false\n\n      return !!checkedNodes.value.length\n    })\n    const presentText = computed(() => {\n      const { showAllLevels, separator } = props\n      const nodes = checkedNodes.value\n      return nodes.length\n        ? multiple.value\n          ? ' '\n          : nodes[0].calcText(showAllLevels, separator)\n        : ''\n    })\n\n    const checkedValue = computed<CascaderValue>({\n      get() {\n        return props.modelValue\n      },\n      set(val) {\n        emit(UPDATE_MODEL_EVENT, val)\n        emit(CHANGE_EVENT, val)\n        TwFormItem.validate?.('change')\n      },\n    })\n\n    const popperPaneRef = computed(() => {\n      return tooltipRef.value?.popperRef?.contentRef\n    })\n\n    const togglePopperVisible = (visible?: boolean) => {\n      if (isDisabled.value) return\n\n      visible = visible ?? !popperVisible.value\n\n      if (visible !== popperVisible.value) {\n        popperVisible.value = visible\n        input.value?.input?.setAttribute('aria-expanded', `${visible}`)\n\n        if (visible) {\n          updatePopperPosition()\n          nextTick(panel.value?.scrollToExpandingNode)\n        } else if (props.filterable) {\n          const { value } = presentText\n          inputValue.value = value\n          searchInputValue.value = value\n        }\n\n        emit('visible-change', visible)\n      }\n    }\n\n    const updatePopperPosition = () => {\n      nextTick(() => {\n        tooltipRef.value?.updatePopper()\n      })\n    }\n\n    const hideSuggestionPanel = () => {\n      filtering.value = false\n    }\n\n    const genTag = (node: CascaderNode): Tag => {\n      const { showAllLevels, separator } = props\n      return {\n        node,\n        key: node.uid,\n        text: node.calcText(showAllLevels, separator),\n        hitState: false,\n        closable: !isDisabled.value && !node.isDisabled,\n      }\n    }\n\n    const deleteTag = (tag: Tag) => {\n      const node = tag.node as CascaderNode\n      node.doCheck(false)\n      panel.value?.calculateCheckedValue()\n      emit('remove-tag', node.valueByOption)\n    }\n\n    const calculatePresentTags = () => {\n      if (!multiple.value) return\n\n      const nodes = checkedNodes.value\n      const tags: Tag[] = []\n\n      if (nodes.length) {\n        const [first, ...rest] = nodes\n        const restCount = rest.length\n\n        tags.push(genTag(first))\n\n        if (restCount) {\n          if (props.collapseTags) {\n            tags.push({\n              key: -1,\n              text: `+ ${restCount}`,\n              closable: false,\n            })\n          } else {\n            rest.forEach((node) => tags.push(genTag(node)))\n          }\n        }\n      }\n\n      presentTags.value = tags\n    }\n\n    const calculateSuggestions = () => {\n      const { filterMethod, showAllLevels, separator } = props\n      const res = panel.value\n        ?.getFlattedNodes(!props.props.checkStrictly)\n        ?.filter((node) => {\n          if (node.isDisabled) return false\n          node.calcText(showAllLevels, separator)\n          return filterMethod(node, searchKeyword.value)\n        })\n\n      if (multiple.value) {\n        presentTags.value.forEach((tag) => {\n          tag.hitState = false\n        })\n      }\n\n      filtering.value = true\n      suggestions.value = res!\n      updatePopperPosition()\n    }\n\n    const focusFirstNode = () => {\n      let firstNode!: HTMLElement\n\n      if (filtering.value && suggestionPanel.value) {\n        firstNode = suggestionPanel.value.$el.querySelector(\n          '.el-cascader__suggestion-item'\n        )\n      } else {\n        firstNode = panel.value?.$el.querySelector(\n          '.el-cascader-node[tabindex=\"-1\"]'\n        )\n      }\n\n      if (firstNode) {\n        firstNode.focus()\n        !filtering.value && firstNode.click()\n      }\n    }\n\n    const updateStyle = () => {\n      const inputInner = input.value?.input\n      const tagWrapperEl = tagWrapper.value\n      const suggestionPanelEl = suggestionPanel.value?.$el\n\n      if (!isClient || !inputInner) return\n\n      if (suggestionPanelEl) {\n        const suggestionList = suggestionPanelEl.querySelector(\n          '.el-cascader__suggestion-list'\n        )\n        suggestionList.style.minWidth = `${inputInner.offsetWidth}px`\n      }\n\n      if (tagWrapperEl) {\n        const { offsetHeight } = tagWrapperEl\n        const height =\n          presentTags.value.length > 0\n            ? `${Math.max(offsetHeight + 6, inputInitialHeight)}px`\n            : `${inputInitialHeight}px`\n        inputInner.style.height = height\n        updatePopperPosition()\n      }\n    }\n\n    const getCheckedNodes = (leafOnly: boolean) => {\n      return panel.value?.getCheckedNodes(leafOnly)\n    }\n\n    const handleExpandChange = (value: CascaderValue) => {\n      updatePopperPosition()\n      emit('expand-change', value)\n    }\n\n    const handleComposition = (event: CompositionEvent) => {\n      const text = (event.target as HTMLInputElement)?.value\n      if (event.type === 'compositionend') {\n        isOnComposition.value = false\n        nextTick(() => handleInput(text))\n      } else {\n        const lastCharacter = text[text.length - 1] || ''\n        isOnComposition.value = !isKorean(lastCharacter)\n      }\n    }\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isOnComposition.value) return\n\n      switch (e.code) {\n        case EVENT_CODE.enter:\n          togglePopperVisible()\n          break\n        case EVENT_CODE.down:\n          togglePopperVisible(true)\n          nextTick(focusFirstNode)\n          e.preventDefault()\n          break\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false)\n          break\n      }\n    }\n\n    const handleClear = () => {\n      panel.value?.clearCheckedNodes()\n      togglePopperVisible(false)\n    }\n\n    const handleSuggestionClick = (node: CascaderNode) => {\n      const { checked } = node\n\n      if (multiple.value) {\n        panel.value?.handleCheckChange(node, !checked, false)\n      } else {\n        !checked && panel.value?.handleCheckChange(node, true, false)\n        togglePopperVisible(false)\n      }\n    }\n\n    const handleSuggestionKeyDown = (e: KeyboardEvent) => {\n      const target = e.target as HTMLElement\n      const { code } = e\n\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down: {\n          const distance = code === EVENT_CODE.up ? -1 : 1\n          focusNode(\n            getSibling(\n              target,\n              distance,\n              '.el-cascader__suggestion-item[tabindex=\"-1\"]'\n            )\n          )\n          break\n        }\n        case EVENT_CODE.enter:\n          target.click()\n          break\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false)\n          break\n      }\n    }\n\n    const handleDelete = () => {\n      const tags = presentTags.value\n      const lastTag = tags[tags.length - 1]\n      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1\n\n      if (!lastTag || !pressDeleteCount) return\n\n      if (lastTag.hitState) {\n        deleteTag(lastTag)\n      } else {\n        lastTag.hitState = true\n      }\n    }\n\n    const handleFilter = debounce(() => {\n      const { value } = searchKeyword\n\n      if (!value) return\n\n      const passed = props.beforeFilter(value)\n\n      if (isPromise(passed)) {\n        passed.then(calculateSuggestions).catch(() => {\n          /* prevent log error */\n        })\n      } else if (passed !== false) {\n        calculateSuggestions()\n      } else {\n        hideSuggestionPanel()\n      }\n    }, props.debounce)\n\n    const handleInput = (val: string, e?: KeyboardEvent) => {\n      !popperVisible.value && togglePopperVisible(true)\n\n      if (e?.isComposing) return\n\n      val ? handleFilter() : hideSuggestionPanel()\n    }\n\n    watch(filtering, updatePopperPosition)\n\n    watch([checkedNodes, isDisabled], calculatePresentTags)\n\n    watch(presentTags, () => {\n      nextTick(() => updateStyle())\n    })\n\n    watch(presentText, (val) => (inputValue.value = val), { immediate: true })\n\n    onMounted(() => {\n      const inputEl = input.value?.$el\n      inputInitialHeight =\n        inputEl?.offsetHeight ||\n        INPUT_HEIGHT_MAP[realSize.value] ||\n        DEFAULT_INPUT_HEIGHT\n      addResizeListener(inputEl, updateStyle)\n    })\n\n    onBeforeUnmount(() => {\n      removeResizeListener(input.value?.$el, updateStyle)\n    })\n\n    return {\n      popperOptions,\n      tooltipRef,\n      popperPaneRef,\n      input,\n      tagWrapper,\n      panel,\n      suggestionPanel,\n      popperVisible,\n      inputHover,\n      inputPlaceholder,\n      filtering,\n      presentText,\n      checkedValue,\n      inputValue,\n      searchInputValue,\n      presentTags,\n      suggestions,\n      isDisabled,\n      isOnComposition,\n      realSize,\n      tagSize,\n      multiple,\n      readonly,\n      clearBtnVisible,\n      // deprecation in ver 2.1.0\n      compatTeleported,\n\n      t,\n      togglePopperVisible,\n      hideSuggestionPanel,\n      deleteTag,\n      focusFirstNode,\n      getCheckedNodes,\n      handleExpandChange,\n      handleKeyDown,\n      handleComposition,\n      handleClear,\n      handleSuggestionClick,\n      handleSuggestionKeyDown,\n      handleDelete,\n      handleInput,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}