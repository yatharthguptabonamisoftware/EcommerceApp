{"ast":null,"code":"import { defineComponent, inject, ref, openBlock, createElementBlock, normalizeClass, withModifiers, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwUploadDrag\",\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"file\"],\n  setup(props, {\n    emit\n  }) {\n    const uploader = inject(\"uploader\", {});\n    const ns = useNamespace(\"upload\");\n    const dragover = ref(false);\n    function onDrop(e) {\n      var _a;\n      if (props.disabled || !uploader) return;\n      const accept = ((_a = uploader.props) == null ? void 0 : _a.accept) || uploader.accept;\n      dragover.value = false;\n      if (!accept) {\n        emit(\"file\", e.dataTransfer.files);\n        return;\n      }\n      emit(\"file\", Array.from(e.dataTransfer.files).filter(file => {\n        const {\n          type,\n          name\n        } = file;\n        const extension = name.indexOf(\".\") > -1 ? `.${name.split(\".\").pop()}` : \"\";\n        const baseType = type.replace(/\\/.*$/, \"\");\n        return accept.split(\",\").map(type2 => type2.trim()).filter(type2 => type2).some(acceptedType => {\n          if (acceptedType.startsWith(\".\")) {\n            return extension === acceptedType;\n          }\n          if (/\\/\\*$/.test(acceptedType)) {\n            return baseType === acceptedType.replace(/\\/\\*$/, \"\");\n          }\n          if (/^[^/]+\\/[^/]+$/.test(acceptedType)) {\n            return type === acceptedType;\n          }\n          return false;\n        });\n      }));\n    }\n    function onDragover() {\n      if (!props.disabled) dragover.value = true;\n    }\n    return {\n      ns,\n      dragover,\n      onDrop,\n      onDragover\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.b(\"dragger\"), _ctx.ns.is(\"dragover\", _ctx.dragover)]),\n    onDrop: _cache[0] || (_cache[0] = withModifiers((...args) => _ctx.onDrop && _ctx.onDrop(...args), [\"prevent\"])),\n    onDragover: _cache[1] || (_cache[1] = withModifiers((...args) => _ctx.onDragover && _ctx.onDragover(...args), [\"prevent\"])),\n    onDragleave: _cache[2] || (_cache[2] = withModifiers($event => _ctx.dragover = false, [\"prevent\"]))\n  }, [renderSlot(_ctx.$slots, \"default\")], 34);\n}\nvar UploadDragger = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { UploadDragger as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","disabled","type","Boolean","default","emits","setup","emit","uploader","inject","ns","useNamespace","dragover","ref","onDrop","e","_a","accept","value","dataTransfer","files","Array","from","filter","file","extension","indexOf","split","pop","baseType","replace","map","type2","trim","some","acceptedType","startsWith","test","onDragover","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","class","normalizeClass","b","is","withModifiers","args"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/upload/src/upload-dragger.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[ns.b('dragger'), ns.is('dragover', dragover)]\"\n    @drop.prevent=\"onDrop\"\n    @dragover.prevent=\"onDragover\"\n    @dragleave.prevent=\"dragover = false\"\n  >\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref, inject } from 'vue'\nimport { useNamespace } from '@tw-element/hooks'\n\nimport type { TwUpload } from './upload.type'\n\nexport default defineComponent({\n  name: 'TwUploadDrag',\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['file'],\n  setup(props, { emit }) {\n    const uploader = inject('uploader', {} as TwUpload)\n    const ns = useNamespace('upload')\n    const dragover = ref(false)\n\n    function onDrop(e: DragEvent) {\n      if (props.disabled || !uploader) return\n      const accept = uploader.props?.accept || uploader.accept\n      dragover.value = false\n      if (!accept) {\n        emit('file', e.dataTransfer.files)\n        return\n      }\n      emit(\n        'file',\n        Array.from(e.dataTransfer.files).filter((file) => {\n          const { type, name } = file\n          const extension =\n            name.indexOf('.') > -1 ? `.${name.split('.').pop()}` : ''\n          const baseType = type.replace(/\\/.*$/, '')\n          return accept\n            .split(',')\n            .map((type) => type.trim())\n            .filter((type) => type)\n            .some((acceptedType) => {\n              if (acceptedType.startsWith('.')) {\n                return extension === acceptedType\n              }\n              if (/\\/\\*$/.test(acceptedType)) {\n                return baseType === acceptedType.replace(/\\/\\*$/, '')\n              }\n              if (/^[^/]+\\/[^/]+$/.test(acceptedType)) {\n                return type === acceptedType\n              }\n              return false\n            })\n        })\n      )\n    }\n\n    function onDragover() {\n      if (!props.disabled) dragover.value = true\n    }\n\n    return {\n      ns,\n      dragover,\n      onDrop,\n      onDragover,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;AAgBA,MAAKA,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO;IACLC,QAAA,EAAU;MACRC,IAAA,EAAMC,OAAA;MACNC,OAAA,EAAS;IAAA;EAAA;EAGbC,KAAA,EAAO,CAAC;EACRC,MAAMN,KAAA,EAAO;IAAEO;EAAA,GAAQ;IACrB,MAAMC,QAAA,GAAWC,MAAA,CAAO,YAAY;IACpC,MAAMC,EAAA,GAAKC,YAAA,CAAa;IACxB,MAAMC,QAAA,GAAWC,GAAA,CAAI;IAErB,SAAAC,OAAgBC,CAAA,EAAc;MAC5B,IAAIC,EAAA;MAA6B,IAAAhB,KAAA,CAAAC,QAAA,KAAAO,QAAA,EACjC;MACA,MAAAS,MAAA,KAAiBD,EAAA,GAAAR,QAAA,CAAAR,KAAA,qBAAAgB,EAAA,CAAAC,MAAA,KAAAT,QAAA,CAAAS,MAAA;MACjBL,QAAA,CAAAM,KAAA;MACE,KAAAD,MAAA;QACAV,IAAA,SAAAQ,CAAA,CAAAI,YAAA,CAAAC,KAAA;QAAA;MAEF;MAGIb,IAAA,SAAAc,KAAA,CAAAC,IAAA,CAAAP,CAAuB,CAAAI,YAAA,CAAAC,KAAA,EAAAG,MAAA,CAAAC,IAAA;QACvB,MAAM;UAAAtB,IAAA;UAAAH;QACJ,IAAKyB,IAAA;QACP,MAAMC,SAAA,GAAA1B,IAAgB,CAAA2B,OAAQ,SAAS,QAAA3B,IAAA,CAAA4B,KAAA,MAAAC,GAAA;QACvC,MAAAC,QACG,GAAA3B,IAAA,CAAA4B,OACI,CAAC;QAGJ,OAAAb,MAAA,CAAAU,KAAiB,MAAAI,GAAA,CAAWC,KAAA,IAAAA,KAAA,CAAAC,IAAA,IAAAV,MAAA,CAAAS,KAAA,IAAAA,KAAA,EAAAE,IAAA,CAAAC,YAAA;UAC1B,IAAAA,YAAA,CAAAC,UAAA;YAAqB,OAAAX,SAAA,KAAAU,YAAA;UAEvB;UACE,YAAAE,IAAA,CAAAF,YAAA;YAAkD,OAAAN,QAAA,KAAAM,YAAA,CAAAL,OAAA;UAEpD;UACE,qBAAAO,IAAA,CAAAF,YAAA;YAAgB,OAAAjC,IAAA,KAAAiC,YAAA;UAElB;UAAO;QAAA;MAAA;IAMjB;IACE,SAAAG,WAAA;MAAqB,KAAAtC,KAAA,CAASC,QAAQ,EAAAW,QAAA,CAAAM,KAAA;IAGxC;IAAO;MAELR,EAAA;MACAE,QAAA;MACAE,MAAA;MAAAwB;IAAA;EAAA;;SAvEIC,YAAAC,IAAA,EAAAC,MAAA,EAAAC,MAAA,EAAOC,MAAA,EAAAC,KAAA,EAAAC,QAAA;EAAa,OAAAC,SAAA,IAAAC,kBAAA;IAEzBC,KAAA,EAAAC,cAAA,EAAAT,IAAA,CAAA9B,EAAA,CAAAwC,CAAA,aAAAV,IAAA,CAAA9B,EAAA,CAAAyC,EAAA,WAAkB,EAAAX,IAAA,CAAA5B,QAAA;IAClBE,MAAA,EAAA2B,MAAA,QAAAA,MAAA,MAAAW,aAAA,KAAAC,IAAA,KAAAb,IAAmB,CAAA1B,MAAA,IAAA0B,IAAA,CAAA1B,MAAA,IAAAuC,IAAA;IAAQf,UAAA,EAAAG,MAAA,QAAAA,MAAA,MAAAW,aAAA,KAAAC,IAAA,KAAAb,IAAA,CAAAF,UAAA,IAAAE,IAAA,CAAAF,UAAA,IAAAe,IAAA;;EAE5B,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}