{"ast":null,"code":"import { defineComponent, ref, computed, resolveComponent, resolveDirective, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, withDirectives, createElementBlock, normalizeClass, normalizeStyle, withModifiers, renderSlot, createElementVNode, toDisplayString, createCommentVNode, vShow } from 'vue';\nimport { Close } from '@element-plus/icons-vue';\nimport { ElOverlay } from '../../overlay/index.mjs';\nimport '../../dialog/index.mjs';\nimport { TwIcon } from '../../icon/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { drawerProps, drawerEmits } from './drawer2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport TrapFocus from '../../../directives/trap-focus/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useDialog } from '../../dialog/src/use-dialog.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwDrawer\",\n  components: {\n    ElOverlay,\n    TwIcon,\n    Close\n  },\n  directives: {\n    TrapFocus\n  },\n  props: drawerProps,\n  emits: drawerEmits,\n  setup(props, ctx) {\n    const drawerRef = ref();\n    const ns = useNamespace(\"drawer\");\n    const isHorizontal = computed(() => props.direction === \"rtl\" || props.direction === \"ltr\");\n    const drawerSize = computed(() => typeof props.size === \"number\" ? `${props.size}px` : props.size);\n    return {\n      ...useDialog(props, ctx, drawerRef),\n      drawerRef,\n      isHorizontal,\n      drawerSize,\n      ns\n    };\n  }\n});\nconst _hoisted_1 = [\"aria-labelledby\", \"aria-label\"];\nconst _hoisted_2 = [\"id\"];\nconst _hoisted_3 = [\"title\"];\nconst _hoisted_4 = [\"aria-label\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_close = resolveComponent(\"close\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_overlay = resolveComponent(\"el-overlay\");\n  const _directive_trap_focus = resolveDirective(\"trap-focus\");\n  return openBlock(), createBlock(Teleport, {\n    to: \"body\",\n    disabled: !_ctx.appendToBody\n  }, [createVNode(Transition, {\n    name: _ctx.ns.b(\"fade\"),\n    onAfterEnter: _ctx.afterEnter,\n    onAfterLeave: _ctx.afterLeave,\n    onBeforeLeave: _ctx.beforeLeave\n  }, {\n    default: withCtx(() => [withDirectives(createVNode(_component_el_overlay, {\n      mask: _ctx.modal,\n      \"overlay-class\": _ctx.modalClass,\n      \"z-index\": _ctx.zIndex,\n      onClick: _ctx.onModalClick\n    }, {\n      default: withCtx(() => [withDirectives((openBlock(), createElementBlock(\"div\", {\n        ref: \"drawerRef\",\n        \"aria-modal\": \"true\",\n        \"aria-labelledby\": _ctx.ns.e(\"title\"),\n        \"aria-label\": _ctx.title,\n        class: normalizeClass([_ctx.ns.b(), _ctx.direction, _ctx.visible && \"open\", _ctx.customClass]),\n        style: normalizeStyle(_ctx.isHorizontal ? \"width: \" + _ctx.drawerSize : \"height: \" + _ctx.drawerSize),\n        role: \"dialog\",\n        onClick: _cache[1] || (_cache[1] = withModifiers(() => {}, [\"stop\"]))\n      }, [_ctx.withHeader ? (openBlock(), createElementBlock(\"header\", {\n        key: 0,\n        id: _ctx.ns.e(\"title\"),\n        class: normalizeClass(_ctx.ns.e(\"header\"))\n      }, [renderSlot(_ctx.$slots, \"title\", {}, () => [createElementVNode(\"span\", {\n        role: \"heading\",\n        title: _ctx.title\n      }, toDisplayString(_ctx.title), 9, _hoisted_3)]), _ctx.showClose ? (openBlock(), createElementBlock(\"button\", {\n        key: 0,\n        \"aria-label\": \"close \" + (_ctx.title || \"drawer\"),\n        class: normalizeClass(_ctx.ns.e(\"close-btn\")),\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClose && _ctx.handleClose(...args))\n      }, [createVNode(_component_el_icon, {\n        class: normalizeClass(_ctx.ns.e(\"close\"))\n      }, {\n        default: withCtx(() => [createVNode(_component_close)]),\n        _: 1\n      }, 8, [\"class\"])], 10, _hoisted_4)) : createCommentVNode(\"v-if\", true)], 10, _hoisted_2)) : createCommentVNode(\"v-if\", true), _ctx.rendered ? (openBlock(), createElementBlock(\"section\", {\n        key: 1,\n        class: normalizeClass(_ctx.ns.e(\"body\"))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2)) : createCommentVNode(\"v-if\", true), _ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", {\n        key: 2,\n        class: normalizeClass(_ctx.ns.e(\"footer\"))\n      }, [renderSlot(_ctx.$slots, \"footer\")], 2)) : createCommentVNode(\"v-if\", true)], 14, _hoisted_1)), [[_directive_trap_focus]])]),\n      _: 3\n    }, 8, [\"mask\", \"overlay-class\", \"z-index\", \"onClick\"]), [[vShow, _ctx.visible]])]),\n    _: 3\n  }, 8, [\"name\", \"onAfterEnter\", \"onAfterLeave\", \"onBeforeLeave\"])], 8, [\"disabled\"]);\n}\nvar Drawer = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Drawer as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","ElOverlay","TwIcon","Close","directives","TrapFocus","props","drawerProps","emits","drawerEmits","setup","ctx","drawerRef","ref","ns","useNamespace","isHorizontal","computed","direction","drawerSize","size","useDialog","openBlock","createBlock","Teleport","to","disabled","_ctx","appendToBody","createVNode","Transition","b","onAfterEnter","afterEnter","onAfterLeave","afterLeave","onBeforeLeave","beforeLeave","withDirectives","_component_el_overlay","mask","modal","modalClass","zIndex","onClick","onModalClick","createElementBlock","e","title","class","normalizeClass","visible","customClass","style","normalizeStyle","role","_cache","withModifiers","withHeader","key","id","renderSlot","$slots","createElementVNode","type","args","handleClose","_component_el_icon","withCtx","_component_close","createCommentVNode","rendered","footer","vShow"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/drawer/src/drawer.vue"],"sourcesContent":["<template>\n  <teleport to=\"body\" :disabled=\"!appendToBody\">\n    <transition\n      :name=\"ns.b('fade')\"\n      @after-enter=\"afterEnter\"\n      @after-leave=\"afterLeave\"\n      @before-leave=\"beforeLeave\"\n    >\n      <el-overlay\n        v-show=\"visible\"\n        :mask=\"modal\"\n        :overlay-class=\"modalClass\"\n        :z-index=\"zIndex\"\n        @click=\"onModalClick\"\n      >\n        <div\n          ref=\"drawerRef\"\n          v-trap-focus\n          aria-modal=\"true\"\n          :aria-labelledby=\"ns.e('title')\"\n          :aria-label=\"title\"\n          :class=\"[ns.b(), direction, visible && 'open', customClass]\"\n          :style=\"\n            isHorizontal ? 'width: ' + drawerSize : 'height: ' + drawerSize\n          \"\n          role=\"dialog\"\n          @click.stop\n        >\n          <header v-if=\"withHeader\" :id=\"ns.e('title')\" :class=\"ns.e('header')\">\n            <slot name=\"title\">\n              <span role=\"heading\" :title=\"title\">\n                {{ title }}\n              </span>\n            </slot>\n            <button\n              v-if=\"showClose\"\n              :aria-label=\"'close ' + (title || 'drawer')\"\n              :class=\"ns.e('close-btn')\"\n              type=\"button\"\n              @click=\"handleClose\"\n            >\n              <el-icon :class=\"ns.e('close')\"><close /></el-icon>\n            </button>\n          </header>\n          <template v-if=\"rendered\">\n            <section :class=\"ns.e('body')\">\n              <slot></slot>\n            </section>\n          </template>\n          <div v-if=\"$slots.footer\" :class=\"ns.e('footer')\">\n            <slot name=\"footer\"></slot>\n          </div>\n        </div>\n      </el-overlay>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue'\nimport { Close } from '@element-plus/icons-vue'\n\nimport { ElOverlay } from '@tw-element/components/overlay'\nimport { useDialog } from '@tw-element/components/dialog'\nimport TwIcon from '@tw-element/components/icon'\nimport { TrapFocus } from '@tw-element/directives'\nimport { useNamespace } from '@tw-element/hooks'\nimport { drawerProps, drawerEmits } from './drawer'\n\nexport default defineComponent({\n  name: 'TwDrawer',\n  components: {\n    ElOverlay,\n    TwIcon,\n    Close,\n  },\n  directives: {\n    TrapFocus,\n  },\n  props: drawerProps,\n  emits: drawerEmits,\n\n  setup(props, ctx) {\n    const drawerRef = ref<HTMLElement>()\n    const ns = useNamespace('drawer')\n\n    const isHorizontal = computed(\n      () => props.direction === 'rtl' || props.direction === 'ltr'\n    )\n    const drawerSize = computed(() =>\n      typeof props.size === 'number' ? `${props.size}px` : props.size\n    )\n\n    return {\n      ...useDialog(props, ctx, drawerRef),\n      drawerRef,\n      isHorizontal,\n      drawerSize,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}