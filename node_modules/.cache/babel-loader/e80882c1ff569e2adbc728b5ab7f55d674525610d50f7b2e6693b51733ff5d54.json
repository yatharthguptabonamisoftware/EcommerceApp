{"ast":null,"code":"import '../../utils/index.mjs';\nimport { addResizeListener, removeResizeListener } from '../../utils/dom/resize-event.mjs';\nconst Resize = {\n  beforeMount(el, binding) {\n    el._handleResize = () => {\n      var _a;\n      el && ((_a = binding.value) == null ? void 0 : _a.call(binding, el));\n    };\n    addResizeListener(el, el._handleResize);\n  },\n  beforeUnmount(el) {\n    removeResizeListener(el, el._handleResize);\n  }\n};\nexport { Resize as default };","map":{"version":3,"names":["Resize","beforeMount","el","binding","_handleResize","_a","value","call","addResizeListener","beforeUnmount","removeResizeListener"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/directives/resize/index.ts"],"sourcesContent":["import { addResizeListener, removeResizeListener } from '@tw-element/utils'\n\nimport type { ObjectDirective, DirectiveBinding } from 'vue'\n\ndeclare interface ResizeEl extends HTMLElement {\n  _handleResize?: () => void\n}\n\nconst Resize: ObjectDirective = {\n  beforeMount(el: ResizeEl, binding: DirectiveBinding) {\n    el._handleResize = () => {\n      el && binding.value?.(el)\n    }\n    addResizeListener(el, el._handleResize)\n  },\n  beforeUnmount(el: ResizeEl) {\n    removeResizeListener(el, el._handleResize)\n  },\n}\n\nexport default Resize\n"],"mappings":";;AACK,MAACA,MAAM,GAAG;EACbC,WAAWA,CAACC,EAAE,EAAEC,OAAO,EAAE;IACvBD,EAAE,CAACE,aAAa,GAAG,MAAM;MACvB,IAAIC,EAAE;MACNH,EAAE,KAAK,CAACG,EAAE,GAAGF,OAAO,CAACG,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,EAAE,CAACE,IAAI,CAACJ,OAAO,EAAED,EAAE,CAAC,CAAC;IAC1E,CAAK;IACDM,iBAAiB,CAACN,EAAE,EAAEA,EAAE,CAACE,aAAa,CAAC;EAC3C,CAAG;EACDK,aAAaA,CAACP,EAAE,EAAE;IAChBQ,oBAAoB,CAACR,EAAE,EAAEA,EAAE,CAACE,aAAa,CAAC;EAC9C;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}