{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, ref, watch, nextTick, openBlock, createElementBlock, normalizeClass, normalizeStyle } from 'vue';\nimport { capitalize } from '@vue/shared';\nimport { useResizeObserver } from '@vueuse/core';\nimport '../../../tokens/index.mjs';\nimport '../../../utils/index.mjs';\nimport { tabBar } from './tab-bar2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { tabsRootContextKey } from '../../../tokens/tabs.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nconst COMPONENT_NAME = \"ElTabBar\";\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  props: tabBar,\n  setup(props) {\n    const instance = getCurrentInstance();\n    const rootTabs = inject(tabsRootContextKey);\n    if (!rootTabs) throwError(COMPONENT_NAME, \"must use with TwTabs\");\n    const bar$ = ref();\n    const barStyle = ref();\n    const getBarStyle = () => {\n      let offset = 0;\n      let tabSize = 0;\n      const sizeName = [\"top\", \"bottom\"].includes(rootTabs.props.tabPosition) ? \"width\" : \"height\";\n      const sizeDir = sizeName === \"width\" ? \"x\" : \"y\";\n      props.tabs.every(tab => {\n        var _a, _b, _c, _d;\n        const $el = (_b = (_a = instance.parent) == null ? void 0 : _a.refs) == null ? void 0 : _b[`tab-${tab.paneName}`];\n        if (!$el) return false;\n        if (!tab.active) {\n          return true;\n        }\n        tabSize = $el[`client${capitalize(sizeName)}`];\n        const position = sizeDir === \"x\" ? \"left\" : \"top\";\n        offset = $el.getBoundingClientRect()[position] - ((_d = (_c = $el.parentElement) == null ? void 0 : _c.getBoundingClientRect()[position]) != null ? _d : 0);\n        const tabStyles = window.getComputedStyle($el);\n        if (sizeName === \"width\") {\n          if (props.tabs.length > 1) {\n            tabSize -= parseFloat(tabStyles.paddingLeft) + parseFloat(tabStyles.paddingRight);\n          }\n          offset += parseFloat(tabStyles.paddingLeft);\n        }\n        return false;\n      });\n      return {\n        [sizeName]: `${tabSize}px`,\n        transform: `translate${capitalize(sizeDir)}(${offset}px)`\n      };\n    };\n    const update = () => barStyle.value = getBarStyle();\n    watch(() => props.tabs, async () => {\n      await nextTick();\n      update();\n    }, {\n      immediate: true\n    });\n    useResizeObserver(bar$, () => update());\n    return {\n      bar$,\n      rootTabs,\n      barStyle,\n      update\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"bar$\",\n    class: normalizeClass([\"el-tabs__active-bar\", `is-${_ctx.rootTabs.props.tabPosition}`]),\n    style: normalizeStyle(_ctx.barStyle)\n  }, null, 6);\n}\nvar TabBar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { TabBar as default };","map":{"version":3,"names":["COMPONENT_NAME","_sfc_main","defineComponent","name","props","tabBar","setup","instance","getCurrentInstance","rootTabs","inject","tabsRootContextKey","throwError","bar$","ref","barStyle","getBarStyle","offset","tabSize","sizeName","includes","tabPosition","sizeDir","tabs","every","tab","_a","_b","_c","_d","$el","parent","refs","paneName","active","capitalize","position","getBoundingClientRect","parentElement","tabStyles","window","getComputedStyle","length","parseFloat","paddingLeft","paddingRight","transform","update","value","watch","nextTick","immediate","useResizeObserver","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","class","normalizeClass"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/tabs/src/tab-bar.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"bar$\"\n    :class=\"['el-tabs__active-bar', `is-${rootTabs.props.tabPosition}`]\"\n    :style=\"barStyle\"\n  ></div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  inject,\n  getCurrentInstance,\n  watch,\n  nextTick,\n  ref,\n} from 'vue'\nimport { capitalize } from '@vue/shared'\nimport { useResizeObserver } from '@vueuse/core'\nimport { tabsRootContextKey } from '@tw-element/tokens'\nimport { throwError } from '@tw-element/utils'\nimport { tabBar } from './tab-bar'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElTabBar'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: tabBar,\n\n  setup(props) {\n    const instance = getCurrentInstance()!\n    const rootTabs = inject(tabsRootContextKey)\n    if (!rootTabs) throwError(COMPONENT_NAME, 'must use with TwTabs')\n\n    const bar$ = ref<HTMLDivElement>()\n    const barStyle = ref()\n\n    const getBarStyle = (): CSSProperties => {\n      let offset = 0\n      let tabSize = 0\n\n      const sizeName = ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n        ? 'width'\n        : 'height'\n      const sizeDir = sizeName === 'width' ? 'x' : 'y'\n\n      props.tabs.every((tab) => {\n        const $el = instance.parent?.refs?.[\n          `tab-${tab.paneName}`\n        ] as HTMLElement\n        if (!$el) return false\n\n        if (!tab.active) {\n          return true\n        }\n\n        tabSize = $el[`client${capitalize(sizeName)}`]\n        const position = sizeDir === 'x' ? 'left' : 'top'\n        offset =\n          $el.getBoundingClientRect()[position] -\n          ($el.parentElement?.getBoundingClientRect()[position] ?? 0)\n        const tabStyles = window.getComputedStyle($el)\n\n        if (sizeName === 'width') {\n          if (props.tabs.length > 1) {\n            tabSize -=\n              parseFloat(tabStyles.paddingLeft) +\n              parseFloat(tabStyles.paddingRight)\n          }\n          offset += parseFloat(tabStyles.paddingLeft)\n        }\n        return false\n      })\n\n      return {\n        [sizeName]: `${tabSize}px`,\n        transform: `translate${capitalize(sizeDir)}(${offset}px)`,\n      }\n    }\n\n    const update = () => (barStyle.value = getBarStyle())\n\n    watch(\n      () => props.tabs,\n      async () => {\n        await nextTick()\n        update()\n      },\n      { immediate: true }\n    )\n    useResizeObserver(bar$, () => update())\n\n    return {\n      bar$,\n      rootTabs,\n      barStyle,\n      update,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;AAwBA,MAAMA,cAAA,GAAiB;AACvB,MAAKC,SAAA,GAAaC,eAAA,CAAa;EAC7BC,IAAA,EAAMH,cAAA;EACNI,KAAA,EAAOC,MAAA;EAEPC,MAAMF,KAAA,EAAO;IACX,MAAMG,QAAA,GAAWC,kBAAA;IACjB,MAAMC,QAAA,GAAWC,MAAA,CAAOC,kBAAA;IACxB,IAAI,CAACF,QAAA,EAAUG,UAAA,CAAWZ,cAAA,EAAgB;IAE1C,MAAMa,IAAA,GAAOC,GAAA;IACb,MAAMC,QAAA,GAAWD,GAAA;IAEjB,MAAME,WAAA,GAAcA,CAAA,KAAqB;MACvC,IAAIC,MAAA,GAAS;MACb,IAAIC,OAAA,GAAU;MAEd,MAAMC,QAAA,GAAW,CAAC,OAAO,UAAUC,QAAA,CAASX,QAAA,CAASL,KAAA,CAAMiB,WAAA,IACvD,UACA;MACJ,MAAMC,OAAA,GAAUH,QAAA,KAAa,UAAU,MAAM;MAE7Cf,KAAA,CAAMmB,IAAA,CAAKC,KAAA,CAAOC,GAAA,IAAQ;QACxB,IAAAC,EAAM,EAAAC,EAAA,EAAMC,EAAA,EAAAC,EAAA;QAGZ,MAAAC,GAAA,IAAAH,EAAA,IAAAD,EAAA,GAAAnB,QAAA,CAAAwB,MAAA,qBAAAL,EAAA,CAAAM,IAAA,qBAAAL,EAAA,QAAAF,GAAA,CAAAQ,QAAA;QAAU,KAAAH,GAAA,EAEV,OAAS;QACP,KAAAL,GAAA,CAAOS,MAAA;UAAA;QAGT;QACAhB,OAAA,GAAAY,GAAA,UAAAK,UAAA,CAAAhB,QAAA,CAA4C;QAC5C,MAAAiB,QAAA,GAAAd,OAAA,yBAEG;QACHL,MAAM,GAAAa,GAAA,CAAAO,qBAAA,GAAAD,QAAA,MAAAP,EAAA,IAAAD,EAAA,GAAAE,GAAA,CAAAQ,aAAA,qBAAAV,EAAA,CAAAS,qBAAA,GAAAD,QAAA,aAAAP,EAAA;QAEN,MAAAU,SAAA,GAAAC,MAAA,CAAAC,gBAAA,CAAAX,GAAA;QACE,IAAAX,QAAU,KAAK,SAAS;UACtB,IAAAf,KAAA,CAAAmB,IAAA,CAAAmB,MAAA,GACa;YACUxB,OAAA,IAAAyB,UAAA,CAAAJ,SAAA,CAAAK,WAAA,IAAAD,UAAA,CAAAJ,SAAA,CAAAM,YAAA;UAEzB;UAA+B5B,MAAA,IAAA0B,UAAA,CAAAJ,SAAA,CAAAK,WAAA;QAEjC;QAAO;MAGT;MAAO;QAEL,CAAAzB,QAAA,MAAAD,OAAuB;QAAuB4B,SAAA,cAAAX,UAAA,CAAAb,OAAA,KAAAL,MAAA;MAAA;IAIlD;IAEA,MACE8B,MAAM,GAAAA,CAAA,KAAAhC,QAAA,CAAAiC,KAAA,GAAAhC,WAAA;IAEJiC,KAAA,OAAA7C,KAAA,CAAAmB,IAAA;MACA,MAAA2B,QAAA;MAAAH,MAAA;IAIJ;MAAAI,SAAA;IAAA;IAEAC,iBAAA,CAAAvC,IAAA,QAAAkC,MAAA;IAAO;MAELlC,IAAA;MACAJ,QAAA;MACAM,QAAA;MAAAgC;IAAA;EAAA;;SA9FEM,YAAAC,IAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,QAAA;EAAM,OACJC,SAAA,IAAAC,kBAAA;IACL/C,GAAA;IAAegD,KAAA,EAAAC,cAAA,+BAAAT,IAAA,CAAA7C,QAAA,CAAAL,KAAA,CAAAiB,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}