{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, toRef, computed, reactive, onMounted, onBeforeUnmount, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createBlock, withCtx, renderSlot, createElementVNode, Fragment } from 'vue';\nimport { TwTooltip } from '../../tooltip/index.mjs';\nimport '../../popper/index.mjs';\nimport '../../../utils/index.mjs';\nimport useMenu from './use-menu.mjs';\nimport { menuItemProps, menuItemEmits } from './menu-item2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { Effect } from '../../popper/src/popper.mjs';\nconst COMPONENT_NAME = \"TwMenuItem\";\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElTooltip: TwTooltip\n  },\n  props: menuItemProps,\n  emits: menuItemEmits,\n  setup(props, {\n    emit\n  }) {\n    const instance = getCurrentInstance();\n    const rootMenu = inject(\"rootMenu\");\n    if (!rootMenu) throwError(COMPONENT_NAME, \"can not inject root menu\");\n    const {\n      parentMenu,\n      paddingStyle,\n      indexPath\n    } = useMenu(instance, toRef(props, \"index\"));\n    const subMenu = inject(`subMenu:${parentMenu.value.uid}`);\n    if (!subMenu) throwError(COMPONENT_NAME, \"can not inject sub menu\");\n    const active = computed(() => props.index === rootMenu.activeIndex);\n    const item = reactive({\n      index: props.index,\n      indexPath,\n      active\n    });\n    const handleClick = () => {\n      if (!props.disabled) {\n        rootMenu.handleMenuItemClick({\n          index: props.index,\n          indexPath: indexPath.value,\n          route: props.route\n        });\n        emit(\"click\", item);\n      }\n    };\n    onMounted(() => {\n      subMenu.addSubMenu(item);\n      rootMenu.addMenuItem(item);\n    });\n    onBeforeUnmount(() => {\n      subMenu.removeSubMenu(item);\n      rootMenu.removeMenuItem(item);\n    });\n    return {\n      Effect,\n      parentMenu,\n      rootMenu,\n      paddingStyle,\n      active,\n      handleClick\n    };\n  }\n});\nconst _hoisted_1 = {\n  style: {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    height: \"100%\",\n    width: \"100%\",\n    display: \"inline-block\",\n    boxSizing: \"border-box\",\n    padding: \"0 20px\"\n  }\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  return openBlock(), createElementBlock(\"li\", {\n    class: normalizeClass([\"el-menu-item\", {\n      \"is-active\": _ctx.active,\n      \"is-disabled\": _ctx.disabled\n    }]),\n    role: \"menuitem\",\n    tabindex: \"-1\",\n    style: normalizeStyle(_ctx.paddingStyle),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [_ctx.parentMenu.type.name === \"TwMenu\" && _ctx.rootMenu.props.collapse && _ctx.$slots.title ? (openBlock(), createBlock(_component_el_tooltip, {\n    key: 0,\n    effect: _ctx.Effect.DARK,\n    placement: \"right\",\n    persistent: \"\"\n  }, {\n    content: withCtx(() => [renderSlot(_ctx.$slots, \"title\")]),\n    default: withCtx(() => [createElementVNode(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\")])]),\n    _: 3\n  }, 8, [\"effect\"])) : (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [renderSlot(_ctx.$slots, \"default\"), renderSlot(_ctx.$slots, \"title\")], 64))], 6);\n}\nvar MenuItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { MenuItem as default };","map":{"version":3,"names":["COMPONENT_NAME","_sfc_main","defineComponent","name","components","ElTooltip","TwTooltip","props","menuItemProps","emits","menuItemEmits","setup","emit","instance","getCurrentInstance","rootMenu","inject","throwError","parentMenu","paddingStyle","indexPath","useMenu","toRef","subMenu","value","uid","active","computed","index","activeIndex","item","reactive","handleClick","disabled","handleMenuItemClick","route","onMounted","addSubMenu","addMenuItem","onBeforeUnmount","removeSubMenu","removeMenuItem","Effect","padding","openBlock","createElementBlock","class","normalizeClass","_ctx","role","tabindex","style","normalizeStyle","onClick","_cache","args","type","collapse","$slots","title","createBlock","_component_el_tooltip","key","effect","DARK","placement","persistent","content","withCtx","renderSlot","createElementVNode","_hoisted_1","Fragment"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/menu/src/menu-item.vue"],"sourcesContent":["<template>\n  <li\n    class=\"el-menu-item\"\n    role=\"menuitem\"\n    tabindex=\"-1\"\n    :style=\"paddingStyle\"\n    :class=\"{\n      'is-active': active,\n      'is-disabled': disabled,\n    }\"\n    @click=\"handleClick\"\n  >\n    <el-tooltip\n      v-if=\"\n        parentMenu.type.name === 'TwMenu' &&\n        rootMenu.props.collapse &&\n        $slots.title\n      \"\n      :effect=\"Effect.DARK\"\n      placement=\"right\"\n      persistent\n    >\n      <template #content>\n        <slot name=\"title\" />\n      </template>\n      <div\n        :style=\"{\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          height: '100%',\n          width: '100%',\n          display: 'inline-block',\n          boxSizing: 'border-box',\n          padding: '0 20px',\n        }\"\n      >\n        <slot />\n      </div>\n    </el-tooltip>\n    <template v-else>\n      <slot />\n      <slot name=\"title\" />\n    </template>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  onMounted,\n  onBeforeUnmount,\n  inject,\n  getCurrentInstance,\n  toRef,\n  reactive,\n} from 'vue'\nimport ElTooltip from '@tw-element/components/tooltip'\nimport { Effect } from '@tw-element/components/popper'\nimport { throwError } from '@tw-element/utils'\nimport useMenu from './use-menu'\nimport { menuItemEmits, menuItemProps } from './menu-item'\n\nimport type { MenuItemRegistered, MenuProvider, SubMenuProvider } from './types'\n\nconst COMPONENT_NAME = 'TwMenuItem'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElTooltip,\n  },\n\n  props: menuItemProps,\n  emits: menuItemEmits,\n\n  setup(props, { emit }) {\n    const instance = getCurrentInstance()!\n    const rootMenu = inject<MenuProvider>('rootMenu')\n    if (!rootMenu) throwError(COMPONENT_NAME, 'can not inject root menu')\n\n    const { parentMenu, paddingStyle, indexPath } = useMenu(\n      instance,\n      toRef(props, 'index')\n    )\n\n    const subMenu = inject<SubMenuProvider>(`subMenu:${parentMenu.value.uid}`)\n    if (!subMenu) throwError(COMPONENT_NAME, 'can not inject sub menu')\n\n    const active = computed(() => props.index === rootMenu.activeIndex)\n    const item: MenuItemRegistered = reactive({\n      index: props.index,\n      indexPath,\n      active,\n    })\n\n    const handleClick = () => {\n      if (!props.disabled) {\n        rootMenu.handleMenuItemClick({\n          index: props.index,\n          indexPath: indexPath.value,\n          route: props.route,\n        })\n        emit('click', item)\n      }\n    }\n\n    onMounted(() => {\n      subMenu.addSubMenu(item)\n      rootMenu.addMenuItem(item)\n    })\n\n    onBeforeUnmount(() => {\n      subMenu.removeSubMenu(item)\n      rootMenu.removeMenuItem(item)\n    })\n\n    return {\n      Effect,\n      parentMenu,\n      rootMenu,\n      paddingStyle,\n      active,\n\n      handleClick,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}