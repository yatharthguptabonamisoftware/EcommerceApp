{"ast":null,"code":"const obtainAllFocusableElements = element => {\n  const nodes = [];\n  const walker = document.createTreeWalker(element, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: node => {\n      const isHiddenInput = node.tagName === \"INPUT\" && node.type === \"hidden\";\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    }\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode);\n  return nodes;\n};\nconst getVisibleElement = (elements, container) => {\n  for (const element of elements) {\n    if (!isHidden(element, container)) return element;\n  }\n};\nconst isHidden = (element, container) => {\n  if (process.env.NODE_ENV === \"test\") return false;\n  if (getComputedStyle(element).visibility === \"hidden\") return true;\n  while (element) {\n    if (container && element === container) return false;\n    if (getComputedStyle(element).display === \"none\") return true;\n    element = element.parentElement;\n  }\n  return false;\n};\nconst getEdges = container => {\n  const focusable = obtainAllFocusableElements(container);\n  const first = getVisibleElement(focusable, container);\n  const last = getVisibleElement(focusable.reverse(), container);\n  return [first, last];\n};\nconst isSelectable = element => {\n  return element instanceof HTMLInputElement && \"select\" in element;\n};\nconst tryFocus = (element, shouldSelect) => {\n  if (element && element.focus) {\n    const prevFocusedElement = document.activeElement;\n    element.focus({\n      preventScroll: true\n    });\n    if (element !== prevFocusedElement && isSelectable(element) && shouldSelect) {\n      element.select();\n    }\n  }\n};\nfunction removeFromStack(list, item) {\n  const copy = [...list];\n  const idx = list.indexOf(item);\n  if (idx !== -1) {\n    copy.splice(idx, 1);\n  }\n  return copy;\n}\nconst createFocusableStack = () => {\n  let stack = [];\n  const push = layer => {\n    const currentLayer = stack[0];\n    if (currentLayer && layer !== currentLayer) {\n      currentLayer.pause();\n    }\n    stack = removeFromStack(stack, layer);\n    stack.unshift(layer);\n  };\n  const remove = layer => {\n    var _a, _b;\n    stack = removeFromStack(stack, layer);\n    (_b = (_a = stack[0]) == null ? void 0 : _a.resume) == null ? void 0 : _b.call(_a);\n  };\n  return {\n    push,\n    remove\n  };\n};\nconst focusFirstDescendant = (elements, shouldSelect = false) => {\n  const prevFocusedElement = document.activeElement;\n  for (const element of elements) {\n    tryFocus(element, shouldSelect);\n    if (document.activeElement !== prevFocusedElement) return;\n  }\n};\nconst focusableStack = createFocusableStack();\nexport { focusFirstDescendant, focusableStack, getEdges, getVisibleElement, isHidden, obtainAllFocusableElements, tryFocus };","map":{"version":3,"names":["obtainAllFocusableElements","element","nodes","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","node","isHiddenInput","tagName","type","disabled","hidden","FILTER_SKIP","tabIndex","FILTER_ACCEPT","nextNode","push","currentNode","getVisibleElement","elements","container","isHidden","process","env","NODE_ENV","getComputedStyle","visibility","display","parentElement","getEdges","focusable","first","last","reverse","isSelectable","HTMLInputElement","tryFocus","shouldSelect","focus","prevFocusedElement","activeElement","preventScroll","select","removeFromStack","list","item","copy","idx","indexOf","splice","createFocusableStack","stack","layer","currentLayer","pause","unshift","remove","_a","_b","resume","call","focusFirstDescendant","focusableStack"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/focus-trap/src/utils.ts"],"sourcesContent":["export type FocusLayer = {\n  paused: boolean\n  pause: () => void\n  resume: () => void\n}\n\nexport type FocusStack = FocusLayer[]\n\nexport const obtainAllFocusableElements = (\n  element: HTMLElement\n): HTMLElement[] => {\n  const nodes: HTMLElement[] = []\n  const walker = document.createTreeWalker(element, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (\n      node: Element & {\n        disabled: boolean\n        hidden: boolean\n        type: string\n        tabIndex: number\n      }\n    ) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden'\n      if (node.disabled || node.hidden || isHiddenInput)\n        return NodeFilter.FILTER_SKIP\n      return node.tabIndex >= 0\n        ? NodeFilter.FILTER_ACCEPT\n        : NodeFilter.FILTER_SKIP\n    },\n  })\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement)\n\n  return nodes\n}\n\nexport const getVisibleElement = (\n  elements: HTMLElement[],\n  container: HTMLElement\n) => {\n  for (const element of elements) {\n    if (!isHidden(element, container)) return element\n  }\n}\n\nexport const isHidden = (element: HTMLElement, container: HTMLElement) => {\n  if (process.env.NODE_ENV === 'test') return false\n  if (getComputedStyle(element).visibility === 'hidden') return true\n\n  while (element) {\n    if (container && element === container) return false\n    if (getComputedStyle(element).display === 'none') return true\n    element = element.parentElement as HTMLElement\n  }\n\n  return false\n}\n\nexport const getEdges = (container: HTMLElement) => {\n  const focusable = obtainAllFocusableElements(container)\n  const first = getVisibleElement(focusable, container)\n  const last = getVisibleElement(focusable.reverse(), container)\n  return [first, last]\n}\n\nconst isSelectable = (\n  element: any\n): element is HTMLInputElement & { select: () => void } => {\n  return element instanceof HTMLInputElement && 'select' in element\n}\n\nexport const tryFocus = (\n  element?: HTMLElement | { focus: () => void } | null,\n  shouldSelect?: boolean\n) => {\n  if (element && element.focus) {\n    const prevFocusedElement = document.activeElement\n    element.focus({ preventScroll: true })\n    if (\n      element !== prevFocusedElement &&\n      isSelectable(element) &&\n      shouldSelect\n    ) {\n      element.select()\n    }\n  }\n}\n\nfunction removeFromStack<T>(list: T[], item: T) {\n  const copy = [...list]\n\n  const idx = list.indexOf(item)\n\n  if (idx !== -1) {\n    copy.splice(idx, 1)\n  }\n  return copy\n}\n\nconst createFocusableStack = () => {\n  let stack = [] as FocusStack\n\n  const push = (layer: FocusLayer) => {\n    const currentLayer = stack[0]\n\n    if (currentLayer && layer !== currentLayer) {\n      currentLayer.pause()\n    }\n\n    stack = removeFromStack(stack, layer)\n    stack.unshift(layer)\n  }\n\n  const remove = (layer: FocusLayer) => {\n    stack = removeFromStack(stack, layer)\n    stack[0]?.resume?.()\n  }\n\n  return {\n    push,\n    remove,\n  }\n}\n\nexport const focusFirstDescendant = (\n  elements: HTMLElement[],\n  shouldSelect = false\n) => {\n  const prevFocusedElement = document.activeElement\n  for (const element of elements) {\n    tryFocus(element, shouldSelect)\n    if (document.activeElement !== prevFocusedElement) return\n  }\n}\n\nexport const focusableStack = createFocusableStack()\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}