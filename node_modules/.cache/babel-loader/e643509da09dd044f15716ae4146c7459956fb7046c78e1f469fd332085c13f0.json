{"ast":null,"code":"import { defineComponent, provide, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, createTextVNode, toDisplayString, createCommentVNode, Fragment, renderList, createBlock } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport DescriptionsRow from './descriptions-row.mjs';\nimport { TwDescriptionsKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwDescriptions\",\n  components: {\n    [DescriptionsRow.name]: DescriptionsRow\n  },\n  props: {\n    border: {\n      type: Boolean,\n      default: false\n    },\n    column: {\n      type: Number,\n      default: 3\n    },\n    direction: {\n      type: String,\n      default: \"horizontal\"\n    },\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    title: {\n      type: String,\n      default: \"\"\n    },\n    extra: {\n      type: String,\n      default: \"\"\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    provide(TwDescriptionsKey, props);\n    const descriptionsSize = useSize();\n    const ns = useNamespace(\"descriptions\");\n    const descriptionKls = computed(() => [ns.b(), ns.is(ns.m(descriptionsSize.value), !!descriptionsSize.value)]);\n    const flattedChildren = children => {\n      const temp = Array.isArray(children) ? children : [children];\n      const res = [];\n      temp.forEach(child => {\n        if (Array.isArray(child.children)) {\n          res.push(...flattedChildren(child.children));\n        } else {\n          res.push(child);\n        }\n      });\n      return res;\n    };\n    const filledNode = (node, span, count, isLast = false) => {\n      if (!node.props) {\n        node.props = {};\n      }\n      if (span > count) {\n        node.props.span = count;\n      }\n      if (isLast) {\n        node.props.span = span;\n      }\n      return node;\n    };\n    const getRows = () => {\n      var _a;\n      const children = flattedChildren((_a = slots.default) == null ? void 0 : _a.call(slots)).filter(node => {\n        var _a2;\n        return ((_a2 = node == null ? void 0 : node.type) == null ? void 0 : _a2.name) === \"TwDescriptionsItem\";\n      });\n      const rows = [];\n      let temp = [];\n      let count = props.column;\n      let totalSpan = 0;\n      children.forEach((node, index) => {\n        var _a2;\n        const span = ((_a2 = node.props) == null ? void 0 : _a2.span) || 1;\n        if (index < children.length - 1) {\n          totalSpan += span > count ? count : span;\n        }\n        if (index === children.length - 1) {\n          const lastSpan = props.column - totalSpan % props.column;\n          temp.push(filledNode(node, lastSpan, count, true));\n          rows.push(temp);\n          return;\n        }\n        if (span < count) {\n          count -= span;\n          temp.push(node);\n        } else {\n          temp.push(filledNode(node, span, count));\n          rows.push(temp);\n          count = props.column;\n          temp = [];\n        }\n      });\n      return rows;\n    };\n    return {\n      descriptionKls,\n      getRows,\n      ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_descriptions_row = resolveComponent(\"el-descriptions-row\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.descriptionKls)\n  }, [_ctx.title || _ctx.extra || _ctx.$slots.title || _ctx.$slots.extra ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"header\"))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"title\"))\n  }, [renderSlot(_ctx.$slots, \"title\", {}, () => [createTextVNode(toDisplayString(_ctx.title), 1)])], 2), createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"extra\"))\n  }, [renderSlot(_ctx.$slots, \"extra\", {}, () => [createTextVNode(toDisplayString(_ctx.extra), 1)])], 2)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"body\"))\n  }, [createElementVNode(\"table\", {\n    class: normalizeClass([_ctx.ns.e(\"table\"), _ctx.ns.is(\"bordered\", _ctx.border)])\n  }, [createElementVNode(\"tbody\", null, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.getRows(), (row, index) => {\n    return openBlock(), createBlock(_component_el_descriptions_row, {\n      key: index,\n      row\n    }, null, 8, [\"row\"]);\n  }), 128))])], 2)], 2)], 2);\n}\nvar Descriptions = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Descriptions as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","DescriptionsRow","props","border","type","Boolean","default","column","Number","direction","String","size","validator","isValidComponentSize","title","extra","setup","slots","provide","TwDescriptionsKey","descriptionsSize","useSize","ns","useNamespace","descriptionKls","computed","b","is","m","value","flattedChildren","children","temp","Array","isArray","res","forEach","child","push","filledNode","node","span","count","isLast","getRows","_a","call","filter","_a2","rows","totalSpan","index","length","lastSpan","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","$slots","class","normalizeClass","e","renderSlot","createTextVNode","toDisplayString","createCommentVNode"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/descriptions/src/index.vue"],"sourcesContent":["<template>\n  <div :class=\"descriptionKls\">\n    <div\n      v-if=\"title || extra || $slots.title || $slots.extra\"\n      :class=\"ns.e('header')\"\n    >\n      <div :class=\"ns.e('title')\">\n        <slot name=\"title\">{{ title }}</slot>\n      </div>\n      <div :class=\"ns.e('extra')\">\n        <slot name=\"extra\">{{ extra }}</slot>\n      </div>\n    </div>\n\n    <div :class=\"ns.e('body')\">\n      <table :class=\"[ns.e('table'), ns.is('bordered', border)]\">\n        <tbody>\n          <template v-for=\"(row, index) in getRows()\" :key=\"index\">\n            <el-descriptions-row :row=\"row\" />\n          </template>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide } from 'vue'\nimport { isValidComponentSize } from '@tw-element/utils'\nimport { useSize, useNamespace } from '@tw-element/hooks'\nimport DescriptionsRow from './descriptions-row.vue'\nimport { TwDescriptionsKey } from './token'\n\nimport type { PropType } from 'vue'\nimport type { ComponentSize } from '@tw-element/constants'\n\nexport default defineComponent({\n  name: 'TwDescriptions',\n  components: {\n    [DescriptionsRow.name]: DescriptionsRow,\n  },\n  props: {\n    border: {\n      type: Boolean,\n      default: false,\n    },\n    column: {\n      type: Number,\n      default: 3,\n    },\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    title: {\n      type: String,\n      default: '',\n    },\n    extra: {\n      type: String,\n      default: '',\n    },\n  },\n  setup(props, { slots }) {\n    provide(TwDescriptionsKey, props)\n\n    const descriptionsSize = useSize()\n    const ns = useNamespace('descriptions')\n\n    const descriptionKls = computed(() => [\n      ns.b(),\n      ns.is(ns.m(descriptionsSize.value), !!descriptionsSize.value),\n    ])\n\n    const flattedChildren = (children) => {\n      const temp = Array.isArray(children) ? children : [children]\n      const res = []\n      temp.forEach((child) => {\n        if (Array.isArray(child.children)) {\n          res.push(...flattedChildren(child.children))\n        } else {\n          res.push(child)\n        }\n      })\n      return res\n    }\n\n    const filledNode = (node, span, count, isLast = false) => {\n      if (!node.props) {\n        node.props = {}\n      }\n      if (span > count) {\n        node.props.span = count\n      }\n      if (isLast) {\n        // set the last span\n        node.props.span = span\n      }\n      return node\n    }\n\n    const getRows = () => {\n      const children = flattedChildren(slots.default?.()).filter(\n        (node) => node?.type?.name === 'TwDescriptionsItem'\n      )\n      const rows = []\n      let temp = []\n      let count = props.column\n      let totalSpan = 0 // all spans number of item\n\n      children.forEach((node, index) => {\n        const span = node.props?.span || 1\n\n        if (index < children.length - 1) {\n          totalSpan += span > count ? count : span\n        }\n\n        if (index === children.length - 1) {\n          // calculate the last item span\n          const lastSpan = props.column - (totalSpan % props.column)\n          temp.push(filledNode(node, lastSpan, count, true))\n          rows.push(temp)\n          return\n        }\n\n        if (span < count) {\n          count -= span\n          temp.push(node)\n        } else {\n          temp.push(filledNode(node, span, count))\n          rows.push(temp)\n          count = props.column\n          temp = []\n        }\n      })\n\n      return rows\n    }\n\n    return {\n      descriptionKls,\n      getRows,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}