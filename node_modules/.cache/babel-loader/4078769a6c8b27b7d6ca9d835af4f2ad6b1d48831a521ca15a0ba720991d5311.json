{"ast":null,"code":"import { getCurrentInstance, ref } from 'vue';\nimport { getKeysMap, getRowIdentity, toggleRowStatus } from '../util.mjs';\nfunction useExpand(watcherData) {\n  const instance = getCurrentInstance();\n  const defaultExpandAll = ref(false);\n  const expandRows = ref([]);\n  const updateExpandRows = () => {\n    const data = watcherData.data.value || [];\n    const rowKey = watcherData.rowKey.value;\n    if (defaultExpandAll.value) {\n      expandRows.value = data.slice();\n    } else if (rowKey) {\n      const expandRowsMap = getKeysMap(expandRows.value, rowKey);\n      expandRows.value = data.reduce((prev, row) => {\n        const rowId = getRowIdentity(row, rowKey);\n        const rowInfo = expandRowsMap[rowId];\n        if (rowInfo) {\n          prev.push(row);\n        }\n        return prev;\n      }, []);\n    } else {\n      expandRows.value = [];\n    }\n  };\n  const toggleRowExpansion = (row, expanded) => {\n    const changed = toggleRowStatus(expandRows.value, row, expanded);\n    if (changed) {\n      instance.emit(\"expand-change\", row, expandRows.value.slice());\n      instance.store.scheduleLayout();\n    }\n  };\n  const setExpandRowKeys = rowKeys => {\n    instance.store.assertRowKey();\n    const data = watcherData.data.value || [];\n    const rowKey = watcherData.rowKey.value;\n    const keysMap = getKeysMap(data, rowKey);\n    expandRows.value = rowKeys.reduce((prev, cur) => {\n      const info = keysMap[cur];\n      if (info) {\n        prev.push(info.row);\n      }\n      return prev;\n    }, []);\n  };\n  const isRowExpanded = row => {\n    const rowKey = watcherData.rowKey.value;\n    if (rowKey) {\n      const expandMap = getKeysMap(expandRows.value, rowKey);\n      return !!expandMap[getRowIdentity(row, rowKey)];\n    }\n    return expandRows.value.indexOf(row) !== -1;\n  };\n  return {\n    updateExpandRows,\n    toggleRowExpansion,\n    setExpandRowKeys,\n    isRowExpanded,\n    states: {\n      expandRows,\n      defaultExpandAll\n    }\n  };\n}\nexport { useExpand as default };","map":{"version":3,"names":["useExpand","watcherData","instance","getCurrentInstance","defaultExpandAll","ref","expandRows","updateExpandRows","data","value","rowKey","slice","expandRowsMap","getKeysMap","reduce","prev","row","rowId","getRowIdentity","rowInfo","push","toggleRowExpansion","expanded","changed","toggleRowStatus","emit","store","scheduleLayout","setExpandRowKeys","rowKeys","assertRowKey","keysMap","cur","info","isRowExpanded","expandMap","indexOf","states"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/table/src/store/expand.ts"],"sourcesContent":["import { ref, getCurrentInstance } from 'vue'\nimport { toggleRowStatus, getKeysMap, getRowIdentity } from '../util'\n\nimport type { Ref } from 'vue'\nimport type { WatcherPropsData } from './index'\nimport type { Table } from '../table/defaults'\n\nfunction useExpand<T>(watcherData: WatcherPropsData<T>) {\n  const instance = getCurrentInstance() as Table<T>\n  const defaultExpandAll = ref(false)\n  const expandRows: Ref<T[]> = ref([])\n  const updateExpandRows = () => {\n    const data = watcherData.data.value || []\n    const rowKey = watcherData.rowKey.value\n    if (defaultExpandAll.value) {\n      expandRows.value = data.slice()\n    } else if (rowKey) {\n      // TODO：这里的代码可以优化\n      const expandRowsMap = getKeysMap(expandRows.value, rowKey)\n      expandRows.value = data.reduce((prev: T[], row: T) => {\n        const rowId = getRowIdentity(row, rowKey)\n        const rowInfo = expandRowsMap[rowId]\n        if (rowInfo) {\n          prev.push(row)\n        }\n        return prev\n      }, [])\n    } else {\n      expandRows.value = []\n    }\n  }\n\n  const toggleRowExpansion = (row: T, expanded?: boolean) => {\n    const changed = toggleRowStatus(expandRows.value, row, expanded)\n    if (changed) {\n      instance.emit('expand-change', row, expandRows.value.slice())\n      instance.store.scheduleLayout()\n    }\n  }\n\n  const setExpandRowKeys = (rowKeys: string[]) => {\n    instance.store.assertRowKey()\n    // TODO：这里的代码可以优化\n    const data = watcherData.data.value || []\n    const rowKey = watcherData.rowKey.value\n    const keysMap = getKeysMap(data, rowKey)\n    expandRows.value = rowKeys.reduce((prev: T[], cur: string) => {\n      const info = keysMap[cur]\n      if (info) {\n        prev.push(info.row)\n      }\n      return prev\n    }, [])\n  }\n\n  const isRowExpanded = (row: T): boolean => {\n    const rowKey = watcherData.rowKey.value\n    if (rowKey) {\n      const expandMap = getKeysMap(expandRows.value, rowKey)\n      return !!expandMap[getRowIdentity(row, rowKey)]\n    }\n    return expandRows.value.indexOf(row) !== -1\n  }\n  return {\n    updateExpandRows,\n    toggleRowExpansion,\n    setExpandRowKeys,\n    isRowExpanded,\n    states: {\n      expandRows,\n      defaultExpandAll,\n    },\n  }\n}\n\nexport default useExpand\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}