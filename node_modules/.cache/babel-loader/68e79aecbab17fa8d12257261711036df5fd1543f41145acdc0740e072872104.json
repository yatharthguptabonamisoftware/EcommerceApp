{"ast":null,"code":"import { markRaw, defineComponent, ref, effectScope, computed, watch, nextTick, onMounted, resolveComponent, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, createElementVNode, normalizeClass, normalizeStyle, withModifiers, createCommentVNode, createElementBlock, Fragment, resolveDynamicComponent, renderList, withDirectives, vShow, renderSlot } from 'vue';\nimport { isNumber, useEventListener } from '@vueuse/core';\nimport { throttle } from 'lodash-unified';\nimport { TwIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { FullScreen, ScaleToOriginal, Close, ArrowLeft, ArrowRight, ZoomOut, ZoomIn, RefreshLeft, RefreshRight } from '@element-plus/icons-vue';\nimport { imageViewerProps, imageViewerEmits } from './image-viewer2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isFirefox } from '../../../utils/browser.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nconst Mode = {\n  CONTAIN: {\n    name: \"contain\",\n    icon: markRaw(FullScreen)\n  },\n  ORIGINAL: {\n    name: \"original\",\n    icon: markRaw(ScaleToOriginal)\n  }\n};\nconst mousewheelEventName = isFirefox() ? \"DOMMouseScroll\" : \"mousewheel\";\nconst _sfc_main = defineComponent({\n  name: \"TwImageViewer\",\n  components: {\n    TwIcon,\n    Close,\n    ArrowLeft,\n    ArrowRight,\n    ZoomOut,\n    ZoomIn,\n    RefreshLeft,\n    RefreshRight\n  },\n  props: imageViewerProps,\n  emits: imageViewerEmits,\n  setup(props, {\n    emit\n  }) {\n    const {\n      t\n    } = useLocale();\n    const ns = useNamespace(\"image-viewer\");\n    const {\n      nextZIndex\n    } = useZIndex();\n    const wrapper = ref();\n    const imgRefs = ref([]);\n    const scopeEventListener = effectScope();\n    const loading = ref(true);\n    const index = ref(props.initialIndex);\n    const mode = ref(Mode.CONTAIN);\n    const transform = ref({\n      scale: 1,\n      deg: 0,\n      offsetX: 0,\n      offsetY: 0,\n      enableTransition: false\n    });\n    const isSingle = computed(() => {\n      const {\n        urlList\n      } = props;\n      return urlList.length <= 1;\n    });\n    const isFirst = computed(() => {\n      return index.value === 0;\n    });\n    const isLast = computed(() => {\n      return index.value === props.urlList.length - 1;\n    });\n    const currentImg = computed(() => {\n      return props.urlList[index.value];\n    });\n    const imgStyle = computed(() => {\n      const {\n        scale,\n        deg,\n        offsetX,\n        offsetY,\n        enableTransition\n      } = transform.value;\n      let translateX = offsetX / scale;\n      let translateY = offsetY / scale;\n      switch (deg % 360) {\n        case 90:\n        case -270:\n          ;\n          [translateX, translateY] = [translateY, -translateX];\n          break;\n        case 180:\n        case -180:\n          ;\n          [translateX, translateY] = [-translateX, -translateY];\n          break;\n        case 270:\n        case -90:\n          ;\n          [translateX, translateY] = [-translateY, translateX];\n          break;\n      }\n      const style = {\n        transform: `scale(${scale}) rotate(${deg}deg) translate(${translateX}px, ${translateY}px)`,\n        transition: enableTransition ? \"transform .3s\" : \"\"\n      };\n      if (mode.value.name === Mode.CONTAIN.name) {\n        style.maxWidth = style.maxHeight = \"100%\";\n      }\n      return style;\n    });\n    const computedZIndex = computed(() => {\n      return isNumber(props.zIndex) ? props.zIndex : nextZIndex();\n    });\n    function hide() {\n      unregisterEventListener();\n      emit(\"close\");\n    }\n    function registerEventListener() {\n      const keydownHandler = throttle(e => {\n        switch (e.code) {\n          case EVENT_CODE.esc:\n            hide();\n            break;\n          case EVENT_CODE.space:\n            toggleMode();\n            break;\n          case EVENT_CODE.left:\n            prev();\n            break;\n          case EVENT_CODE.up:\n            handleActions(\"zoomIn\");\n            break;\n          case EVENT_CODE.right:\n            next();\n            break;\n          case EVENT_CODE.down:\n            handleActions(\"zoomOut\");\n            break;\n        }\n      });\n      const mousewheelHandler = throttle(e => {\n        const delta = e.wheelDelta ? e.wheelDelta : -e.detail;\n        if (delta > 0) {\n          handleActions(\"zoomIn\", {\n            zoomRate: 1.2,\n            enableTransition: false\n          });\n        } else {\n          handleActions(\"zoomOut\", {\n            zoomRate: 1.2,\n            enableTransition: false\n          });\n        }\n      });\n      scopeEventListener.run(() => {\n        useEventListener(document, \"keydown\", keydownHandler);\n        useEventListener(document, mousewheelEventName, mousewheelHandler);\n      });\n    }\n    function unregisterEventListener() {\n      scopeEventListener.stop();\n    }\n    function handleImgLoad() {\n      loading.value = false;\n    }\n    function handleImgError(e) {\n      loading.value = false;\n      e.target.alt = t(\"el.image.error\");\n    }\n    function handleMouseDown(e) {\n      if (loading.value || e.button !== 0 || !wrapper.value) return;\n      transform.value.enableTransition = false;\n      const {\n        offsetX,\n        offsetY\n      } = transform.value;\n      const startX = e.pageX;\n      const startY = e.pageY;\n      const dragHandler = throttle(ev => {\n        transform.value = {\n          ...transform.value,\n          offsetX: offsetX + ev.pageX - startX,\n          offsetY: offsetY + ev.pageY - startY\n        };\n      });\n      const removeMousemove = useEventListener(document, \"mousemove\", dragHandler);\n      useEventListener(document, \"mouseup\", () => {\n        removeMousemove();\n      });\n      e.preventDefault();\n    }\n    function reset() {\n      transform.value = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false\n      };\n    }\n    function toggleMode() {\n      if (loading.value) return;\n      const modeNames = Object.keys(Mode);\n      const modeValues = Object.values(Mode);\n      const currentMode = mode.value.name;\n      const index2 = modeValues.findIndex(i => i.name === currentMode);\n      const nextIndex = (index2 + 1) % modeNames.length;\n      mode.value = Mode[modeNames[nextIndex]];\n      reset();\n    }\n    function prev() {\n      if (isFirst.value && !props.infinite) return;\n      const len = props.urlList.length;\n      index.value = (index.value - 1 + len) % len;\n    }\n    function next() {\n      if (isLast.value && !props.infinite) return;\n      const len = props.urlList.length;\n      index.value = (index.value + 1) % len;\n    }\n    function handleActions(action, options = {}) {\n      if (loading.value) return;\n      const {\n        zoomRate,\n        rotateDeg,\n        enableTransition\n      } = {\n        zoomRate: 1.4,\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options\n      };\n      switch (action) {\n        case \"zoomOut\":\n          if (transform.value.scale > 0.2) {\n            transform.value.scale = parseFloat((transform.value.scale / zoomRate).toFixed(3));\n          }\n          break;\n        case \"zoomIn\":\n          if (transform.value.scale < 7) {\n            transform.value.scale = parseFloat((transform.value.scale * zoomRate).toFixed(3));\n          }\n          break;\n        case \"clockwise\":\n          transform.value.deg += rotateDeg;\n          break;\n        case \"anticlockwise\":\n          transform.value.deg -= rotateDeg;\n          break;\n      }\n      transform.value.enableTransition = enableTransition;\n    }\n    watch(currentImg, () => {\n      nextTick(() => {\n        const $img = imgRefs.value[0];\n        if (!($img == null ? void 0 : $img.complete)) {\n          loading.value = true;\n        }\n      });\n    });\n    watch(index, val => {\n      reset();\n      emit(\"switch\", val);\n    });\n    onMounted(() => {\n      var _a, _b;\n      registerEventListener();\n      (_b = (_a = wrapper.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    });\n    return {\n      index,\n      wrapper,\n      imgRefs,\n      isSingle,\n      isFirst,\n      isLast,\n      currentImg,\n      imgStyle,\n      mode,\n      computedZIndex,\n      handleActions,\n      prev,\n      next,\n      hide,\n      toggleMode,\n      handleImgLoad,\n      handleImgError,\n      handleMouseDown,\n      ns\n    };\n  }\n});\nconst _hoisted_1 = [\"src\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_close = resolveComponent(\"close\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_arrow_left = resolveComponent(\"arrow-left\");\n  const _component_arrow_right = resolveComponent(\"arrow-right\");\n  const _component_zoom_out = resolveComponent(\"zoom-out\");\n  const _component_zoom_in = resolveComponent(\"zoom-in\");\n  const _component_refresh_left = resolveComponent(\"refresh-left\");\n  const _component_refresh_right = resolveComponent(\"refresh-right\");\n  return openBlock(), createBlock(Teleport, {\n    to: \"body\",\n    disabled: !_ctx.teleported\n  }, [createVNode(Transition, {\n    name: \"viewer-fade\",\n    appear: \"\"\n  }, {\n    default: withCtx(() => [createElementVNode(\"div\", {\n      ref: \"wrapper\",\n      tabindex: -1,\n      class: normalizeClass(_ctx.ns.e(\"wrapper\")),\n      style: normalizeStyle({\n        zIndex: _ctx.computedZIndex\n      })\n    }, [createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.e(\"mask\")),\n      onClick: _cache[0] || (_cache[0] = withModifiers($event => _ctx.hideOnClickModal && _ctx.hide(), [\"self\"]))\n    }, null, 2), createCommentVNode(\" CLOSE \"), createElementVNode(\"span\", {\n      class: normalizeClass([_ctx.ns.e(\"btn\"), _ctx.ns.e(\"close\")]),\n      onClick: _cache[1] || (_cache[1] = (...args) => _ctx.hide && _ctx.hide(...args))\n    }, [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_close)]),\n      _: 1\n    })], 2), createCommentVNode(\" ARROW \"), !_ctx.isSingle ? (openBlock(), createElementBlock(Fragment, {\n      key: 0\n    }, [createElementVNode(\"span\", {\n      class: normalizeClass([_ctx.ns.e(\"btn\"), _ctx.ns.e(\"prev\"), _ctx.ns.is(\"disabled\", !_ctx.infinite && _ctx.isFirst)]),\n      onClick: _cache[2] || (_cache[2] = (...args) => _ctx.prev && _ctx.prev(...args))\n    }, [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_arrow_left)]),\n      _: 1\n    })], 2), createElementVNode(\"span\", {\n      class: normalizeClass([_ctx.ns.e(\"btn\"), _ctx.ns.e(\"next\"), _ctx.ns.is(\"disabled\", !_ctx.infinite && _ctx.isLast)]),\n      onClick: _cache[3] || (_cache[3] = (...args) => _ctx.next && _ctx.next(...args))\n    }, [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_arrow_right)]),\n      _: 1\n    })], 2)], 64)) : createCommentVNode(\"v-if\", true), createCommentVNode(\" ACTIONS \"), createElementVNode(\"div\", {\n      class: normalizeClass([_ctx.ns.e(\"btn\"), _ctx.ns.e(\"actions\")])\n    }, [createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.e(\"actions__inner\"))\n    }, [createVNode(_component_el_icon, {\n      onClick: _cache[4] || (_cache[4] = $event => _ctx.handleActions(\"zoomOut\"))\n    }, {\n      default: withCtx(() => [createVNode(_component_zoom_out)]),\n      _: 1\n    }), createVNode(_component_el_icon, {\n      onClick: _cache[5] || (_cache[5] = $event => _ctx.handleActions(\"zoomIn\"))\n    }, {\n      default: withCtx(() => [createVNode(_component_zoom_in)]),\n      _: 1\n    }), createElementVNode(\"i\", {\n      class: normalizeClass(_ctx.ns.e(\"actions__divider\"))\n    }, null, 2), createVNode(_component_el_icon, {\n      onClick: _ctx.toggleMode\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.mode.icon)))]),\n      _: 1\n    }, 8, [\"onClick\"]), createElementVNode(\"i\", {\n      class: normalizeClass(_ctx.ns.e(\"actions__divider\"))\n    }, null, 2), createVNode(_component_el_icon, {\n      onClick: _cache[6] || (_cache[6] = $event => _ctx.handleActions(\"anticlockwise\"))\n    }, {\n      default: withCtx(() => [createVNode(_component_refresh_left)]),\n      _: 1\n    }), createVNode(_component_el_icon, {\n      onClick: _cache[7] || (_cache[7] = $event => _ctx.handleActions(\"clockwise\"))\n    }, {\n      default: withCtx(() => [createVNode(_component_refresh_right)]),\n      _: 1\n    })], 2)], 2), createCommentVNode(\" CANVAS \"), createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.e(\"canvas\"))\n    }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.urlList, (url, i) => {\n      return withDirectives((openBlock(), createElementBlock(\"img\", {\n        ref_for: true,\n        ref: el => _ctx.imgRefs[i] = el,\n        key: url,\n        src: url,\n        style: normalizeStyle(_ctx.imgStyle),\n        class: normalizeClass(_ctx.ns.e(\"img\")),\n        onLoad: _cache[8] || (_cache[8] = (...args) => _ctx.handleImgLoad && _ctx.handleImgLoad(...args)),\n        onError: _cache[9] || (_cache[9] = (...args) => _ctx.handleImgError && _ctx.handleImgError(...args)),\n        onMousedown: _cache[10] || (_cache[10] = (...args) => _ctx.handleMouseDown && _ctx.handleMouseDown(...args))\n      }, null, 46, _hoisted_1)), [[vShow, i === _ctx.index]]);\n    }), 128))], 2), renderSlot(_ctx.$slots, \"default\")], 6)]),\n    _: 3\n  })], 8, [\"disabled\"]);\n}\nvar ImageViewer = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { ImageViewer as default };","map":{"version":3,"names":["Mode","CONTAIN","name","icon","markRaw","FullScreen","ORIGINAL","ScaleToOriginal","mousewheelEventName","isFirefox","_sfc_main","defineComponent","components","TwIcon","Close","ArrowLeft","ArrowRight","ZoomOut","ZoomIn","RefreshLeft","RefreshRight","props","imageViewerProps","emits","imageViewerEmits","setup","emit","t","useLocale","ns","useNamespace","nextZIndex","useZIndex","wrapper","ref","imgRefs","scopeEventListener","effectScope","loading","index","initialIndex","mode","transform","scale","deg","offsetX","offsetY","enableTransition","isSingle","computed","urlList","length","isFirst","value","isLast","currentImg","imgStyle","translateX","translateY","style","transition","maxWidth","maxHeight","computedZIndex","isNumber","zIndex","hide","unregisterEventListener","registerEventListener","keydownHandler","throttle","e","code","EVENT_CODE","esc","space","toggleMode","left","prev","up","handleActions","right","next","down","mousewheelHandler","delta","wheelDelta","detail","zoomRate","run","useEventListener","document","stop","handleImgLoad","handleImgError","target","alt","handleMouseDown","button","startX","pageX","startY","pageY","dragHandler","ev","removeMousemove","preventDefault","reset","modeNames","Object","keys","modeValues","values","currentMode","index2","findIndex","i","nextIndex","infinite","len","action","options","rotateDeg","parseFloat","toFixed","watch","nextTick","$img","complete","val","onMounted","_a","_b","focus","call","openBlock","createBlock","Teleport","to","createVNode","Transition","default","withCtx","createElementVNode","tabindex","class","normalizeClass","_ctx","createCommentVNode","_component_el_icon","createElementBlock","Fragment","key","onClick","ref_for","el","url","src","normalizeStyle","onLoad","_cache","args","onError","_hoisted_1"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/image-viewer/src/image-viewer.vue"],"sourcesContent":["<template>\n  <teleport to=\"body\" :disabled=\"!teleported\">\n    <transition name=\"viewer-fade\" appear>\n      <div\n        ref=\"wrapper\"\n        :tabindex=\"-1\"\n        :class=\"ns.e('wrapper')\"\n        :style=\"{ zIndex: computedZIndex }\"\n      >\n        <div :class=\"ns.e('mask')\" @click.self=\"hideOnClickModal && hide()\" />\n\n        <!-- CLOSE -->\n        <span :class=\"[ns.e('btn'), ns.e('close')]\" @click=\"hide\">\n          <el-icon><close /></el-icon>\n        </span>\n\n        <!-- ARROW -->\n        <template v-if=\"!isSingle\">\n          <span\n            :class=\"[\n              ns.e('btn'),\n              ns.e('prev'),\n              ns.is('disabled', !infinite && isFirst),\n            ]\"\n            @click=\"prev\"\n          >\n            <el-icon><arrow-left /></el-icon>\n          </span>\n          <span\n            :class=\"[\n              ns.e('btn'),\n              ns.e('next'),\n              ns.is('disabled', !infinite && isLast),\n            ]\"\n            @click=\"next\"\n          >\n            <el-icon><arrow-right /></el-icon>\n          </span>\n        </template>\n        <!-- ACTIONS -->\n        <div :class=\"[ns.e('btn'), ns.e('actions')]\">\n          <div :class=\"ns.e('actions__inner')\">\n            <el-icon @click=\"handleActions('zoomOut')\">\n              <zoom-out />\n            </el-icon>\n            <el-icon @click=\"handleActions('zoomIn')\">\n              <zoom-in />\n            </el-icon>\n            <i :class=\"ns.e('actions__divider')\"></i>\n            <el-icon @click=\"toggleMode\">\n              <component :is=\"mode.icon\" />\n            </el-icon>\n            <i :class=\"ns.e('actions__divider')\"></i>\n            <el-icon @click=\"handleActions('anticlockwise')\">\n              <refresh-left />\n            </el-icon>\n            <el-icon @click=\"handleActions('clockwise')\">\n              <refresh-right />\n            </el-icon>\n          </div>\n        </div>\n        <!-- CANVAS -->\n        <div :class=\"ns.e('canvas')\">\n          <img\n            v-for=\"(url, i) in urlList\"\n            v-show=\"i === index\"\n            :ref=\"(el) => (imgRefs[i] = el)\"\n            :key=\"url\"\n            :src=\"url\"\n            :style=\"imgStyle\"\n            :class=\"ns.e('img')\"\n            @load=\"handleImgLoad\"\n            @error=\"handleImgError\"\n            @mousedown=\"handleMouseDown\"\n          />\n        </div>\n        <slot />\n      </div>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  ref,\n  onMounted,\n  watch,\n  nextTick,\n  effectScope,\n  markRaw,\n} from 'vue'\nimport { useEventListener, isNumber } from '@vueuse/core'\nimport { throttle } from 'lodash-unified'\nimport TwIcon from '@tw-element/components/icon'\nimport { useLocale, useNamespace, useZIndex } from '@tw-element/hooks'\nimport { EVENT_CODE } from '@tw-element/constants'\nimport { isFirefox } from '@tw-element/utils'\nimport {\n  Close,\n  ArrowLeft,\n  ArrowRight,\n  ZoomOut,\n  ZoomIn,\n  RefreshLeft,\n  RefreshRight,\n  FullScreen,\n  ScaleToOriginal,\n} from '@element-plus/icons-vue'\nimport { imageViewerProps, imageViewerEmits } from './image-viewer'\n\nimport type { CSSProperties } from 'vue'\n\nconst Mode = {\n  CONTAIN: {\n    name: 'contain',\n    icon: markRaw(FullScreen),\n  },\n  ORIGINAL: {\n    name: 'original',\n    icon: markRaw(ScaleToOriginal),\n  },\n}\n\nconst mousewheelEventName = isFirefox() ? 'DOMMouseScroll' : 'mousewheel'\nexport type ImageViewerAction =\n  | 'zoomIn'\n  | 'zoomOut'\n  | 'clockwise'\n  | 'anticlockwise'\n\nexport default defineComponent({\n  name: 'TwImageViewer',\n  components: {\n    TwIcon,\n    Close,\n    ArrowLeft,\n    ArrowRight,\n    ZoomOut,\n    ZoomIn,\n    RefreshLeft,\n    RefreshRight,\n  },\n  props: imageViewerProps,\n  emits: imageViewerEmits,\n\n  setup(props, { emit }) {\n    const { t } = useLocale()\n    const ns = useNamespace('image-viewer')\n    const { nextZIndex } = useZIndex()\n    const wrapper = ref<HTMLDivElement>()\n    const imgRefs = ref<any[]>([])\n\n    const scopeEventListener = effectScope()\n\n    const loading = ref(true)\n    const index = ref(props.initialIndex)\n    const mode = ref(Mode.CONTAIN)\n    const transform = ref({\n      scale: 1,\n      deg: 0,\n      offsetX: 0,\n      offsetY: 0,\n      enableTransition: false,\n    })\n\n    const isSingle = computed(() => {\n      const { urlList } = props\n      return urlList.length <= 1\n    })\n\n    const isFirst = computed(() => {\n      return index.value === 0\n    })\n\n    const isLast = computed(() => {\n      return index.value === props.urlList.length - 1\n    })\n\n    const currentImg = computed(() => {\n      return props.urlList[index.value]\n    })\n\n    const imgStyle = computed(() => {\n      const { scale, deg, offsetX, offsetY, enableTransition } = transform.value\n      let translateX = offsetX / scale\n      let translateY = offsetY / scale\n\n      switch (deg % 360) {\n        case 90:\n        case -270:\n          ;[translateX, translateY] = [translateY, -translateX]\n          break\n        case 180:\n        case -180:\n          ;[translateX, translateY] = [-translateX, -translateY]\n          break\n        case 270:\n        case -90:\n          ;[translateX, translateY] = [-translateY, translateX]\n          break\n      }\n\n      const style: CSSProperties = {\n        transform: `scale(${scale}) rotate(${deg}deg) translate(${translateX}px, ${translateY}px)`,\n        transition: enableTransition ? 'transform .3s' : '',\n      }\n      if (mode.value.name === Mode.CONTAIN.name) {\n        style.maxWidth = style.maxHeight = '100%'\n      }\n      return style\n    })\n\n    const computedZIndex = computed(() => {\n      return isNumber(props.zIndex) ? props.zIndex : nextZIndex()\n    })\n\n    function hide() {\n      unregisterEventListener()\n      emit('close')\n    }\n\n    function registerEventListener() {\n      const keydownHandler = throttle((e: KeyboardEvent) => {\n        switch (e.code) {\n          // ESC\n          case EVENT_CODE.esc:\n            hide()\n            break\n          // SPACE\n          case EVENT_CODE.space:\n            toggleMode()\n            break\n          // LEFT_ARROW\n          case EVENT_CODE.left:\n            prev()\n            break\n          // UP_ARROW\n          case EVENT_CODE.up:\n            handleActions('zoomIn')\n            break\n          // RIGHT_ARROW\n          case EVENT_CODE.right:\n            next()\n            break\n          // DOWN_ARROW\n          case EVENT_CODE.down:\n            handleActions('zoomOut')\n            break\n        }\n      })\n      const mousewheelHandler = throttle(\n        (e: WheelEvent | any /* TODO: wheelDelta is deprecated */) => {\n          const delta = e.wheelDelta ? e.wheelDelta : -e.detail\n          if (delta > 0) {\n            handleActions('zoomIn', {\n              zoomRate: 1.2,\n              enableTransition: false,\n            })\n          } else {\n            handleActions('zoomOut', {\n              zoomRate: 1.2,\n              enableTransition: false,\n            })\n          }\n        }\n      )\n\n      scopeEventListener.run(() => {\n        useEventListener(document, 'keydown', keydownHandler)\n        useEventListener(document, mousewheelEventName, mousewheelHandler)\n      })\n    }\n\n    function unregisterEventListener() {\n      scopeEventListener.stop()\n    }\n\n    function handleImgLoad() {\n      loading.value = false\n    }\n\n    function handleImgError(e: Event) {\n      loading.value = false\n      ;(e.target as HTMLImageElement).alt = t('el.image.error')\n    }\n\n    function handleMouseDown(e: MouseEvent) {\n      if (loading.value || e.button !== 0 || !wrapper.value) return\n      transform.value.enableTransition = false\n\n      const { offsetX, offsetY } = transform.value\n      const startX = e.pageX\n      const startY = e.pageY\n\n      const dragHandler = throttle((ev: MouseEvent) => {\n        transform.value = {\n          ...transform.value,\n          offsetX: offsetX + ev.pageX - startX,\n          offsetY: offsetY + ev.pageY - startY,\n        }\n      })\n      const removeMousemove = useEventListener(\n        document,\n        'mousemove',\n        dragHandler\n      )\n      useEventListener(document, 'mouseup', () => {\n        removeMousemove()\n      })\n\n      e.preventDefault()\n    }\n\n    function reset() {\n      transform.value = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false,\n      }\n    }\n\n    function toggleMode() {\n      if (loading.value) return\n\n      const modeNames = Object.keys(Mode)\n      const modeValues = Object.values(Mode)\n      const currentMode = mode.value.name\n      const index = modeValues.findIndex((i) => i.name === currentMode)\n      const nextIndex = (index + 1) % modeNames.length\n      mode.value = Mode[modeNames[nextIndex]]\n      reset()\n    }\n\n    function prev() {\n      if (isFirst.value && !props.infinite) return\n      const len = props.urlList.length\n      index.value = (index.value - 1 + len) % len\n    }\n\n    function next() {\n      if (isLast.value && !props.infinite) return\n      const len = props.urlList.length\n      index.value = (index.value + 1) % len\n    }\n\n    function handleActions(action: ImageViewerAction, options = {}) {\n      if (loading.value) return\n      const { zoomRate, rotateDeg, enableTransition } = {\n        zoomRate: 1.4,\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options,\n      }\n      switch (action) {\n        case 'zoomOut':\n          if (transform.value.scale > 0.2) {\n            transform.value.scale = parseFloat(\n              (transform.value.scale / zoomRate).toFixed(3)\n            )\n          }\n          break\n        case 'zoomIn':\n          if (transform.value.scale < 7) {\n            transform.value.scale = parseFloat(\n              (transform.value.scale * zoomRate).toFixed(3)\n            )\n          }\n          break\n        case 'clockwise':\n          transform.value.deg += rotateDeg\n          break\n        case 'anticlockwise':\n          transform.value.deg -= rotateDeg\n          break\n      }\n      transform.value.enableTransition = enableTransition\n    }\n\n    watch(currentImg, () => {\n      nextTick(() => {\n        const $img = imgRefs.value[0]\n        if (!$img?.complete) {\n          loading.value = true\n        }\n      })\n    })\n\n    watch(index, (val) => {\n      reset()\n      emit('switch', val)\n    })\n\n    onMounted(() => {\n      registerEventListener()\n      // add tabindex then wrapper can be focusable via Javascript\n      // focus wrapper so arrow key can't cause inner scroll behavior underneath\n      wrapper.value?.focus?.()\n    })\n\n    return {\n      index,\n      wrapper,\n      imgRefs,\n      isSingle,\n      isFirst,\n      isLast,\n      currentImg,\n      imgStyle,\n      mode,\n      computedZIndex,\n      handleActions,\n      prev,\n      next,\n      hide,\n      toggleMode,\n      handleImgLoad,\n      handleImgError,\n      handleMouseDown,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}