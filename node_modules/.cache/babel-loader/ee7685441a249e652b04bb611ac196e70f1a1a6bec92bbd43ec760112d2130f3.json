{"ast":null,"code":"import { defineComponent, reactive, computed, toRefs, provide, watch, ref, onMounted, nextTick, onBeforeUnmount, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, createVNode, createBlock, createCommentVNode, Fragment, renderList } from 'vue';\nimport { TwInputNumber } from '../../input-number/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport SliderButton from './button.mjs';\nimport _sfc_main$1 from './marker.mjs';\nimport { useMarks } from './useMarks.mjs';\nimport { useSlide } from './useSlide.mjs';\nimport { useStops } from './useStops.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { on, off } from '../../../utils/dom/event.mjs';\nconst _sfc_main = defineComponent({\n  name: \"TwSlider\",\n  components: {\n    TwInputNumber,\n    SliderButton,\n    SliderMarker: _sfc_main$1\n  },\n  props: {\n    modelValue: {\n      type: [Number, Array],\n      default: 0\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    showInput: {\n      type: Boolean,\n      default: false\n    },\n    showInputControls: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    inputSize: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    showStops: {\n      type: Boolean,\n      default: false\n    },\n    showTooltip: {\n      type: Boolean,\n      default: true\n    },\n    formatTooltip: {\n      type: Function,\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    range: {\n      type: Boolean,\n      default: false\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    height: {\n      type: String,\n      default: \"\"\n    },\n    debounce: {\n      type: Number,\n      default: 300\n    },\n    label: {\n      type: String,\n      default: void 0\n    },\n    tooltipClass: {\n      type: String,\n      default: void 0\n    },\n    marks: Object\n  },\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT],\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"slider\");\n    const initData = reactive({\n      firstValue: 0,\n      secondValue: 0,\n      oldValue: 0,\n      dragging: false,\n      sliderSize: 1\n    });\n    const {\n      TwFormItem,\n      slider,\n      firstButton,\n      secondButton,\n      sliderDisabled,\n      minValue,\n      maxValue,\n      runwayStyle,\n      barStyle,\n      resetSize,\n      emitChange,\n      onSliderClick,\n      setFirstValue,\n      setSecondValue\n    } = useSlide(props, initData, emit);\n    const {\n      stops,\n      getStopStyle\n    } = useStops(props, initData, minValue, maxValue);\n    const sliderWrapperSize = useSize();\n    const sliderInputSize = computed(() => props.inputSize || sliderWrapperSize.value);\n    const sliderKls = computed(() => [ns.b(), ns.m(sliderWrapperSize.value), ns.is(\"vertical\", props.vertical), {\n      [ns.m(\"with-input\")]: props.showInput\n    }]);\n    const markList = useMarks(props);\n    useWatch(props, initData, minValue, maxValue, emit, TwFormItem);\n    const precision = computed(() => {\n      const precisions = [props.min, props.max, props.step].map(item => {\n        const decimal = `${item}`.split(\".\")[1];\n        return decimal ? decimal.length : 0;\n      });\n      return Math.max.apply(null, precisions);\n    });\n    const {\n      sliderWrapper\n    } = useLifecycle(props, initData, resetSize);\n    const {\n      firstValue,\n      secondValue,\n      oldValue,\n      dragging,\n      sliderSize\n    } = toRefs(initData);\n    const updateDragging = val => {\n      initData.dragging = val;\n    };\n    provide(\"SliderProvider\", {\n      ...toRefs(props),\n      sliderSize,\n      disabled: sliderDisabled,\n      precision,\n      emitChange,\n      resetSize,\n      updateDragging\n    });\n    return {\n      ns,\n      firstValue,\n      secondValue,\n      oldValue,\n      dragging,\n      sliderSize,\n      slider,\n      firstButton,\n      secondButton,\n      sliderDisabled,\n      runwayStyle,\n      barStyle,\n      emitChange,\n      onSliderClick,\n      getStopStyle,\n      setFirstValue,\n      setSecondValue,\n      stops,\n      markList,\n      sliderWrapper,\n      sliderWrapperSize,\n      sliderInputSize,\n      sliderKls\n    };\n  }\n});\nconst useWatch = (props, initData, minValue, maxValue, emit, TwFormItem) => {\n  const _emit = val => {\n    emit(UPDATE_MODEL_EVENT, val);\n    emit(INPUT_EVENT, val);\n  };\n  const valueChanged = () => {\n    if (props.range) {\n      return ![minValue.value, maxValue.value].every((item, index) => item === initData.oldValue[index]);\n    } else {\n      return props.modelValue !== initData.oldValue;\n    }\n  };\n  const setValues = () => {\n    var _a, _b;\n    if (props.min > props.max) {\n      throwError(\"Slider\", \"min should not be greater than max.\");\n      return;\n    }\n    const val = props.modelValue;\n    if (props.range && Array.isArray(val)) {\n      if (val[1] < props.min) {\n        _emit([props.min, props.min]);\n      } else if (val[0] > props.max) {\n        _emit([props.max, props.max]);\n      } else if (val[0] < props.min) {\n        _emit([props.min, val[1]]);\n      } else if (val[1] > props.max) {\n        _emit([val[0], props.max]);\n      } else {\n        initData.firstValue = val[0];\n        initData.secondValue = val[1];\n        if (valueChanged()) {\n          (_a = TwFormItem.validate) == null ? void 0 : _a.call(TwFormItem, \"change\");\n          initData.oldValue = val.slice();\n        }\n      }\n    } else if (!props.range && typeof val === \"number\" && !isNaN(val)) {\n      if (val < props.min) {\n        _emit(props.min);\n      } else if (val > props.max) {\n        _emit(props.max);\n      } else {\n        initData.firstValue = val;\n        if (valueChanged()) {\n          (_b = TwFormItem.validate) == null ? void 0 : _b.call(TwFormItem, \"change\");\n          initData.oldValue = val;\n        }\n      }\n    }\n  };\n  setValues();\n  watch(() => initData.dragging, val => {\n    if (!val) {\n      setValues();\n    }\n  });\n  watch(() => props.modelValue, (val, oldVal) => {\n    if (initData.dragging || Array.isArray(val) && Array.isArray(oldVal) && val.every((item, index) => item === oldVal[index]) && initData.firstValue === val[0] && initData.secondValue === val[1]) {\n      return;\n    }\n    setValues();\n  }, {\n    deep: true\n  });\n  watch(() => [props.min, props.max], () => {\n    setValues();\n  });\n};\nconst useLifecycle = (props, initData, resetSize) => {\n  const sliderWrapper = ref(null);\n  onMounted(async () => {\n    let valuetext;\n    if (props.range) {\n      if (Array.isArray(props.modelValue)) {\n        initData.firstValue = Math.max(props.min, props.modelValue[0]);\n        initData.secondValue = Math.min(props.max, props.modelValue[1]);\n      } else {\n        initData.firstValue = props.min;\n        initData.secondValue = props.max;\n      }\n      initData.oldValue = [initData.firstValue, initData.secondValue];\n      valuetext = `${initData.firstValue}-${initData.secondValue}`;\n    } else {\n      if (typeof props.modelValue !== \"number\" || isNaN(props.modelValue)) {\n        initData.firstValue = props.min;\n      } else {\n        initData.firstValue = Math.min(props.max, Math.max(props.min, props.modelValue));\n      }\n      initData.oldValue = initData.firstValue;\n      valuetext = initData.firstValue;\n    }\n    sliderWrapper.value.setAttribute(\"aria-valuetext\", valuetext);\n    sliderWrapper.value.setAttribute(\"aria-label\", props.label ? props.label : `slider between ${props.min} and ${props.max}`);\n    on(window, \"resize\", resetSize);\n    await nextTick();\n    resetSize();\n  });\n  onBeforeUnmount(() => {\n    off(window, \"resize\", resetSize);\n  });\n  return {\n    sliderWrapper\n  };\n};\nconst _hoisted_1 = [\"aria-valuemin\", \"aria-valuemax\", \"aria-orientation\", \"aria-disabled\"];\nconst _hoisted_2 = {\n  key: 1\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_slider_button = resolveComponent(\"slider-button\");\n  const _component_slider_marker = resolveComponent(\"slider-marker\");\n  const _component_el_input_number = resolveComponent(\"el-input-number\");\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"sliderWrapper\",\n    class: normalizeClass(_ctx.sliderKls),\n    role: \"slider\",\n    \"aria-valuemin\": _ctx.min,\n    \"aria-valuemax\": _ctx.max,\n    \"aria-orientation\": _ctx.vertical ? \"vertical\" : \"horizontal\",\n    \"aria-disabled\": _ctx.sliderDisabled\n  }, [createElementVNode(\"div\", {\n    ref: \"slider\",\n    class: normalizeClass([_ctx.ns.e(\"runway\"), {\n      \"show-input\": _ctx.showInput && !_ctx.range,\n      disabled: _ctx.sliderDisabled\n    }]),\n    style: normalizeStyle(_ctx.runwayStyle),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onSliderClick && _ctx.onSliderClick(...args))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"bar\")),\n    style: normalizeStyle(_ctx.barStyle)\n  }, null, 6), createVNode(_component_slider_button, {\n    ref: \"firstButton\",\n    \"model-value\": _ctx.firstValue,\n    vertical: _ctx.vertical,\n    \"tooltip-class\": _ctx.tooltipClass,\n    \"onUpdate:modelValue\": _ctx.setFirstValue\n  }, null, 8, [\"model-value\", \"vertical\", \"tooltip-class\", \"onUpdate:modelValue\"]), _ctx.range ? (openBlock(), createBlock(_component_slider_button, {\n    key: 0,\n    ref: \"secondButton\",\n    \"model-value\": _ctx.secondValue,\n    vertical: _ctx.vertical,\n    \"tooltip-class\": _ctx.tooltipClass,\n    \"onUpdate:modelValue\": _ctx.setSecondValue\n  }, null, 8, [\"model-value\", \"vertical\", \"tooltip-class\", \"onUpdate:modelValue\"])) : createCommentVNode(\"v-if\", true), _ctx.showStops ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.stops, (item, key) => {\n    return openBlock(), createElementBlock(\"div\", {\n      key,\n      class: normalizeClass(_ctx.ns.e(\"stop\")),\n      style: normalizeStyle(_ctx.getStopStyle(item))\n    }, null, 6);\n  }), 128))])) : createCommentVNode(\"v-if\", true), _ctx.markList.length > 0 ? (openBlock(), createElementBlock(Fragment, {\n    key: 2\n  }, [createElementVNode(\"div\", null, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.markList, (item, key) => {\n    return openBlock(), createElementBlock(\"div\", {\n      key,\n      style: normalizeStyle(_ctx.getStopStyle(item.position)),\n      class: normalizeClass([_ctx.ns.e(\"stop\"), _ctx.ns.e(\"marks-stop\")])\n    }, null, 6);\n  }), 128))]), createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"marks\"))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.markList, (item, key) => {\n    return openBlock(), createBlock(_component_slider_marker, {\n      key,\n      mark: item.mark,\n      style: normalizeStyle(_ctx.getStopStyle(item.position))\n    }, null, 8, [\"mark\", \"style\"]);\n  }), 128))], 2)], 64)) : createCommentVNode(\"v-if\", true)], 6), _ctx.showInput && !_ctx.range ? (openBlock(), createBlock(_component_el_input_number, {\n    key: 0,\n    ref: \"input\",\n    \"model-value\": _ctx.firstValue,\n    class: normalizeClass(_ctx.ns.e(\"input\")),\n    step: _ctx.step,\n    disabled: _ctx.sliderDisabled,\n    controls: _ctx.showInputControls,\n    min: _ctx.min,\n    max: _ctx.max,\n    debounce: _ctx.debounce,\n    size: _ctx.sliderInputSize,\n    \"onUpdate:modelValue\": _ctx.setFirstValue,\n    onChange: _ctx.emitChange\n  }, null, 8, [\"model-value\", \"class\", \"step\", \"disabled\", \"controls\", \"min\", \"max\", \"debounce\", \"size\", \"onUpdate:modelValue\", \"onChange\"])) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\nvar Slider = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Slider as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","TwInputNumber","SliderButton","SliderMarker","_sfc_main$1","props","modelValue","type","Number","Array","default","min","max","step","showInput","Boolean","showInputControls","size","String","validator","isValidComponentSize","inputSize","showStops","showTooltip","formatTooltip","Function","disabled","range","vertical","height","debounce","label","tooltipClass","marks","Object","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","INPUT_EVENT","setup","emit","ns","useNamespace","initData","reactive","firstValue","secondValue","oldValue","dragging","sliderSize","TwFormItem","slider","firstButton","secondButton","sliderDisabled","minValue","maxValue","runwayStyle","barStyle","resetSize","emitChange","onSliderClick","setFirstValue","setSecondValue","useSlide","stops","getStopStyle","useStops","sliderWrapperSize","useSize","sliderInputSize","computed","value","sliderKls","b","m","is","markList","useMarks","useWatch","precision","precisions","map","item","decimal","split","length","Math","apply","sliderWrapper","useLifecycle","toRefs","updateDragging","val","provide","_emit","valueChanged","every","index","setValues","_a","_b","throwError","isArray","validate","call","slice","isNaN","watch","oldVal","deep","ref","onMounted","valuetext","setAttribute","on","window","nextTick","onBeforeUnmount","off","openBlock","createElementBlock","class","normalizeClass","_ctx","role","createElementVNode","style","normalizeStyle","e","createVNode","_component_slider_button","key","createCommentVNode","_hoisted_2","Fragment","position","createBlock","_component_slider_marker","mark","controls"],"sources":["/home/bonami/Desktop/Projects/ECommerce/packages/components/slider/src/index.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"sliderWrapper\"\n    :class=\"sliderKls\"\n    role=\"slider\"\n    :aria-valuemin=\"min\"\n    :aria-valuemax=\"max\"\n    :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\"\n    :aria-disabled=\"sliderDisabled\"\n  >\n    <div\n      ref=\"slider\"\n      :class=\"[\n        ns.e('runway'),\n        { 'show-input': showInput && !range, disabled: sliderDisabled },\n      ]\"\n      :style=\"runwayStyle\"\n      @click=\"onSliderClick\"\n    >\n      <div :class=\"ns.e('bar')\" :style=\"barStyle\"></div>\n      <slider-button\n        ref=\"firstButton\"\n        :model-value=\"firstValue\"\n        :vertical=\"vertical\"\n        :tooltip-class=\"tooltipClass\"\n        @update:model-value=\"setFirstValue\"\n      />\n      <slider-button\n        v-if=\"range\"\n        ref=\"secondButton\"\n        :model-value=\"secondValue\"\n        :vertical=\"vertical\"\n        :tooltip-class=\"tooltipClass\"\n        @update:model-value=\"setSecondValue\"\n      />\n      <div v-if=\"showStops\">\n        <div\n          v-for=\"(item, key) in stops\"\n          :key=\"key\"\n          :class=\"ns.e('stop')\"\n          :style=\"getStopStyle(item)\"\n        ></div>\n      </div>\n      <template v-if=\"markList.length > 0\">\n        <div>\n          <div\n            v-for=\"(item, key) in markList\"\n            :key=\"key\"\n            :style=\"getStopStyle(item.position)\"\n            :class=\"[ns.e('stop'), ns.e('marks-stop')]\"\n          ></div>\n        </div>\n        <div :class=\"ns.e('marks')\">\n          <slider-marker\n            v-for=\"(item, key) in markList\"\n            :key=\"key\"\n            :mark=\"item.mark\"\n            :style=\"getStopStyle(item.position)\"\n          />\n        </div>\n      </template>\n    </div>\n    <el-input-number\n      v-if=\"showInput && !range\"\n      ref=\"input\"\n      :model-value=\"firstValue\"\n      :class=\"ns.e('input')\"\n      :step=\"step\"\n      :disabled=\"sliderDisabled\"\n      :controls=\"showInputControls\"\n      :min=\"min\"\n      :max=\"max\"\n      :debounce=\"debounce\"\n      :size=\"sliderInputSize\"\n      @update:model-value=\"setFirstValue\"\n      @change=\"emitChange\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport TwInputNumber from '@tw-element/components/input-number'\nimport {\n  UPDATE_MODEL_EVENT,\n  CHANGE_EVENT,\n  INPUT_EVENT,\n} from '@tw-element/constants'\nimport { off, on, throwError, isValidComponentSize } from '@tw-element/utils'\nimport { useNamespace, useSize } from '@tw-element/hooks'\nimport SliderButton from './button.vue'\nimport SliderMarker from './marker.vue'\nimport { useMarks } from './useMarks'\nimport { useSlide } from './useSlide'\nimport { useStops } from './useStops'\n\nimport type { PropType, Ref } from 'vue'\nimport type { ComponentSize } from '@tw-element/constants'\nimport type { Nullable } from '@tw-element/utils'\n\nexport default defineComponent({\n  name: 'TwSlider',\n\n  components: {\n    TwInputNumber,\n    SliderButton,\n    SliderMarker,\n  },\n\n  props: {\n    modelValue: {\n      type: [Number, Array] as PropType<number | number[]>,\n      default: 0,\n    },\n    min: {\n      type: Number,\n      default: 0,\n    },\n    max: {\n      type: Number,\n      default: 100,\n    },\n    step: {\n      type: Number,\n      default: 1,\n    },\n    showInput: {\n      type: Boolean,\n      default: false,\n    },\n    showInputControls: {\n      type: Boolean,\n      default: true,\n    },\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    inputSize: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    showStops: {\n      type: Boolean,\n      default: false,\n    },\n    showTooltip: {\n      type: Boolean,\n      default: true,\n    },\n    formatTooltip: {\n      type: Function as PropType<(val: number) => number | string>,\n      default: undefined,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    range: {\n      type: Boolean,\n      default: false,\n    },\n    vertical: {\n      type: Boolean,\n      default: false,\n    },\n    height: {\n      type: String,\n      default: '',\n    },\n    debounce: {\n      type: Number,\n      default: 300,\n    },\n    label: {\n      type: String,\n      default: undefined,\n    },\n    tooltipClass: {\n      type: String,\n      default: undefined,\n    },\n    marks: Object,\n  },\n\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT],\n\n  setup(props, { emit }) {\n    const ns = useNamespace('slider')\n    const initData = reactive({\n      firstValue: 0,\n      secondValue: 0,\n      oldValue: 0,\n      dragging: false,\n      sliderSize: 1,\n    })\n\n    const {\n      TwFormItem,\n      slider,\n      firstButton,\n      secondButton,\n      sliderDisabled,\n      minValue,\n      maxValue,\n      runwayStyle,\n      barStyle,\n      resetSize,\n      emitChange,\n      onSliderClick,\n      setFirstValue,\n      setSecondValue,\n    } = useSlide(props, initData, emit)\n\n    const { stops, getStopStyle } = useStops(\n      props,\n      initData,\n      minValue,\n      maxValue\n    )\n\n    const sliderWrapperSize = useSize()\n    const sliderInputSize = computed(\n      () => props.inputSize || sliderWrapperSize.value\n    )\n\n    const sliderKls = computed(() => [\n      ns.b(),\n      ns.m(sliderWrapperSize.value),\n      ns.is('vertical', props.vertical),\n      { [ns.m('with-input')]: props.showInput },\n    ])\n\n    const markList = useMarks(props)\n\n    useWatch(props, initData, minValue, maxValue, emit, TwFormItem)\n\n    const precision = computed(() => {\n      const precisions = [props.min, props.max, props.step].map((item) => {\n        const decimal = `${item}`.split('.')[1]\n        return decimal ? decimal.length : 0\n      })\n      return Math.max.apply(null, precisions)\n    })\n\n    const { sliderWrapper } = useLifecycle(props, initData, resetSize)\n\n    const { firstValue, secondValue, oldValue, dragging, sliderSize } =\n      toRefs(initData)\n\n    const updateDragging = (val: boolean) => {\n      initData.dragging = val\n    }\n\n    provide('SliderProvider', {\n      ...toRefs(props),\n      sliderSize,\n      disabled: sliderDisabled,\n      precision,\n      emitChange,\n      resetSize,\n      updateDragging,\n    })\n\n    return {\n      ns,\n      firstValue,\n      secondValue,\n      oldValue,\n      dragging,\n      sliderSize,\n\n      slider,\n      firstButton,\n      secondButton,\n      sliderDisabled,\n      runwayStyle,\n      barStyle,\n      emitChange,\n      onSliderClick,\n      getStopStyle,\n      setFirstValue,\n      setSecondValue,\n\n      stops,\n      markList,\n\n      sliderWrapper,\n      sliderWrapperSize,\n      sliderInputSize,\n      sliderKls,\n    }\n  },\n})\n\nconst useWatch = (props, initData, minValue, maxValue, emit, TwFormItem) => {\n  const _emit = (val: number | number[]) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emit(INPUT_EVENT, val)\n  }\n\n  const valueChanged = () => {\n    if (props.range) {\n      return ![minValue.value, maxValue.value].every(\n        (item, index) => item === initData.oldValue[index]\n      )\n    } else {\n      return props.modelValue !== initData.oldValue\n    }\n  }\n\n  const setValues = () => {\n    if (props.min > props.max) {\n      throwError('Slider', 'min should not be greater than max.')\n      return\n    }\n    const val = props.modelValue\n    if (props.range && Array.isArray(val)) {\n      if (val[1] < props.min) {\n        _emit([props.min, props.min])\n      } else if (val[0] > props.max) {\n        _emit([props.max, props.max])\n      } else if (val[0] < props.min) {\n        _emit([props.min, val[1]])\n      } else if (val[1] > props.max) {\n        _emit([val[0], props.max])\n      } else {\n        initData.firstValue = val[0]\n        initData.secondValue = val[1]\n        if (valueChanged()) {\n          TwFormItem.validate?.('change')\n          initData.oldValue = val.slice()\n        }\n      }\n    } else if (!props.range && typeof val === 'number' && !isNaN(val)) {\n      if (val < props.min) {\n        _emit(props.min)\n      } else if (val > props.max) {\n        _emit(props.max)\n      } else {\n        initData.firstValue = val\n        if (valueChanged()) {\n          TwFormItem.validate?.('change')\n          initData.oldValue = val\n        }\n      }\n    }\n  }\n\n  setValues()\n\n  watch(\n    () => initData.dragging,\n    (val) => {\n      if (!val) {\n        setValues()\n      }\n    }\n  )\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (\n        initData.dragging ||\n        (Array.isArray(val) &&\n          Array.isArray(oldVal) &&\n          val.every((item, index) => item === oldVal[index]) &&\n          initData.firstValue === val[0] &&\n          initData.secondValue === val[1])\n      ) {\n        return\n      }\n      setValues()\n    },\n    {\n      deep: true,\n    }\n  )\n\n  watch(\n    () => [props.min, props.max],\n    () => {\n      setValues()\n    }\n  )\n}\n\nconst useLifecycle = (props, initData, resetSize) => {\n  const sliderWrapper: Ref<Nullable<HTMLElement>> = ref(null)\n\n  onMounted(async () => {\n    let valuetext\n    if (props.range) {\n      if (Array.isArray(props.modelValue)) {\n        initData.firstValue = Math.max(props.min, props.modelValue[0])\n        initData.secondValue = Math.min(props.max, props.modelValue[1])\n      } else {\n        initData.firstValue = props.min\n        initData.secondValue = props.max\n      }\n      initData.oldValue = [initData.firstValue, initData.secondValue]\n      valuetext = `${initData.firstValue}-${initData.secondValue}`\n    } else {\n      if (typeof props.modelValue !== 'number' || isNaN(props.modelValue)) {\n        initData.firstValue = props.min\n      } else {\n        initData.firstValue = Math.min(\n          props.max,\n          Math.max(props.min, props.modelValue)\n        )\n      }\n      initData.oldValue = initData.firstValue\n      valuetext = initData.firstValue\n    }\n\n    sliderWrapper.value.setAttribute('aria-valuetext', valuetext)\n\n    // label screen reader\n    sliderWrapper.value.setAttribute(\n      'aria-label',\n      props.label ? props.label : `slider between ${props.min} and ${props.max}`\n    )\n\n    on(window, 'resize', resetSize)\n\n    await nextTick()\n    resetSize()\n  })\n\n  onBeforeUnmount(() => {\n    off(window, 'resize', resetSize)\n  })\n\n  return {\n    sliderWrapper,\n  }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}